2021-07-27 00:06:14,339 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 00:06:14,339 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 00:06:14,339 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 00:06:14,339 - DEBUG : -------- PyXLL config --------
2021-07-27 00:06:14,348 - DEBUG : [LOG]
2021-07-27 00:06:14,348 - DEBUG : encoding = utf-8
2021-07-27 00:06:14,348 - DEBUG : file = pyxll.20210727.log
2021-07-27 00:06:14,348 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 00:06:14,348 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 00:06:14,348 - DEBUG : verbosity = debug
2021-07-27 00:06:14,348 - DEBUG : 
2021-07-27 00:06:14,348 - DEBUG : [PYTHON]
2021-07-27 00:06:14,348 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 00:06:14,348 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 00:06:14,348 - DEBUG : 
2021-07-27 00:06:14,348 - DEBUG : [PYXLL]
2021-07-27 00:06:14,348 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 00:06:14,348 - DEBUG : developer_mode = 1
2021-07-27 00:06:14,348 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 00:06:14,348 - DEBUG : modules = 
2021-07-27 00:06:14,348 - DEBUG :     misc
2021-07-27 00:06:14,348 - DEBUG :     worksheetfuncs
2021-07-27 00:06:14,348 - DEBUG :     menus
2021-07-27 00:06:14,348 - DEBUG :     callbacks
2021-07-27 00:06:14,348 - DEBUG :     custom_task_panes
2021-07-27 00:06:14,348 - DEBUG :     test
2021-07-27 00:06:14,348 - DEBUG :     ribbon_functions
2021-07-27 00:06:14,349 - DEBUG :     debugging
2021-07-27 00:06:14,349 - DEBUG :     meta_variables
2021-07-27 00:06:14,349 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 00:06:14,349 - DEBUG : ------------------------------
2021-07-27 00:06:14,349 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 00:06:14,349 - DEBUG : Initializing PyXLL Python module.
2021-07-27 00:06:14,349 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 00:06:14,355 - DEBUG : PyXLL Python module initialized.
2021-07-27 00:06:14,362 - DEBUG : Functions will not be cancellable by default.
2021-07-27 00:06:14,364 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 00:06:14,364 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 00:06:14,425 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 00:06:14,425 - DEBUG : Reloading misc
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 00:06:14,440 - DEBUG : Reloaded misc
2021-07-27 00:06:14,440 - DEBUG : Reloading worksheetfuncs
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 00:06:14,440 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 00:06:14,440 - DEBUG : Reloaded worksheetfuncs
2021-07-27 00:06:14,440 - DEBUG : Reloading menus
2021-07-27 00:06:14,440 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 00:06:14,440 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 00:06:14,440 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 00:06:14,440 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 00:06:14,440 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 00:06:14,440 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 00:06:14,448 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 00:06:14,448 - DEBUG : Reloaded menus
2021-07-27 00:06:14,448 - DEBUG : Reloading callbacks
2021-07-27 00:06:14,448 - DEBUG : Reloaded callbacks
2021-07-27 00:06:14,448 - DEBUG : Reloading custom_task_panes
2021-07-27 00:06:14,449 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 00:06:14,449 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 00:06:14,449 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 00:06:14,449 - DEBUG : Reloaded custom_task_panes
2021-07-27 00:06:14,449 - DEBUG : Reloading test
2021-07-27 00:06:14,449 - DEBUG : Reloaded test
2021-07-27 00:06:14,449 - DEBUG : Reloading meta_variables
2021-07-27 00:06:14,463 - DEBUG : Reloaded meta_variables
2021-07-27 00:06:14,464 - DEBUG : Reloading dependency error_functions
2021-07-27 00:06:14,493 - DEBUG : Reloaded dependency error_functions
2021-07-27 00:06:14,493 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 00:06:14,494 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 00:06:14,495 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 00:06:14,495 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 00:06:14,495 - DEBUG : Reloading dependency examples
2021-07-27 00:06:14,495 - DEBUG : Reloaded dependency examples
2021-07-27 00:06:14,495 - DEBUG : Reloading ribbon_functions
2021-07-27 00:06:14,503 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000187FA3CE550>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000187FA435070>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000187FA442070>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000187FA4CD9A0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000187FA47BCA0>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000187FA4C5160>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000187FA463670>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000187FA4C5FA0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000187FA4B8DC0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000187FA4A9AF0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000187FA4A9100>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000187FA4913A0>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000187FA4263D0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000187FA4979D0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000187FA3CE550>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000187FA435070>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000187FA442070>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000187FA4CD9A0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000187FA47BCA0>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000187FA4C5160>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000187FA463670>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000187FA4C5FA0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000187FA4B8DC0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000187FA4A9AF0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000187FA4A9100>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000187FA4913A0>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000187FA4263D0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000187FA4979D0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 00:06:14,503 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 00:06:14,505 - DEBUG : Reloaded ribbon_functions
2021-07-27 00:06:14,505 - DEBUG : Reloading debugging
2021-07-27 00:06:14,505 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 00:06:14,505 - DEBUG : Reloaded debugging
2021-07-27 00:06:14,549 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 00:06:14,557 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 00:06:14,587 - INFO : This product is licensed to 
2021-07-27 00:06:14,587 - INFO : The license will expire on 2021-08-21 (26 days left)
2021-07-27 00:06:14,597 - DEBUG : Calling pyxll._post_open.
2021-07-27 00:06:14,597 - DEBUG : Binding Python functions to Excel
2021-07-27 00:06:14,597 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 00:06:14,597 - DEBUG :     - pyxll_version
2021-07-27 00:06:14,597 - DEBUG :     - python_version
2021-07-27 00:06:14,597 - DEBUG :     - win32api_is_installed
2021-07-27 00:06:14,597 - DEBUG :     - win32com_is_installed
2021-07-27 00:06:14,597 - DEBUG :     - numpy_is_installed
2021-07-27 00:06:14,597 - DEBUG :     - pyxll_logfile
2021-07-27 00:06:14,597 - DEBUG :     - get_formula
2021-07-27 00:06:14,597 - DEBUG :     - get_array_formula
2021-07-27 00:06:14,597 - DEBUG :     - get_last_error
2021-07-27 00:06:14,597 - DEBUG :     - basic_pyxll_function_1
2021-07-27 00:06:14,597 - DEBUG :     - basic_pyxll_function_2
2021-07-27 00:06:14,597 - DEBUG :     - basic_pyxll_function_3
2021-07-27 00:06:14,597 - DEBUG :     - var_pyxll_function_1
2021-07-27 00:06:14,597 - DEBUG :     - var_pyxll_function_2
2021-07-27 00:06:14,597 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 00:06:14,597 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 00:06:14,597 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 00:06:14,597 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 00:06:14,597 - DEBUG :     - xl_cell_example
2021-07-27 00:06:14,597 - DEBUG :     - recalc_on_open_test
2021-07-27 00:06:14,597 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 00:06:14,597 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 00:06:14,597 - DEBUG :     - one_cell_one_sim
2021-07-27 00:06:14,597 - DEBUG :     - one_row_one_sim
2021-07-27 00:06:14,604 - DEBUG : Adding menus to Excel:
2021-07-27 00:06:14,604 - DEBUG :   - PyXLL
2021-07-27 00:06:14,604 - DEBUG :     - Reload PyXLL
2021-07-27 00:06:14,604 - DEBUG :     - Another example menu item
2021-07-27 00:06:14,604 - DEBUG :     - More Examples
2021-07-27 00:06:14,604 - DEBUG :       - Click me
2021-07-27 00:06:14,604 - DEBUG :       - Unicode Test
2021-07-27 00:06:14,604 - DEBUG :     - Open log file
2021-07-27 00:06:14,604 - DEBUG :     - Attach To VS Code
2021-07-27 00:06:14,604 - DEBUG :     - Custom Task Panes
2021-07-27 00:06:14,604 - DEBUG :       - Qt
2021-07-27 00:06:14,604 - DEBUG :       - Tk
2021-07-27 00:06:14,604 - DEBUG :       - Wx
2021-07-27 00:06:14,604 - DEBUG :     - Example Menu Item 1
2021-07-27 00:06:14,604 - DEBUG :     - Show last error
2021-07-27 00:06:14,604 - DEBUG :     - About PyXLL...
2021-07-27 00:06:14,604 - DEBUG :   - PyXLL example menu
2021-07-27 00:06:14,604 - DEBUG :     - Click me
2021-07-27 00:06:14,612 - DEBUG : Finished binding Python functions
2021-07-27 00:06:14,612 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 00:06:15,300 - DEBUG : pyxll._post_open complete.
2021-07-27 00:06:15,301 - DEBUG : PyXLL initialization complete.
2021-07-27 00:06:15,304 - DEBUG : Loading PyXLL COM Addin
2021-07-27 00:06:15,304 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 00:06:15,307 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 00:06:15,422 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 00:06:36,520 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 00:06:41,398 - ERROR : Traceback (most recent call last):
2021-07-27 00:06:41,398 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-27 00:06:41,398 - ERROR :     item we iterated through was on.
2021-07-27 00:06:41,398 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-27 00:06:41,398 - ERROR :     
2021-07-27 00:06:41,398 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-27 00:06:41,398 - ERROR :     #this adjusts the formula so it can be read and matched with our dictionary
2021-07-27 00:06:41,398 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-27 00:06:41,401 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-27 00:06:41,401 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-27 00:06:41,401 - ERROR :     raise Exception(self.errormsg)
2021-07-27 00:06:41,401 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-27 00:06:49,205 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 00:06:51,256 - ERROR : Traceback (most recent call last):
2021-07-27 00:06:51,256 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-27 00:06:51,257 - ERROR :     item we iterated through was on.
2021-07-27 00:06:51,257 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-27 00:06:51,257 - ERROR :     
2021-07-27 00:06:51,257 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-27 00:06:51,258 - ERROR :     #this adjusts the formula so it can be read and matched with our dictionary
2021-07-27 00:06:51,258 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-27 00:06:51,258 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-27 00:06:51,258 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-27 00:06:51,258 - ERROR :     raise Exception(self.errormsg)
2021-07-27 00:06:51,259 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-27 00:06:54,752 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 00:06:54,752 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 00:06:54,752 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 00:06:54,752 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 00:06:54,752 - DEBUG : -------- PyXLL config --------
2021-07-27 00:06:54,752 - DEBUG : [LOG]
2021-07-27 00:06:54,752 - DEBUG : encoding = utf-8
2021-07-27 00:06:54,752 - DEBUG : file = pyxll.20210727.log
2021-07-27 00:06:54,752 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 00:06:54,752 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 00:06:54,752 - DEBUG : verbosity = debug
2021-07-27 00:06:54,752 - DEBUG : 
2021-07-27 00:06:54,752 - DEBUG : [PYTHON]
2021-07-27 00:06:54,752 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 00:06:54,752 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 00:06:54,752 - DEBUG : 
2021-07-27 00:06:54,752 - DEBUG : [PYXLL]
2021-07-27 00:06:54,752 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 00:06:54,752 - DEBUG : developer_mode = 1
2021-07-27 00:06:54,752 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 00:06:54,752 - DEBUG : modules = 
2021-07-27 00:06:54,752 - DEBUG :     misc
2021-07-27 00:06:54,752 - DEBUG :     worksheetfuncs
2021-07-27 00:06:54,752 - DEBUG :     menus
2021-07-27 00:06:54,752 - DEBUG :     callbacks
2021-07-27 00:06:54,752 - DEBUG :     custom_task_panes
2021-07-27 00:06:54,752 - DEBUG :     test
2021-07-27 00:06:54,752 - DEBUG :     ribbon_functions
2021-07-27 00:06:54,752 - DEBUG :     debugging
2021-07-27 00:06:54,752 - DEBUG :     meta_variables
2021-07-27 00:06:54,752 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 00:06:54,752 - DEBUG : ------------------------------
2021-07-27 00:06:54,752 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 00:06:54,752 - DEBUG : Initializing PyXLL Python module.
2021-07-27 00:06:54,752 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 00:06:54,752 - DEBUG : PyXLL Python module initialized.
2021-07-27 00:06:54,752 - DEBUG : Functions will not be cancellable by default.
2021-07-27 00:06:54,752 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 00:06:54,752 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 00:06:54,803 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 00:06:54,803 - DEBUG : Reloading misc
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 00:06:54,803 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 00:06:54,811 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 00:06:54,811 - DEBUG : Reloaded misc
2021-07-27 00:06:54,811 - DEBUG : Reloading worksheetfuncs
2021-07-27 00:06:54,811 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 00:06:54,812 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 00:06:54,812 - DEBUG : Reloaded worksheetfuncs
2021-07-27 00:06:54,812 - DEBUG : Reloading menus
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 00:06:54,812 - DEBUG : Reloaded menus
2021-07-27 00:06:54,812 - DEBUG : Reloading callbacks
2021-07-27 00:06:54,812 - DEBUG : Reloaded callbacks
2021-07-27 00:06:54,812 - DEBUG : Reloading custom_task_panes
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 00:06:54,812 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 00:06:54,812 - DEBUG : Reloaded custom_task_panes
2021-07-27 00:06:54,812 - DEBUG : Reloading test
2021-07-27 00:06:54,812 - DEBUG : Reloaded test
2021-07-27 00:06:54,812 - DEBUG : Reloading meta_variables
2021-07-27 00:06:54,826 - DEBUG : Reloaded meta_variables
2021-07-27 00:06:54,826 - DEBUG : Reloading dependency error_functions
2021-07-27 00:06:54,835 - DEBUG : Reloaded dependency error_functions
2021-07-27 00:06:54,835 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 00:06:54,835 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 00:06:54,835 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 00:06:54,835 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 00:06:54,835 - DEBUG : Reloading dependency examples
2021-07-27 00:06:54,835 - DEBUG : Reloaded dependency examples
2021-07-27 00:06:54,835 - DEBUG : Reloading ribbon_functions
2021-07-27 00:06:54,835 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000187FA3CE550>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000187FA435070>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000187FA442070>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000187FA4CD9A0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000187FA47BCA0>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000187FA4C5160>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000187FA463670>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000187FA4C5FA0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000187FA4B8DC0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000187FA4A9AF0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000187FA4A9100>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000187FA4913A0>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000187FA4263D0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000187FA4979D0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000187FA3CE550>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000187FA435070>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000187FA442070>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000187FA4CD9A0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000187FA47BCA0>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000187FA4C5160>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000187FA463670>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000187FA4C5FA0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000187FA4B8DC0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000187FA4A9AF0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000187FA4A9100>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000187FA4913A0>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000187FA4263D0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000187FA4979D0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 00:06:54,835 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 00:06:54,835 - DEBUG : Reloaded ribbon_functions
2021-07-27 00:06:54,835 - DEBUG : Reloading debugging
2021-07-27 00:06:54,835 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 00:06:54,835 - DEBUG : Reloaded debugging
2021-07-27 00:06:54,865 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 00:06:54,880 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 00:06:54,894 - INFO : This product is licensed to 
2021-07-27 00:06:54,894 - INFO : The license will expire on 2021-08-21 (26 days left)
2021-07-27 00:06:54,897 - DEBUG : Calling pyxll._post_open.
2021-07-27 00:06:54,897 - DEBUG : Binding Python functions to Excel
2021-07-27 00:06:54,897 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 00:06:54,897 - DEBUG :     - pyxll_version
2021-07-27 00:06:54,897 - DEBUG :     - python_version
2021-07-27 00:06:54,897 - DEBUG :     - win32api_is_installed
2021-07-27 00:06:54,897 - DEBUG :     - win32com_is_installed
2021-07-27 00:06:54,897 - DEBUG :     - numpy_is_installed
2021-07-27 00:06:54,897 - DEBUG :     - pyxll_logfile
2021-07-27 00:06:54,897 - DEBUG :     - get_formula
2021-07-27 00:06:54,897 - DEBUG :     - get_array_formula
2021-07-27 00:06:54,897 - DEBUG :     - get_last_error
2021-07-27 00:06:54,897 - DEBUG :     - basic_pyxll_function_1
2021-07-27 00:06:54,897 - DEBUG :     - basic_pyxll_function_2
2021-07-27 00:06:54,897 - DEBUG :     - basic_pyxll_function_3
2021-07-27 00:06:54,897 - DEBUG :     - var_pyxll_function_1
2021-07-27 00:06:54,897 - DEBUG :     - var_pyxll_function_2
2021-07-27 00:06:54,897 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 00:06:54,897 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 00:06:54,897 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 00:06:54,897 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 00:06:54,897 - DEBUG :     - xl_cell_example
2021-07-27 00:06:54,898 - DEBUG :     - recalc_on_open_test
2021-07-27 00:06:54,898 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 00:06:54,898 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 00:06:54,898 - DEBUG :     - one_cell_one_sim
2021-07-27 00:06:54,898 - DEBUG :     - one_row_one_sim
2021-07-27 00:06:54,898 - DEBUG : Adding menus to Excel:
2021-07-27 00:06:54,898 - DEBUG :   - PyXLL
2021-07-27 00:06:54,898 - DEBUG :     - Reload PyXLL
2021-07-27 00:06:54,898 - DEBUG :     - Another example menu item
2021-07-27 00:06:54,898 - DEBUG :     - More Examples
2021-07-27 00:06:54,898 - DEBUG :       - Click me
2021-07-27 00:06:54,898 - DEBUG :       - Unicode Test
2021-07-27 00:06:54,898 - DEBUG :     - Open log file
2021-07-27 00:06:54,898 - DEBUG :     - Attach To VS Code
2021-07-27 00:06:54,898 - DEBUG :     - Custom Task Panes
2021-07-27 00:06:54,898 - DEBUG :       - Qt
2021-07-27 00:06:54,898 - DEBUG :       - Tk
2021-07-27 00:06:54,898 - DEBUG :       - Wx
2021-07-27 00:06:54,898 - DEBUG :     - Example Menu Item 1
2021-07-27 00:06:54,898 - DEBUG :     - Show last error
2021-07-27 00:06:54,898 - DEBUG :     - About PyXLL...
2021-07-27 00:06:54,898 - DEBUG :   - PyXLL example menu
2021-07-27 00:06:54,898 - DEBUG :     - Click me
2021-07-27 00:06:54,898 - DEBUG : Finished binding Python functions
2021-07-27 00:06:54,898 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 00:06:55,535 - DEBUG : pyxll._post_open complete.
2021-07-27 00:06:55,535 - DEBUG : PyXLL initialization complete.
2021-07-27 00:06:55,538 - DEBUG : Loading PyXLL COM Addin
2021-07-27 00:06:55,538 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 00:06:55,539 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 00:06:55,589 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 00:06:58,843 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 00:07:16,070 - ERROR : Traceback (most recent call last):
2021-07-27 00:07:16,070 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-27 00:07:16,071 - ERROR :     item we iterated through was on.
2021-07-27 00:07:16,071 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-27 00:07:16,072 - ERROR :     
2021-07-27 00:07:16,072 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-27 00:07:16,072 - ERROR :     #this adjusts the formula so it can be read and matched with our dictionary
2021-07-27 00:07:16,072 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-27 00:07:16,072 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-27 00:07:16,072 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-27 00:07:16,072 - ERROR :     raise Exception(self.errormsg)
2021-07-27 00:07:16,072 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-27 00:08:04,419 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 00:08:06,808 - ERROR : Traceback (most recent call last):
2021-07-27 00:08:06,809 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-27 00:08:06,809 - ERROR :     item we iterated through was on.
2021-07-27 00:08:06,809 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-27 00:08:06,810 - ERROR :     
2021-07-27 00:08:06,810 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-27 00:08:06,810 - ERROR :     #this adjusts the formula so it can be read and matched with our dictionary
2021-07-27 00:08:06,811 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-27 00:08:06,811 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-27 00:08:06,811 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-27 00:08:06,812 - ERROR :     raise Exception(self.errormsg)
2021-07-27 00:08:06,812 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-27 00:08:47,692 - DEBUG : Closing PyXLL Python module.
2021-07-27 00:08:47,693 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 00:08:47,693 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 00:08:47,693 - DEBUG : PyXLL Python module closed.
2021-07-27 00:08:52,837 - DEBUG : 
Tue Jul 27 00:08:52 2021
---------- PyXLL Stopped ----------
2021-07-27 08:24:59,208 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:24:59,208 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:24:59,209 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:24:59,209 - DEBUG : -------- PyXLL config --------
2021-07-27 08:24:59,209 - DEBUG : [LOG]
2021-07-27 08:24:59,209 - DEBUG : encoding = utf-8
2021-07-27 08:24:59,209 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:24:59,209 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:24:59,209 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:24:59,209 - DEBUG : verbosity = debug
2021-07-27 08:24:59,209 - DEBUG : 
2021-07-27 08:24:59,209 - DEBUG : [PYTHON]
2021-07-27 08:24:59,209 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:24:59,209 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:24:59,209 - DEBUG : 
2021-07-27 08:24:59,209 - DEBUG : [PYXLL]
2021-07-27 08:24:59,209 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:24:59,209 - DEBUG : developer_mode = 1
2021-07-27 08:24:59,209 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:24:59,209 - DEBUG : modules = 
2021-07-27 08:24:59,209 - DEBUG :     misc
2021-07-27 08:24:59,209 - DEBUG :     worksheetfuncs
2021-07-27 08:24:59,209 - DEBUG :     menus
2021-07-27 08:24:59,209 - DEBUG :     callbacks
2021-07-27 08:24:59,209 - DEBUG :     custom_task_panes
2021-07-27 08:24:59,209 - DEBUG :     test
2021-07-27 08:24:59,210 - DEBUG :     ribbon_functions
2021-07-27 08:24:59,210 - DEBUG :     debugging
2021-07-27 08:24:59,210 - DEBUG :     meta_variables
2021-07-27 08:24:59,210 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:24:59,210 - DEBUG : ------------------------------
2021-07-27 08:24:59,214 - DEBUG : Attempting to load python38.dll
2021-07-27 08:24:59,220 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 08:24:59,224 - DEBUG : Checking Py_IsInitialized...
2021-07-27 08:24:59,224 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 08:24:59,472 - DEBUG : Calling Py_Initialize...
2021-07-27 08:24:59,659 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 08:24:59,660 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 08:24:59,660 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:24:59,660 - DEBUG : Python is initialized.
2021-07-27 08:24:59,662 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 08:24:59,663 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 08:24:59,663 - DEBUG : Looking for module 'site'...
2021-07-27 08:24:59,698 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 08:24:59,698 - DEBUG : Importing pyxll module
2021-07-27 08:24:59,698 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 08:24:59,698 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 08:24:59,698 - DEBUG :   Detected Python3
2021-07-27 08:24:59,754 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 08:24:59,760 - DEBUG : pyxll module imported
2021-07-27 08:24:59,761 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:24:59,761 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:24:59,762 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:24:59,765 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:24:59,766 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:25:00,062 - DEBUG : Importing misc
2021-07-27 08:25:00,066 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:25:00,066 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:25:00,066 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:25:00,066 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:25:00,067 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:25:00,067 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:25:00,067 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:25:00,068 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:25:00,068 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:25:00,068 - DEBUG : Imported misc
2021-07-27 08:25:00,068 - DEBUG : Importing worksheetfuncs
2021-07-27 08:25:00,069 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:25:00,069 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:25:00,069 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:25:00,070 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:25:00,070 - DEBUG : Imported worksheetfuncs
2021-07-27 08:25:00,070 - DEBUG : Importing menus
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:25:00,070 - DEBUG : Imported menus
2021-07-27 08:25:00,070 - DEBUG : Importing callbacks
2021-07-27 08:25:00,070 - DEBUG : Imported callbacks
2021-07-27 08:25:00,070 - DEBUG : Importing custom_task_panes
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:25:00,070 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:25:00,070 - DEBUG : Imported custom_task_panes
2021-07-27 08:25:00,070 - DEBUG : Importing test
2021-07-27 08:25:00,070 - DEBUG : Imported test
2021-07-27 08:25:00,070 - DEBUG : Importing ribbon_functions
2021-07-27 08:25:01,529 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 08:25:01,560 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:25:01,560 - DEBUG : matplotlib version 3.4.2
2021-07-27 08:25:01,560 - DEBUG : interactive is False
2021-07-27 08:25:01,560 - DEBUG : platform is win32
2021-07-27 08:25:01,560 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_c00000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_c00000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 08:25:01,634 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:25:01,646 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 08:25:01,873 - DEBUG : Loaded backend agg version unknown.
2021-07-27 08:25:01,874 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002338D8EB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002338D940220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002338D953220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002338D9E1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002338D98CE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002338D9D4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002338D971820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002338D9D4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002338D9C9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002338D9BDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002338D9BD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002338D9AC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002338D93C580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002338D99EC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002338D8EB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002338D940220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002338D953220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002338D9E1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002338D98CE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002338D9D4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002338D971820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002338D9D4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002338D9C9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002338D9BDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002338D9BD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002338D9AC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002338D93C580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002338D99EC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:25:01,874 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:25:01,874 - DEBUG : Imported ribbon_functions
2021-07-27 08:25:01,874 - DEBUG : Importing debugging
2021-07-27 08:25:03,062 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:25:03,062 - DEBUG : Imported debugging
2021-07-27 08:25:03,063 - DEBUG : Importing meta_variables
2021-07-27 08:25:03,063 - DEBUG : Imported meta_variables
2021-07-27 08:25:03,131 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:25:03,133 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:25:03,162 - INFO : This product is licensed to 
2021-07-27 08:25:03,162 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:25:03,166 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:25:03,166 - DEBUG : Binding Python functions to Excel
2021-07-27 08:25:03,166 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:25:03,166 - DEBUG :     - pyxll_version
2021-07-27 08:25:03,166 - DEBUG :     - python_version
2021-07-27 08:25:03,166 - DEBUG :     - win32api_is_installed
2021-07-27 08:25:03,166 - DEBUG :     - win32com_is_installed
2021-07-27 08:25:03,166 - DEBUG :     - numpy_is_installed
2021-07-27 08:25:03,166 - DEBUG :     - pyxll_logfile
2021-07-27 08:25:03,166 - DEBUG :     - get_formula
2021-07-27 08:25:03,166 - DEBUG :     - get_array_formula
2021-07-27 08:25:03,166 - DEBUG :     - get_last_error
2021-07-27 08:25:03,166 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:25:03,166 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:25:03,166 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:25:03,166 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:25:03,166 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:25:03,166 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:25:03,166 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:25:03,166 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:25:03,166 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:25:03,166 - DEBUG :     - xl_cell_example
2021-07-27 08:25:03,166 - DEBUG :     - recalc_on_open_test
2021-07-27 08:25:03,166 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:25:03,166 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:25:03,166 - DEBUG :     - one_cell_one_sim
2021-07-27 08:25:03,166 - DEBUG :     - one_row_one_sim
2021-07-27 08:25:03,185 - DEBUG : Adding menus to Excel:
2021-07-27 08:25:03,185 - DEBUG :   - PyXLL
2021-07-27 08:25:03,185 - DEBUG :     - Reload PyXLL
2021-07-27 08:25:03,185 - DEBUG :     - Another example menu item
2021-07-27 08:25:03,185 - DEBUG :     - More Examples
2021-07-27 08:25:03,185 - DEBUG :       - Click me
2021-07-27 08:25:03,185 - DEBUG :       - Unicode Test
2021-07-27 08:25:03,185 - DEBUG :     - Open log file
2021-07-27 08:25:03,185 - DEBUG :     - Attach To VS Code
2021-07-27 08:25:03,185 - DEBUG :     - Custom Task Panes
2021-07-27 08:25:03,185 - DEBUG :       - Qt
2021-07-27 08:25:03,185 - DEBUG :       - Tk
2021-07-27 08:25:03,185 - DEBUG :       - Wx
2021-07-27 08:25:03,185 - DEBUG :     - Example Menu Item 1
2021-07-27 08:25:03,185 - DEBUG :     - Show last error
2021-07-27 08:25:03,185 - DEBUG :     - About PyXLL...
2021-07-27 08:25:03,185 - DEBUG :   - PyXLL example menu
2021-07-27 08:25:03,185 - DEBUG :     - Click me
2021-07-27 08:25:03,233 - DEBUG : Finished binding Python functions
2021-07-27 08:25:03,233 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 08:25:03,233 - DEBUG : pyxll._post_open complete.
2021-07-27 08:25:03,246 - DEBUG : PyXLL initialization complete.
2021-07-27 08:25:14,602 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:25:25,615 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:25:36,643 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:25:47,805 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:25:58,863 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:26:09,928 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:26:21,058 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:26:32,240 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:26:43,439 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:26:54,641 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:27:05,802 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:27:16,980 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:27:24,878 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:27:24,878 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:27:24,903 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:27:24,984 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:27:54,527 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,527 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,542 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 08:27:54,558 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,564 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,565 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,581 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,586 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,587 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,602 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,603 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,611 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,618 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:27:54,619 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 08:27:54,619 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-27 08:32:20,047 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:32:35,245 - ERROR : Traceback (most recent call last):
2021-07-27 08:32:35,246 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 156, in advanced_simulation_cell_wrapper
2021-07-27 08:32:35,246 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-27 08:32:35,247 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 106, in advanced_simulation_cell
2021-07-27 08:32:35,248 - ERROR :     if re.match("[0-9]+", cell_value).group() == cell_value:
2021-07-27 08:32:35,248 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 189, in match
2021-07-27 08:32:35,250 - ERROR :     return _compile(pattern, flags).match(string)
2021-07-27 08:32:35,250 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 08:34:38,183 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 08:34:38,186 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:34:38,186 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:34:38,192 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:34:38,192 - DEBUG : -------- PyXLL config --------
2021-07-27 08:34:38,192 - DEBUG : [LOG]
2021-07-27 08:34:38,192 - DEBUG : encoding = utf-8
2021-07-27 08:34:38,192 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:34:38,192 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:34:38,192 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:34:38,192 - DEBUG : verbosity = debug
2021-07-27 08:34:38,192 - DEBUG : 
2021-07-27 08:34:38,192 - DEBUG : [PYTHON]
2021-07-27 08:34:38,192 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:34:38,192 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:34:38,192 - DEBUG : 
2021-07-27 08:34:38,192 - DEBUG : [PYXLL]
2021-07-27 08:34:38,192 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:34:38,192 - DEBUG : developer_mode = 1
2021-07-27 08:34:38,192 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:34:38,192 - DEBUG : modules = 
2021-07-27 08:34:38,192 - DEBUG :     misc
2021-07-27 08:34:38,192 - DEBUG :     worksheetfuncs
2021-07-27 08:34:38,192 - DEBUG :     menus
2021-07-27 08:34:38,192 - DEBUG :     callbacks
2021-07-27 08:34:38,192 - DEBUG :     custom_task_panes
2021-07-27 08:34:38,192 - DEBUG :     test
2021-07-27 08:34:38,193 - DEBUG :     ribbon_functions
2021-07-27 08:34:38,193 - DEBUG :     debugging
2021-07-27 08:34:38,193 - DEBUG :     meta_variables
2021-07-27 08:34:38,193 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:34:38,193 - DEBUG : ------------------------------
2021-07-27 08:34:38,193 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:34:38,193 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:34:38,193 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:34:38,194 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:34:38,194 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:34:38,194 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:34:38,194 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 08:34:38,282 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 08:34:38,282 - DEBUG : Reloading misc
2021-07-27 08:34:38,282 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:34:38,282 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:34:38,282 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:34:38,282 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:34:38,282 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:34:38,282 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:34:38,289 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:34:38,289 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:34:38,289 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:34:38,289 - DEBUG : Reloaded misc
2021-07-27 08:34:38,289 - DEBUG : Reloading worksheetfuncs
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:34:38,290 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:34:38,290 - DEBUG : Reloaded worksheetfuncs
2021-07-27 08:34:38,290 - DEBUG : Reloading menus
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:34:38,290 - DEBUG : Reloaded menus
2021-07-27 08:34:38,290 - DEBUG : Reloading callbacks
2021-07-27 08:34:38,290 - DEBUG : Reloaded callbacks
2021-07-27 08:34:38,290 - DEBUG : Reloading custom_task_panes
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:34:38,290 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:34:38,290 - DEBUG : Reloaded custom_task_panes
2021-07-27 08:34:38,290 - DEBUG : Reloading test
2021-07-27 08:34:38,290 - DEBUG : Reloaded test
2021-07-27 08:34:38,290 - DEBUG : Reloading meta_variables
2021-07-27 08:34:38,290 - DEBUG : Reloaded meta_variables
2021-07-27 08:34:38,290 - DEBUG : Reloading dependency error_functions
2021-07-27 08:34:38,290 - DEBUG : Reloaded dependency error_functions
2021-07-27 08:34:38,290 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 08:34:38,290 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 08:34:38,290 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 08:34:38,290 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 08:34:38,290 - DEBUG : Reloading dependency examples
2021-07-27 08:34:38,290 - DEBUG : Reloaded dependency examples
2021-07-27 08:34:38,290 - DEBUG : Reloading ribbon_functions
2021-07-27 08:34:38,305 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002338D8EB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002338D940220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002338D953220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002338D9E1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002338D98CE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002338D9D4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002338D971820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002338D9D4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002338D9C9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002338D9BDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002338D9BD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002338D9AC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002338D93C580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002338D99EC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002338D8EB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002338D940220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002338D953220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002338D9E1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002338D98CE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002338D9D4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002338D971820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002338D9D4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002338D9C9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002338D9BDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002338D9BD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002338D9AC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002338D93C580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002338D99EC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:34:38,306 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:34:38,306 - DEBUG : Reloaded ribbon_functions
2021-07-27 08:34:38,306 - DEBUG : Reloading debugging
2021-07-27 08:34:38,306 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:34:38,306 - DEBUG : Reloaded debugging
2021-07-27 08:34:38,371 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:34:38,379 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:34:38,401 - INFO : This product is licensed to 
2021-07-27 08:34:38,401 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:34:38,412 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:34:38,412 - DEBUG : Binding Python functions to Excel
2021-07-27 08:34:38,412 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:34:38,412 - DEBUG :     - pyxll_version
2021-07-27 08:34:38,412 - DEBUG :     - python_version
2021-07-27 08:34:38,412 - DEBUG :     - win32api_is_installed
2021-07-27 08:34:38,412 - DEBUG :     - win32com_is_installed
2021-07-27 08:34:38,412 - DEBUG :     - numpy_is_installed
2021-07-27 08:34:38,412 - DEBUG :     - pyxll_logfile
2021-07-27 08:34:38,412 - DEBUG :     - get_formula
2021-07-27 08:34:38,412 - DEBUG :     - get_array_formula
2021-07-27 08:34:38,412 - DEBUG :     - get_last_error
2021-07-27 08:34:38,412 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:34:38,412 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:34:38,412 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:34:38,412 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:34:38,412 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:34:38,412 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:34:38,412 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:34:38,412 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:34:38,412 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:34:38,412 - DEBUG :     - xl_cell_example
2021-07-27 08:34:38,412 - DEBUG :     - recalc_on_open_test
2021-07-27 08:34:38,412 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:34:38,412 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:34:38,412 - DEBUG :     - one_cell_one_sim
2021-07-27 08:34:38,412 - DEBUG :     - one_row_one_sim
2021-07-27 08:34:38,433 - DEBUG : Adding menus to Excel:
2021-07-27 08:34:38,433 - DEBUG :   - PyXLL
2021-07-27 08:34:38,433 - DEBUG :     - Reload PyXLL
2021-07-27 08:34:38,433 - DEBUG :     - Another example menu item
2021-07-27 08:34:38,433 - DEBUG :     - More Examples
2021-07-27 08:34:38,433 - DEBUG :       - Click me
2021-07-27 08:34:38,433 - DEBUG :       - Unicode Test
2021-07-27 08:34:38,433 - DEBUG :     - Open log file
2021-07-27 08:34:38,433 - DEBUG :     - Attach To VS Code
2021-07-27 08:34:38,433 - DEBUG :     - Custom Task Panes
2021-07-27 08:34:38,433 - DEBUG :       - Qt
2021-07-27 08:34:38,433 - DEBUG :       - Tk
2021-07-27 08:34:38,433 - DEBUG :       - Wx
2021-07-27 08:34:38,433 - DEBUG :     - Example Menu Item 1
2021-07-27 08:34:38,433 - DEBUG :     - Show last error
2021-07-27 08:34:38,433 - DEBUG :     - About PyXLL...
2021-07-27 08:34:38,433 - DEBUG :   - PyXLL example menu
2021-07-27 08:34:38,433 - DEBUG :     - Click me
2021-07-27 08:34:38,441 - DEBUG : Finished binding Python functions
2021-07-27 08:34:38,441 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 08:34:39,145 - DEBUG : pyxll._post_open complete.
2021-07-27 08:34:39,147 - DEBUG : PyXLL initialization complete.
2021-07-27 08:34:39,150 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:34:39,151 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:34:39,157 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:34:39,279 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:34:40,988 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:34:45,559 - ERROR : Traceback (most recent call last):
2021-07-27 08:34:45,559 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 156, in advanced_simulation_cell_wrapper
2021-07-27 08:34:45,560 - ERROR :     
2021-07-27 08:34:45,561 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 106, in advanced_simulation_cell
2021-07-27 08:34:45,562 - ERROR :     #case 0
2021-07-27 08:34:45,562 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 189, in match
2021-07-27 08:34:45,563 - ERROR :     return _compile(pattern, flags).match(string)
2021-07-27 08:34:45,563 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 08:35:05,129 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 08:35:05,138 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:35:05,138 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:35:05,138 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:35:05,138 - DEBUG : -------- PyXLL config --------
2021-07-27 08:35:05,138 - DEBUG : [LOG]
2021-07-27 08:35:05,138 - DEBUG : encoding = utf-8
2021-07-27 08:35:05,138 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:35:05,138 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:35:05,138 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:35:05,138 - DEBUG : verbosity = debug
2021-07-27 08:35:05,138 - DEBUG : 
2021-07-27 08:35:05,138 - DEBUG : [PYTHON]
2021-07-27 08:35:05,138 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:35:05,138 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:35:05,138 - DEBUG : 
2021-07-27 08:35:05,138 - DEBUG : [PYXLL]
2021-07-27 08:35:05,138 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:35:05,138 - DEBUG : developer_mode = 1
2021-07-27 08:35:05,138 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:35:05,138 - DEBUG : modules = 
2021-07-27 08:35:05,138 - DEBUG :     misc
2021-07-27 08:35:05,138 - DEBUG :     worksheetfuncs
2021-07-27 08:35:05,138 - DEBUG :     menus
2021-07-27 08:35:05,138 - DEBUG :     callbacks
2021-07-27 08:35:05,138 - DEBUG :     custom_task_panes
2021-07-27 08:35:05,138 - DEBUG :     test
2021-07-27 08:35:05,138 - DEBUG :     ribbon_functions
2021-07-27 08:35:05,138 - DEBUG :     debugging
2021-07-27 08:35:05,138 - DEBUG :     meta_variables
2021-07-27 08:35:05,138 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:35:05,138 - DEBUG : ------------------------------
2021-07-27 08:35:05,138 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:35:05,138 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:35:05,138 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:35:05,138 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:35:05,138 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:35:05,138 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:35:05,138 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 08:35:05,220 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 08:35:05,220 - DEBUG : Reloading misc
2021-07-27 08:35:05,220 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:35:05,220 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:35:05,220 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:35:05,220 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:35:05,235 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:35:05,236 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:35:05,236 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:35:05,236 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:35:05,236 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:35:05,237 - DEBUG : Reloaded misc
2021-07-27 08:35:05,237 - DEBUG : Reloading worksheetfuncs
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:35:05,237 - DEBUG : Reloaded worksheetfuncs
2021-07-27 08:35:05,237 - DEBUG : Reloading menus
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:35:05,237 - DEBUG : Reloaded menus
2021-07-27 08:35:05,237 - DEBUG : Reloading callbacks
2021-07-27 08:35:05,237 - DEBUG : Reloaded callbacks
2021-07-27 08:35:05,237 - DEBUG : Reloading custom_task_panes
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:35:05,237 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:35:05,237 - DEBUG : Reloaded custom_task_panes
2021-07-27 08:35:05,237 - DEBUG : Reloading test
2021-07-27 08:35:05,237 - DEBUG : Reloaded test
2021-07-27 08:35:05,237 - DEBUG : Reloading meta_variables
2021-07-27 08:35:05,237 - DEBUG : Reloaded meta_variables
2021-07-27 08:35:05,237 - DEBUG : Reloading dependency error_functions
2021-07-27 08:35:05,237 - DEBUG : Reloaded dependency error_functions
2021-07-27 08:35:05,237 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 08:35:05,237 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 08:35:05,237 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 08:35:05,237 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 08:35:05,237 - DEBUG : Reloading dependency examples
2021-07-27 08:35:05,237 - DEBUG : Reloaded dependency examples
2021-07-27 08:35:05,237 - DEBUG : Reloading ribbon_functions
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002338D8EB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002338D940220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002338D953220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002338D9E1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002338D98CE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002338D9D4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002338D971820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002338D9D4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002338D9C9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002338D9BDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002338D9BD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002338D9AC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002338D93C580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002338D99EC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002338D8EB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002338D940220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002338D953220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002338D9E1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002338D98CE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002338D9D4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002338D971820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002338D9D4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002338D9C9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002338D9BDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002338D9BD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002338D9AC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002338D93C580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002338D99EC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:35:05,237 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:35:05,237 - DEBUG : Reloaded ribbon_functions
2021-07-27 08:35:05,237 - DEBUG : Reloading debugging
2021-07-27 08:35:05,252 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:35:05,252 - DEBUG : Reloaded debugging
2021-07-27 08:35:05,312 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:35:05,320 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:35:05,334 - INFO : This product is licensed to 
2021-07-27 08:35:05,334 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:35:05,352 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:35:05,352 - DEBUG : Binding Python functions to Excel
2021-07-27 08:35:05,352 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:35:05,352 - DEBUG :     - pyxll_version
2021-07-27 08:35:05,352 - DEBUG :     - python_version
2021-07-27 08:35:05,352 - DEBUG :     - win32api_is_installed
2021-07-27 08:35:05,352 - DEBUG :     - win32com_is_installed
2021-07-27 08:35:05,352 - DEBUG :     - numpy_is_installed
2021-07-27 08:35:05,352 - DEBUG :     - pyxll_logfile
2021-07-27 08:35:05,352 - DEBUG :     - get_formula
2021-07-27 08:35:05,352 - DEBUG :     - get_array_formula
2021-07-27 08:35:05,352 - DEBUG :     - get_last_error
2021-07-27 08:35:05,352 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:35:05,352 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:35:05,352 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:35:05,352 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:35:05,352 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:35:05,352 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:35:05,352 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:35:05,352 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:35:05,352 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:35:05,352 - DEBUG :     - xl_cell_example
2021-07-27 08:35:05,352 - DEBUG :     - recalc_on_open_test
2021-07-27 08:35:05,352 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:35:05,352 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:35:05,352 - DEBUG :     - one_cell_one_sim
2021-07-27 08:35:05,352 - DEBUG :     - one_row_one_sim
2021-07-27 08:35:05,375 - DEBUG : Adding menus to Excel:
2021-07-27 08:35:05,375 - DEBUG :   - PyXLL
2021-07-27 08:35:05,375 - DEBUG :     - Reload PyXLL
2021-07-27 08:35:05,375 - DEBUG :     - Another example menu item
2021-07-27 08:35:05,375 - DEBUG :     - More Examples
2021-07-27 08:35:05,375 - DEBUG :       - Click me
2021-07-27 08:35:05,375 - DEBUG :       - Unicode Test
2021-07-27 08:35:05,375 - DEBUG :     - Open log file
2021-07-27 08:35:05,375 - DEBUG :     - Attach To VS Code
2021-07-27 08:35:05,375 - DEBUG :     - Custom Task Panes
2021-07-27 08:35:05,375 - DEBUG :       - Qt
2021-07-27 08:35:05,375 - DEBUG :       - Tk
2021-07-27 08:35:05,375 - DEBUG :       - Wx
2021-07-27 08:35:05,375 - DEBUG :     - Example Menu Item 1
2021-07-27 08:35:05,375 - DEBUG :     - Show last error
2021-07-27 08:35:05,375 - DEBUG :     - About PyXLL...
2021-07-27 08:35:05,375 - DEBUG :   - PyXLL example menu
2021-07-27 08:35:05,375 - DEBUG :     - Click me
2021-07-27 08:35:05,384 - DEBUG : Finished binding Python functions
2021-07-27 08:35:05,384 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 08:35:06,225 - DEBUG : pyxll._post_open complete.
2021-07-27 08:35:06,226 - DEBUG : PyXLL initialization complete.
2021-07-27 08:35:06,231 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:35:06,231 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:35:06,234 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:35:06,350 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:35:08,308 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:35:16,026 - ERROR : Traceback (most recent call last):
2021-07-27 08:35:16,026 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 156, in advanced_simulation_cell_wrapper
2021-07-27 08:35:16,027 - ERROR :     return formula_sheet_name + "_"*3 + x
2021-07-27 08:35:16,027 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 106, in advanced_simulation_cell
2021-07-27 08:35:16,027 - ERROR :     #case 0
2021-07-27 08:35:16,027 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 189, in match
2021-07-27 08:35:16,028 - ERROR :     return _compile(pattern, flags).match(string)
2021-07-27 08:35:16,028 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 08:35:17,533 - DEBUG : Closing PyXLL Python module.
2021-07-27 08:35:17,533 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 08:35:17,534 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 08:35:17,534 - DEBUG : PyXLL Python module closed.
2021-07-27 08:35:20,205 - DEBUG : 
Tue Jul 27 08:35:20 2021
---------- PyXLL Stopped ----------
2021-07-27 08:35:25,403 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:35:25,403 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:35:25,404 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:35:25,404 - DEBUG : -------- PyXLL config --------
2021-07-27 08:35:25,404 - DEBUG : [LOG]
2021-07-27 08:35:25,404 - DEBUG : encoding = utf-8
2021-07-27 08:35:25,404 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:35:25,404 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:35:25,404 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:35:25,404 - DEBUG : verbosity = debug
2021-07-27 08:35:25,404 - DEBUG : 
2021-07-27 08:35:25,404 - DEBUG : [PYTHON]
2021-07-27 08:35:25,405 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:35:25,405 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:35:25,405 - DEBUG : 
2021-07-27 08:35:25,405 - DEBUG : [PYXLL]
2021-07-27 08:35:25,405 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:35:25,405 - DEBUG : developer_mode = 1
2021-07-27 08:35:25,405 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:35:25,405 - DEBUG : modules = 
2021-07-27 08:35:25,405 - DEBUG :     misc
2021-07-27 08:35:25,405 - DEBUG :     worksheetfuncs
2021-07-27 08:35:25,405 - DEBUG :     menus
2021-07-27 08:35:25,405 - DEBUG :     callbacks
2021-07-27 08:35:25,405 - DEBUG :     custom_task_panes
2021-07-27 08:35:25,405 - DEBUG :     test
2021-07-27 08:35:25,405 - DEBUG :     ribbon_functions
2021-07-27 08:35:25,405 - DEBUG :     debugging
2021-07-27 08:35:25,405 - DEBUG :     meta_variables
2021-07-27 08:35:25,405 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:35:25,405 - DEBUG : ------------------------------
2021-07-27 08:35:25,409 - DEBUG : Attempting to load python38.dll
2021-07-27 08:35:25,415 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 08:35:25,418 - DEBUG : Checking Py_IsInitialized...
2021-07-27 08:35:25,418 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 08:35:25,699 - DEBUG : Calling Py_Initialize...
2021-07-27 08:35:25,915 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 08:35:25,917 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 08:35:25,917 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:35:25,917 - DEBUG : Python is initialized.
2021-07-27 08:35:25,918 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 08:35:25,927 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 08:35:25,927 - DEBUG : Looking for module 'site'...
2021-07-27 08:35:26,005 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 08:35:26,007 - DEBUG : Importing pyxll module
2021-07-27 08:35:26,007 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 08:35:26,007 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 08:35:26,007 - DEBUG :   Detected Python3
2021-07-27 08:35:26,049 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 08:35:26,060 - DEBUG : pyxll module imported
2021-07-27 08:35:26,060 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:35:26,060 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:35:26,061 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:35:26,065 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:35:26,066 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:35:26,369 - DEBUG : Importing misc
2021-07-27 08:35:26,370 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:35:26,370 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:35:26,370 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:35:26,371 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:35:26,371 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:35:26,371 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:35:26,372 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:35:26,372 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:35:26,372 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:35:26,372 - DEBUG : Imported misc
2021-07-27 08:35:26,372 - DEBUG : Importing worksheetfuncs
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:35:26,373 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:35:26,373 - DEBUG : Imported worksheetfuncs
2021-07-27 08:35:26,373 - DEBUG : Importing menus
2021-07-27 08:35:26,383 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:35:26,383 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:35:26,383 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:35:26,383 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:35:26,384 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:35:26,384 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:35:26,384 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:35:26,384 - DEBUG : Imported menus
2021-07-27 08:35:26,385 - DEBUG : Importing callbacks
2021-07-27 08:35:26,385 - DEBUG : Imported callbacks
2021-07-27 08:35:26,386 - DEBUG : Importing custom_task_panes
2021-07-27 08:35:26,387 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:35:26,387 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:35:26,387 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:35:26,387 - DEBUG : Imported custom_task_panes
2021-07-27 08:35:26,388 - DEBUG : Importing test
2021-07-27 08:35:26,389 - DEBUG : Imported test
2021-07-27 08:35:26,389 - DEBUG : Importing ribbon_functions
2021-07-27 08:35:28,094 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 08:35:28,127 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:35:28,127 - DEBUG : matplotlib version 3.4.2
2021-07-27 08:35:28,127 - DEBUG : interactive is False
2021-07-27 08:35:28,127 - DEBUG : platform is win32
2021-07-27 08:35:28,127 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_f60000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_f60000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 08:35:28,184 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:35:28,193 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 08:35:28,435 - DEBUG : Loaded backend agg version unknown.
2021-07-27 08:35:28,440 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001DB81EDB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001DB81F34220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001DB81F44220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001DBA2511B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001DBA24B2E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001DBA2504310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001DBA24A2820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001DBA2504A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001DBA24F9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001DBA24E4CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001DBA24E42B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001DBA24DC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001DB81F29580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001DBA24CFC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001DB81EDB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001DB81F34220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001DB81F44220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001DBA2511B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001DBA24B2E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001DBA2504310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001DBA24A2820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001DBA2504A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001DBA24F9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001DBA24E4CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001DBA24E42B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001DBA24DC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001DB81F29580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001DBA24CFC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:35:28,440 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:35:28,440 - DEBUG : Imported ribbon_functions
2021-07-27 08:35:28,440 - DEBUG : Importing debugging
2021-07-27 08:35:29,812 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:35:29,812 - DEBUG : Imported debugging
2021-07-27 08:35:29,812 - DEBUG : Importing meta_variables
2021-07-27 08:35:29,812 - DEBUG : Imported meta_variables
2021-07-27 08:35:29,911 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:35:29,927 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:35:29,952 - INFO : This product is licensed to 
2021-07-27 08:35:29,952 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:35:29,960 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:35:29,960 - DEBUG : Binding Python functions to Excel
2021-07-27 08:35:29,960 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:35:29,960 - DEBUG :     - pyxll_version
2021-07-27 08:35:29,960 - DEBUG :     - python_version
2021-07-27 08:35:29,960 - DEBUG :     - win32api_is_installed
2021-07-27 08:35:29,960 - DEBUG :     - win32com_is_installed
2021-07-27 08:35:29,960 - DEBUG :     - numpy_is_installed
2021-07-27 08:35:29,960 - DEBUG :     - pyxll_logfile
2021-07-27 08:35:29,960 - DEBUG :     - get_formula
2021-07-27 08:35:29,960 - DEBUG :     - get_array_formula
2021-07-27 08:35:29,960 - DEBUG :     - get_last_error
2021-07-27 08:35:29,960 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:35:29,960 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:35:29,960 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:35:29,960 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:35:29,960 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:35:29,960 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:35:29,960 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:35:29,960 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:35:29,960 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:35:29,960 - DEBUG :     - xl_cell_example
2021-07-27 08:35:29,960 - DEBUG :     - recalc_on_open_test
2021-07-27 08:35:29,960 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:35:29,960 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:35:29,960 - DEBUG :     - one_cell_one_sim
2021-07-27 08:35:29,960 - DEBUG :     - one_row_one_sim
2021-07-27 08:35:29,988 - DEBUG : Adding menus to Excel:
2021-07-27 08:35:29,988 - DEBUG :   - PyXLL
2021-07-27 08:35:29,988 - DEBUG :     - Reload PyXLL
2021-07-27 08:35:29,988 - DEBUG :     - Another example menu item
2021-07-27 08:35:29,988 - DEBUG :     - More Examples
2021-07-27 08:35:29,988 - DEBUG :       - Click me
2021-07-27 08:35:29,988 - DEBUG :       - Unicode Test
2021-07-27 08:35:29,988 - DEBUG :     - Open log file
2021-07-27 08:35:29,988 - DEBUG :     - Attach To VS Code
2021-07-27 08:35:29,988 - DEBUG :     - Custom Task Panes
2021-07-27 08:35:29,988 - DEBUG :       - Qt
2021-07-27 08:35:29,988 - DEBUG :       - Tk
2021-07-27 08:35:29,988 - DEBUG :       - Wx
2021-07-27 08:35:29,988 - DEBUG :     - Example Menu Item 1
2021-07-27 08:35:29,988 - DEBUG :     - Show last error
2021-07-27 08:35:29,988 - DEBUG :     - About PyXLL...
2021-07-27 08:35:29,988 - DEBUG :   - PyXLL example menu
2021-07-27 08:35:29,988 - DEBUG :     - Click me
2021-07-27 08:35:30,061 - DEBUG : Finished binding Python functions
2021-07-27 08:35:30,061 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 08:35:30,061 - DEBUG : pyxll._post_open complete.
2021-07-27 08:35:30,078 - DEBUG : PyXLL initialization complete.
2021-07-27 08:35:41,412 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:35:52,458 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:36:03,554 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:36:14,630 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-27 08:36:18,067 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:36:18,067 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:36:18,086 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:36:18,142 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:36:38,291 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:36:41,440 - ERROR : Traceback (most recent call last):
2021-07-27 08:36:41,440 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-27 08:36:41,441 - ERROR :     ax.hist(hist_data, bins=histogram_bins)
2021-07-27 08:36:41,441 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 08:36:41,444 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 08:36:41,444 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 08:36:41,446 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 08:36:41,446 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 08:36:41,447 - ERROR :     if len(X) == 0:
2021-07-27 08:36:41,447 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 08:37:20,628 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:37:23,007 - ERROR : Traceback (most recent call last):
2021-07-27 08:37:23,007 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 166, in advanced_simulation_cell_wrapper
2021-07-27 08:37:23,008 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-27 08:37:23,008 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 115, in advanced_simulation_cell
2021-07-27 08:37:23,009 - ERROR :     if re.match("[0-9]+", cell_value).group() == cell_value:
2021-07-27 08:37:23,009 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 189, in match
2021-07-27 08:37:23,009 - ERROR :     return _compile(pattern, flags).match(string)
2021-07-27 08:37:23,009 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 08:37:24,395 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:37:30,836 - ERROR : Traceback (most recent call last):
2021-07-27 08:37:30,836 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 166, in advanced_simulation_cell_wrapper
2021-07-27 08:37:30,838 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-27 08:37:30,838 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 115, in advanced_simulation_cell
2021-07-27 08:37:30,839 - ERROR :     if re.match("[0-9]+", cell_value).group() == cell_value:
2021-07-27 08:37:30,839 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 189, in match
2021-07-27 08:37:30,841 - ERROR :     return _compile(pattern, flags).match(string)
2021-07-27 08:37:30,841 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 08:38:23,459 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 08:38:23,467 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:38:23,467 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:38:23,467 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:38:23,467 - DEBUG : -------- PyXLL config --------
2021-07-27 08:38:23,467 - DEBUG : [LOG]
2021-07-27 08:38:23,467 - DEBUG : encoding = utf-8
2021-07-27 08:38:23,467 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:38:23,467 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:38:23,467 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:38:23,467 - DEBUG : verbosity = debug
2021-07-27 08:38:23,467 - DEBUG : 
2021-07-27 08:38:23,467 - DEBUG : [PYTHON]
2021-07-27 08:38:23,468 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:38:23,468 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:38:23,468 - DEBUG : 
2021-07-27 08:38:23,468 - DEBUG : [PYXLL]
2021-07-27 08:38:23,468 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:38:23,468 - DEBUG : developer_mode = 1
2021-07-27 08:38:23,468 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:38:23,468 - DEBUG : modules = 
2021-07-27 08:38:23,468 - DEBUG :     misc
2021-07-27 08:38:23,468 - DEBUG :     worksheetfuncs
2021-07-27 08:38:23,468 - DEBUG :     menus
2021-07-27 08:38:23,468 - DEBUG :     callbacks
2021-07-27 08:38:23,468 - DEBUG :     custom_task_panes
2021-07-27 08:38:23,468 - DEBUG :     test
2021-07-27 08:38:23,468 - DEBUG :     ribbon_functions
2021-07-27 08:38:23,468 - DEBUG :     debugging
2021-07-27 08:38:23,468 - DEBUG :     meta_variables
2021-07-27 08:38:23,468 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:38:23,468 - DEBUG : ------------------------------
2021-07-27 08:38:23,468 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:38:23,469 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:38:23,469 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:38:23,469 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:38:23,469 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:38:23,469 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:38:23,475 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 08:38:23,553 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 08:38:23,561 - DEBUG : Reloading misc
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:38:23,561 - DEBUG : Reloaded misc
2021-07-27 08:38:23,561 - DEBUG : Reloading worksheetfuncs
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:38:23,561 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:38:23,568 - DEBUG : Reloaded worksheetfuncs
2021-07-27 08:38:23,568 - DEBUG : Reloading menus
2021-07-27 08:38:23,568 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:38:23,569 - DEBUG : Reloaded menus
2021-07-27 08:38:23,569 - DEBUG : Reloading callbacks
2021-07-27 08:38:23,569 - DEBUG : Reloaded callbacks
2021-07-27 08:38:23,569 - DEBUG : Reloading custom_task_panes
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:38:23,569 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:38:23,569 - DEBUG : Reloaded custom_task_panes
2021-07-27 08:38:23,569 - DEBUG : Reloading test
2021-07-27 08:38:23,569 - DEBUG : Reloaded test
2021-07-27 08:38:23,569 - DEBUG : Reloading meta_variables
2021-07-27 08:38:23,569 - DEBUG : Reloaded meta_variables
2021-07-27 08:38:23,569 - DEBUG : Reloading dependency error_functions
2021-07-27 08:38:23,569 - DEBUG : Reloaded dependency error_functions
2021-07-27 08:38:23,569 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 08:38:23,576 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 08:38:23,576 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 08:38:23,576 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 08:38:23,576 - DEBUG : Reloading dependency examples
2021-07-27 08:38:23,578 - DEBUG : Reloaded dependency examples
2021-07-27 08:38:23,578 - DEBUG : Reloading ribbon_functions
2021-07-27 08:38:23,579 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001DB81EDB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001DB81F34220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001DB81F44220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001DBA2511B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001DBA24B2E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001DBA2504310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001DBA24A2820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001DBA2504A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001DBA24F9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001DBA24E4CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001DBA24E42B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001DBA24DC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001DB81F29580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001DBA24CFC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001DB81EDB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001DB81F34220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001DB81F44220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001DBA2511B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001DBA24B2E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001DBA2504310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001DBA24A2820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001DBA2504A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001DBA24F9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001DBA24E4CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001DBA24E42B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001DBA24DC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001DB81F29580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001DBA24CFC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:38:23,579 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:38:23,579 - DEBUG : Reloaded ribbon_functions
2021-07-27 08:38:23,579 - DEBUG : Reloading debugging
2021-07-27 08:38:23,579 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:38:23,579 - DEBUG : Reloaded debugging
2021-07-27 08:38:23,640 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:38:23,653 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:38:23,671 - INFO : This product is licensed to 
2021-07-27 08:38:23,671 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:38:23,684 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:38:23,684 - DEBUG : Binding Python functions to Excel
2021-07-27 08:38:23,684 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:38:23,684 - DEBUG :     - pyxll_version
2021-07-27 08:38:23,684 - DEBUG :     - python_version
2021-07-27 08:38:23,684 - DEBUG :     - win32api_is_installed
2021-07-27 08:38:23,684 - DEBUG :     - win32com_is_installed
2021-07-27 08:38:23,684 - DEBUG :     - numpy_is_installed
2021-07-27 08:38:23,685 - DEBUG :     - pyxll_logfile
2021-07-27 08:38:23,685 - DEBUG :     - get_formula
2021-07-27 08:38:23,685 - DEBUG :     - get_array_formula
2021-07-27 08:38:23,685 - DEBUG :     - get_last_error
2021-07-27 08:38:23,685 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:38:23,685 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:38:23,685 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:38:23,685 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:38:23,685 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:38:23,685 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:38:23,685 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:38:23,685 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:38:23,685 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:38:23,685 - DEBUG :     - xl_cell_example
2021-07-27 08:38:23,685 - DEBUG :     - recalc_on_open_test
2021-07-27 08:38:23,685 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:38:23,685 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:38:23,685 - DEBUG :     - one_cell_one_sim
2021-07-27 08:38:23,685 - DEBUG :     - one_row_one_sim
2021-07-27 08:38:23,703 - DEBUG : Adding menus to Excel:
2021-07-27 08:38:23,703 - DEBUG :   - PyXLL
2021-07-27 08:38:23,703 - DEBUG :     - Reload PyXLL
2021-07-27 08:38:23,703 - DEBUG :     - Another example menu item
2021-07-27 08:38:23,703 - DEBUG :     - More Examples
2021-07-27 08:38:23,703 - DEBUG :       - Click me
2021-07-27 08:38:23,703 - DEBUG :       - Unicode Test
2021-07-27 08:38:23,703 - DEBUG :     - Open log file
2021-07-27 08:38:23,703 - DEBUG :     - Attach To VS Code
2021-07-27 08:38:23,703 - DEBUG :     - Custom Task Panes
2021-07-27 08:38:23,703 - DEBUG :       - Qt
2021-07-27 08:38:23,703 - DEBUG :       - Tk
2021-07-27 08:38:23,703 - DEBUG :       - Wx
2021-07-27 08:38:23,703 - DEBUG :     - Example Menu Item 1
2021-07-27 08:38:23,703 - DEBUG :     - Show last error
2021-07-27 08:38:23,703 - DEBUG :     - About PyXLL...
2021-07-27 08:38:23,703 - DEBUG :   - PyXLL example menu
2021-07-27 08:38:23,703 - DEBUG :     - Click me
2021-07-27 08:38:23,712 - DEBUG : Finished binding Python functions
2021-07-27 08:38:23,712 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 08:38:24,506 - DEBUG : pyxll._post_open complete.
2021-07-27 08:38:24,506 - DEBUG : PyXLL initialization complete.
2021-07-27 08:38:24,511 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:38:24,511 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:38:24,517 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:38:24,625 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:38:26,170 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:38:35,705 - ERROR : Traceback (most recent call last):
2021-07-27 08:38:35,705 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 166, in advanced_simulation_cell_wrapper
2021-07-27 08:38:35,706 - ERROR :     
2021-07-27 08:38:35,706 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 115, in advanced_simulation_cell
2021-07-27 08:38:35,707 - ERROR :     if type(cell_value) == float or type(cell_value) == int:
2021-07-27 08:38:35,707 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 189, in match
2021-07-27 08:38:35,709 - ERROR :     return _compile(pattern, flags).match(string)
2021-07-27 08:38:35,709 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 08:38:36,369 - DEBUG : Closing PyXLL Python module.
2021-07-27 08:38:36,369 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 08:38:36,369 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 08:38:36,369 - DEBUG : PyXLL Python module closed.
2021-07-27 08:38:38,771 - DEBUG : 
Tue Jul 27 08:38:38 2021
---------- PyXLL Stopped ----------
2021-07-27 08:38:42,728 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:38:42,728 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:38:42,729 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:38:42,729 - DEBUG : -------- PyXLL config --------
2021-07-27 08:38:42,729 - DEBUG : [LOG]
2021-07-27 08:38:42,729 - DEBUG : encoding = utf-8
2021-07-27 08:38:42,729 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:38:42,729 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:38:42,729 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:38:42,729 - DEBUG : verbosity = debug
2021-07-27 08:38:42,729 - DEBUG : 
2021-07-27 08:38:42,729 - DEBUG : [PYTHON]
2021-07-27 08:38:42,729 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:38:42,729 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:38:42,729 - DEBUG : 
2021-07-27 08:38:42,729 - DEBUG : [PYXLL]
2021-07-27 08:38:42,729 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:38:42,729 - DEBUG : developer_mode = 1
2021-07-27 08:38:42,729 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:38:42,729 - DEBUG : modules = 
2021-07-27 08:38:42,729 - DEBUG :     misc
2021-07-27 08:38:42,729 - DEBUG :     worksheetfuncs
2021-07-27 08:38:42,729 - DEBUG :     menus
2021-07-27 08:38:42,729 - DEBUG :     callbacks
2021-07-27 08:38:42,729 - DEBUG :     custom_task_panes
2021-07-27 08:38:42,729 - DEBUG :     test
2021-07-27 08:38:42,729 - DEBUG :     ribbon_functions
2021-07-27 08:38:42,729 - DEBUG :     debugging
2021-07-27 08:38:42,729 - DEBUG :     meta_variables
2021-07-27 08:38:42,729 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:38:42,729 - DEBUG : ------------------------------
2021-07-27 08:38:42,732 - DEBUG : Attempting to load python38.dll
2021-07-27 08:38:42,735 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 08:38:42,737 - DEBUG : Checking Py_IsInitialized...
2021-07-27 08:38:42,737 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 08:38:42,863 - DEBUG : Calling Py_Initialize...
2021-07-27 08:38:43,069 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 08:38:43,070 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 08:38:43,070 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:38:43,070 - DEBUG : Python is initialized.
2021-07-27 08:38:43,071 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 08:38:43,073 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 08:38:43,073 - DEBUG : Looking for module 'site'...
2021-07-27 08:38:43,102 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 08:38:43,102 - DEBUG : Importing pyxll module
2021-07-27 08:38:43,102 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 08:38:43,102 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 08:38:43,102 - DEBUG :   Detected Python3
2021-07-27 08:38:43,149 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 08:38:43,149 - DEBUG : pyxll module imported
2021-07-27 08:38:43,149 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:38:43,149 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:38:43,149 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:38:43,164 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:38:43,164 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:38:43,417 - DEBUG : Importing misc
2021-07-27 08:38:43,419 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:38:43,420 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:38:43,420 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:38:43,420 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:38:43,420 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:38:43,420 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:38:43,421 - DEBUG : Imported misc
2021-07-27 08:38:43,421 - DEBUG : Importing worksheetfuncs
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:38:43,421 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:38:43,425 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:38:43,425 - DEBUG : Imported worksheetfuncs
2021-07-27 08:38:43,425 - DEBUG : Importing menus
2021-07-27 08:38:43,435 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:38:43,435 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:38:43,435 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:38:43,436 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:38:43,436 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:38:43,436 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:38:43,436 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:38:43,436 - DEBUG : Imported menus
2021-07-27 08:38:43,436 - DEBUG : Importing callbacks
2021-07-27 08:38:43,437 - DEBUG : Imported callbacks
2021-07-27 08:38:43,437 - DEBUG : Importing custom_task_panes
2021-07-27 08:38:43,438 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:38:43,438 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:38:43,438 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:38:43,439 - DEBUG : Imported custom_task_panes
2021-07-27 08:38:43,439 - DEBUG : Importing test
2021-07-27 08:38:43,439 - DEBUG : Imported test
2021-07-27 08:38:43,439 - DEBUG : Importing ribbon_functions
2021-07-27 08:38:44,548 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 08:38:44,575 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:38:44,586 - DEBUG : matplotlib version 3.4.2
2021-07-27 08:38:44,586 - DEBUG : interactive is False
2021-07-27 08:38:44,586 - DEBUG : platform is win32
2021-07-27 08:38:44,586 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_810000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_810000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 08:38:44,628 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:38:44,637 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 08:38:44,834 - DEBUG : Loaded backend agg version unknown.
2021-07-27 08:38:44,834 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001489747B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000148974D7220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000148974E4220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014897571B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014897510E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014897564310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014897503820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014897564A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014897559FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001489754ECA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001489754E2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001489753C580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000148974C7580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001489752FC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001489747B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000148974D7220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000148974E4220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014897571B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014897510E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014897564310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014897503820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014897564A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014897559FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001489754ECA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001489754E2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001489753C580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000148974C7580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001489752FC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:38:44,834 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:38:44,834 - DEBUG : Imported ribbon_functions
2021-07-27 08:38:44,834 - DEBUG : Importing debugging
2021-07-27 08:38:45,849 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:38:45,850 - DEBUG : Imported debugging
2021-07-27 08:38:45,850 - DEBUG : Importing meta_variables
2021-07-27 08:38:45,850 - DEBUG : Imported meta_variables
2021-07-27 08:38:45,938 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:38:45,953 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:38:45,977 - INFO : This product is licensed to 
2021-07-27 08:38:45,977 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:38:45,993 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:38:45,993 - DEBUG : Binding Python functions to Excel
2021-07-27 08:38:45,993 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:38:45,993 - DEBUG :     - pyxll_version
2021-07-27 08:38:45,993 - DEBUG :     - python_version
2021-07-27 08:38:45,993 - DEBUG :     - win32api_is_installed
2021-07-27 08:38:45,994 - DEBUG :     - win32com_is_installed
2021-07-27 08:38:45,994 - DEBUG :     - numpy_is_installed
2021-07-27 08:38:45,994 - DEBUG :     - pyxll_logfile
2021-07-27 08:38:45,994 - DEBUG :     - get_formula
2021-07-27 08:38:45,994 - DEBUG :     - get_array_formula
2021-07-27 08:38:45,994 - DEBUG :     - get_last_error
2021-07-27 08:38:45,994 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:38:45,994 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:38:45,995 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:38:45,995 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:38:45,995 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:38:45,995 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:38:45,995 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:38:45,995 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:38:45,995 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:38:45,995 - DEBUG :     - xl_cell_example
2021-07-27 08:38:45,995 - DEBUG :     - recalc_on_open_test
2021-07-27 08:38:45,995 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:38:45,996 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:38:45,996 - DEBUG :     - one_cell_one_sim
2021-07-27 08:38:45,996 - DEBUG :     - one_row_one_sim
2021-07-27 08:38:46,015 - DEBUG : Adding menus to Excel:
2021-07-27 08:38:46,015 - DEBUG :   - PyXLL
2021-07-27 08:38:46,015 - DEBUG :     - Reload PyXLL
2021-07-27 08:38:46,015 - DEBUG :     - Another example menu item
2021-07-27 08:38:46,015 - DEBUG :     - More Examples
2021-07-27 08:38:46,015 - DEBUG :       - Click me
2021-07-27 08:38:46,015 - DEBUG :       - Unicode Test
2021-07-27 08:38:46,015 - DEBUG :     - Open log file
2021-07-27 08:38:46,015 - DEBUG :     - Attach To VS Code
2021-07-27 08:38:46,015 - DEBUG :     - Custom Task Panes
2021-07-27 08:38:46,015 - DEBUG :       - Qt
2021-07-27 08:38:46,015 - DEBUG :       - Tk
2021-07-27 08:38:46,015 - DEBUG :       - Wx
2021-07-27 08:38:46,015 - DEBUG :     - Example Menu Item 1
2021-07-27 08:38:46,015 - DEBUG :     - Show last error
2021-07-27 08:38:46,015 - DEBUG :     - About PyXLL...
2021-07-27 08:38:46,015 - DEBUG :   - PyXLL example menu
2021-07-27 08:38:46,015 - DEBUG :     - Click me
2021-07-27 08:38:46,074 - DEBUG : Finished binding Python functions
2021-07-27 08:38:46,075 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 08:38:46,075 - DEBUG : pyxll._post_open complete.
2021-07-27 08:38:46,089 - DEBUG : PyXLL initialization complete.
2021-07-27 08:38:49,485 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:38:49,485 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:38:49,505 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:38:49,560 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:39:08,942 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,942 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,950 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,952 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,960 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,960 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:39:08,961 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,963 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,971 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,972 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,973 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,981 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,982 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,982 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,982 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,982 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,982 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,982 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,983 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:08,991 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:08,999 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,000 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,000 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,000 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,000 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:09,000 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,000 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,001 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 08:39:09,004 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,005 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,007 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,010 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,018 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,021 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:09,022 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,029 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 08:39:09,031 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 08:39:09,031 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-27 08:39:16,059 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:39:18,486 - ERROR : Traceback (most recent call last):
2021-07-27 08:39:18,486 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 169, in advanced_simulation_cell_wrapper
2021-07-27 08:39:18,487 - ERROR :     ax.hist(hist_data, bins=histogram_bins)
2021-07-27 08:39:18,487 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 08:39:18,487 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 08:39:18,487 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 08:39:18,493 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 08:39:18,500 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 08:39:18,501 - ERROR :     if len(X) == 0:
2021-07-27 08:39:18,501 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 08:41:55,805 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:41:57,919 - ERROR : Traceback (most recent call last):
2021-07-27 08:41:57,919 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 169, in advanced_simulation_cell_wrapper
2021-07-27 08:41:57,921 - ERROR :     ax.hist(hist_data, bins=histogram_bins)
2021-07-27 08:41:57,921 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 08:41:57,923 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 08:41:57,923 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 08:41:57,923 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 08:41:57,923 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 08:41:57,929 - ERROR :     if len(X) == 0:
2021-07-27 08:41:57,930 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 08:43:02,105 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:43:03,299 - ERROR : Traceback (most recent call last):
2021-07-27 08:43:03,299 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 169, in advanced_simulation_cell_wrapper
2021-07-27 08:43:03,300 - ERROR :     
2021-07-27 08:43:03,300 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 08:43:03,301 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 08:43:03,301 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 08:43:03,304 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 08:43:03,304 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 08:43:03,305 - ERROR :     if len(X) == 0:
2021-07-27 08:43:03,306 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 08:43:05,967 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 08:43:05,972 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:43:05,972 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:43:05,972 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:43:05,972 - DEBUG : -------- PyXLL config --------
2021-07-27 08:43:05,972 - DEBUG : [LOG]
2021-07-27 08:43:05,972 - DEBUG : encoding = utf-8
2021-07-27 08:43:05,972 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:43:05,972 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:43:05,972 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:43:05,972 - DEBUG : verbosity = debug
2021-07-27 08:43:05,972 - DEBUG : 
2021-07-27 08:43:05,972 - DEBUG : [PYTHON]
2021-07-27 08:43:05,972 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:43:05,972 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:43:05,972 - DEBUG : 
2021-07-27 08:43:05,972 - DEBUG : [PYXLL]
2021-07-27 08:43:05,972 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:43:05,972 - DEBUG : developer_mode = 1
2021-07-27 08:43:05,972 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:43:05,972 - DEBUG : modules = 
2021-07-27 08:43:05,972 - DEBUG :     misc
2021-07-27 08:43:05,972 - DEBUG :     worksheetfuncs
2021-07-27 08:43:05,972 - DEBUG :     menus
2021-07-27 08:43:05,972 - DEBUG :     callbacks
2021-07-27 08:43:05,972 - DEBUG :     custom_task_panes
2021-07-27 08:43:05,972 - DEBUG :     test
2021-07-27 08:43:05,972 - DEBUG :     ribbon_functions
2021-07-27 08:43:05,972 - DEBUG :     debugging
2021-07-27 08:43:05,972 - DEBUG :     meta_variables
2021-07-27 08:43:05,972 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:43:05,972 - DEBUG : ------------------------------
2021-07-27 08:43:05,972 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:43:05,972 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:43:05,972 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:43:05,972 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:43:05,972 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:43:05,972 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:43:05,972 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 08:43:06,061 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 08:43:06,061 - DEBUG : Reloading misc
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:43:06,061 - DEBUG : Reloaded misc
2021-07-27 08:43:06,061 - DEBUG : Reloading worksheetfuncs
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:43:06,061 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:43:06,077 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:43:06,077 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:43:06,077 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:43:06,077 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:43:06,077 - DEBUG : Reloaded worksheetfuncs
2021-07-27 08:43:06,077 - DEBUG : Reloading menus
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:43:06,078 - DEBUG : Reloaded menus
2021-07-27 08:43:06,078 - DEBUG : Reloading callbacks
2021-07-27 08:43:06,078 - DEBUG : Reloaded callbacks
2021-07-27 08:43:06,078 - DEBUG : Reloading custom_task_panes
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:43:06,078 - DEBUG : Reloaded custom_task_panes
2021-07-27 08:43:06,078 - DEBUG : Reloading test
2021-07-27 08:43:06,078 - DEBUG : Reloaded test
2021-07-27 08:43:06,078 - DEBUG : Reloading meta_variables
2021-07-27 08:43:06,078 - DEBUG : Reloaded meta_variables
2021-07-27 08:43:06,078 - DEBUG : Reloading dependency error_functions
2021-07-27 08:43:06,078 - DEBUG : Reloaded dependency error_functions
2021-07-27 08:43:06,078 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 08:43:06,078 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 08:43:06,078 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 08:43:06,078 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 08:43:06,078 - DEBUG : Reloading dependency examples
2021-07-27 08:43:06,078 - DEBUG : Reloaded dependency examples
2021-07-27 08:43:06,078 - DEBUG : Reloading ribbon_functions
2021-07-27 08:43:06,078 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001489747B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000148974D7220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000148974E4220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014897571B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014897510E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014897564310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014897503820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014897564A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014897559FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001489754ECA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001489754E2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001489753C580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000148974C7580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001489752FC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001489747B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000148974D7220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000148974E4220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014897571B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014897510E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014897564310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014897503820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014897564A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014897559FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001489754ECA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001489754E2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001489753C580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000148974C7580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001489752FC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:43:06,078 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:43:06,078 - DEBUG : Reloaded ribbon_functions
2021-07-27 08:43:06,078 - DEBUG : Reloading debugging
2021-07-27 08:43:06,078 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:43:06,078 - DEBUG : Reloaded debugging
2021-07-27 08:43:06,150 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:43:06,157 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:43:06,202 - INFO : This product is licensed to 
2021-07-27 08:43:06,202 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:43:06,223 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:43:06,223 - DEBUG : Binding Python functions to Excel
2021-07-27 08:43:06,224 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:43:06,224 - DEBUG :     - pyxll_version
2021-07-27 08:43:06,224 - DEBUG :     - python_version
2021-07-27 08:43:06,224 - DEBUG :     - win32api_is_installed
2021-07-27 08:43:06,224 - DEBUG :     - win32com_is_installed
2021-07-27 08:43:06,224 - DEBUG :     - numpy_is_installed
2021-07-27 08:43:06,224 - DEBUG :     - pyxll_logfile
2021-07-27 08:43:06,224 - DEBUG :     - get_formula
2021-07-27 08:43:06,224 - DEBUG :     - get_array_formula
2021-07-27 08:43:06,224 - DEBUG :     - get_last_error
2021-07-27 08:43:06,224 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:43:06,224 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:43:06,224 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:43:06,224 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:43:06,224 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:43:06,224 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:43:06,224 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:43:06,224 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:43:06,224 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:43:06,224 - DEBUG :     - xl_cell_example
2021-07-27 08:43:06,224 - DEBUG :     - recalc_on_open_test
2021-07-27 08:43:06,224 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:43:06,224 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:43:06,224 - DEBUG :     - one_cell_one_sim
2021-07-27 08:43:06,224 - DEBUG :     - one_row_one_sim
2021-07-27 08:43:06,233 - DEBUG : Adding menus to Excel:
2021-07-27 08:43:06,233 - DEBUG :   - PyXLL
2021-07-27 08:43:06,233 - DEBUG :     - Reload PyXLL
2021-07-27 08:43:06,233 - DEBUG :     - Another example menu item
2021-07-27 08:43:06,233 - DEBUG :     - More Examples
2021-07-27 08:43:06,233 - DEBUG :       - Click me
2021-07-27 08:43:06,233 - DEBUG :       - Unicode Test
2021-07-27 08:43:06,233 - DEBUG :     - Open log file
2021-07-27 08:43:06,233 - DEBUG :     - Attach To VS Code
2021-07-27 08:43:06,233 - DEBUG :     - Custom Task Panes
2021-07-27 08:43:06,233 - DEBUG :       - Qt
2021-07-27 08:43:06,233 - DEBUG :       - Tk
2021-07-27 08:43:06,233 - DEBUG :       - Wx
2021-07-27 08:43:06,233 - DEBUG :     - Example Menu Item 1
2021-07-27 08:43:06,233 - DEBUG :     - Show last error
2021-07-27 08:43:06,233 - DEBUG :     - About PyXLL...
2021-07-27 08:43:06,233 - DEBUG :   - PyXLL example menu
2021-07-27 08:43:06,233 - DEBUG :     - Click me
2021-07-27 08:43:06,248 - DEBUG : Finished binding Python functions
2021-07-27 08:43:06,248 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 08:43:07,139 - DEBUG : pyxll._post_open complete.
2021-07-27 08:43:07,141 - DEBUG : PyXLL initialization complete.
2021-07-27 08:43:07,145 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:43:07,145 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:43:07,157 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:43:07,276 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:43:08,666 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:43:10,447 - ERROR : Traceback (most recent call last):
2021-07-27 08:43:10,447 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 169, in advanced_simulation_cell_wrapper
2021-07-27 08:43:10,447 - ERROR :     
2021-07-27 08:43:10,447 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 08:43:10,450 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 08:43:10,450 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 08:43:10,453 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 08:43:10,454 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 08:43:10,454 - ERROR :     if len(X) == 0:
2021-07-27 08:43:10,455 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 08:45:18,434 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:48:02,185 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 08:48:02,189 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:48:02,189 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:48:02,189 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:48:02,189 - DEBUG : -------- PyXLL config --------
2021-07-27 08:48:02,189 - DEBUG : [LOG]
2021-07-27 08:48:02,189 - DEBUG : encoding = utf-8
2021-07-27 08:48:02,189 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:48:02,189 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:48:02,189 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:48:02,189 - DEBUG : verbosity = debug
2021-07-27 08:48:02,189 - DEBUG : 
2021-07-27 08:48:02,189 - DEBUG : [PYTHON]
2021-07-27 08:48:02,190 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:48:02,190 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:48:02,190 - DEBUG : 
2021-07-27 08:48:02,190 - DEBUG : [PYXLL]
2021-07-27 08:48:02,190 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:48:02,190 - DEBUG : developer_mode = 1
2021-07-27 08:48:02,190 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:48:02,190 - DEBUG : modules = 
2021-07-27 08:48:02,190 - DEBUG :     misc
2021-07-27 08:48:02,190 - DEBUG :     worksheetfuncs
2021-07-27 08:48:02,190 - DEBUG :     menus
2021-07-27 08:48:02,190 - DEBUG :     callbacks
2021-07-27 08:48:02,190 - DEBUG :     custom_task_panes
2021-07-27 08:48:02,190 - DEBUG :     test
2021-07-27 08:48:02,190 - DEBUG :     ribbon_functions
2021-07-27 08:48:02,190 - DEBUG :     debugging
2021-07-27 08:48:02,190 - DEBUG :     meta_variables
2021-07-27 08:48:02,190 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:48:02,190 - DEBUG : ------------------------------
2021-07-27 08:48:02,190 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:48:02,190 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:48:02,190 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:48:02,191 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:48:02,191 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:48:02,191 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:48:02,201 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 08:48:02,287 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 08:48:02,287 - DEBUG : Reloading misc
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:48:02,295 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:48:02,302 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:48:02,302 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:48:02,302 - DEBUG : Reloaded misc
2021-07-27 08:48:02,303 - DEBUG : Reloading worksheetfuncs
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:48:02,303 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:48:02,311 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:48:02,311 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:48:02,312 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:48:02,313 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:48:02,313 - DEBUG : Reloaded worksheetfuncs
2021-07-27 08:48:02,313 - DEBUG : Reloading menus
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:48:02,315 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:48:02,315 - DEBUG : Reloaded menus
2021-07-27 08:48:02,315 - DEBUG : Reloading callbacks
2021-07-27 08:48:02,318 - DEBUG : Reloaded callbacks
2021-07-27 08:48:02,319 - DEBUG : Reloading custom_task_panes
2021-07-27 08:48:02,319 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:48:02,319 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:48:02,319 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:48:02,319 - DEBUG : Reloaded custom_task_panes
2021-07-27 08:48:02,319 - DEBUG : Reloading test
2021-07-27 08:48:02,324 - DEBUG : Reloaded test
2021-07-27 08:48:02,324 - DEBUG : Reloading meta_variables
2021-07-27 08:48:09,234 - DEBUG : Reloaded meta_variables
2021-07-27 08:48:09,235 - DEBUG : Reloading dependency error_functions
2021-07-27 08:48:09,241 - DEBUG : Reloaded dependency error_functions
2021-07-27 08:48:09,242 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 08:48:09,249 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 08:48:09,249 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 08:48:09,254 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 08:48:09,254 - DEBUG : Reloading dependency examples
2021-07-27 08:48:09,262 - DEBUG : Reloaded dependency examples
2021-07-27 08:48:09,263 - DEBUG : Reloading ribbon_functions
2021-07-27 08:48:09,271 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001489747B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000148974D7220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000148974E4220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014897571B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014897510E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014897564310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014897503820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014897564A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014897559FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001489754ECA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001489754E2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001489753C580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000148974C7580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001489752FC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001489747B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000148974D7220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000148974E4220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014897571B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014897510E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014897564310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014897503820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014897564A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014897559FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001489754ECA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001489754E2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001489753C580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000148974C7580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001489752FC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:48:09,273 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:48:09,274 - DEBUG : Reloaded ribbon_functions
2021-07-27 08:48:09,274 - DEBUG : Reloading debugging
2021-07-27 08:48:09,277 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:48:09,277 - DEBUG : Reloaded debugging
2021-07-27 08:48:09,448 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:48:09,495 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:48:09,555 - INFO : This product is licensed to 
2021-07-27 08:48:09,555 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:48:09,583 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:48:09,583 - DEBUG : Binding Python functions to Excel
2021-07-27 08:48:09,585 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:48:09,585 - DEBUG :     - pyxll_version
2021-07-27 08:48:09,585 - DEBUG :     - python_version
2021-07-27 08:48:09,585 - DEBUG :     - win32api_is_installed
2021-07-27 08:48:09,585 - DEBUG :     - win32com_is_installed
2021-07-27 08:48:09,585 - DEBUG :     - numpy_is_installed
2021-07-27 08:48:09,585 - DEBUG :     - pyxll_logfile
2021-07-27 08:48:09,585 - DEBUG :     - get_formula
2021-07-27 08:48:09,585 - DEBUG :     - get_array_formula
2021-07-27 08:48:09,585 - DEBUG :     - get_last_error
2021-07-27 08:48:09,585 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:48:09,585 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:48:09,585 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:48:09,585 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:48:09,585 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:48:09,585 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:48:09,585 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:48:09,585 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:48:09,585 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:48:09,593 - DEBUG :     - xl_cell_example
2021-07-27 08:48:09,593 - DEBUG :     - recalc_on_open_test
2021-07-27 08:48:09,593 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:48:09,593 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:48:09,593 - DEBUG :     - one_cell_one_sim
2021-07-27 08:48:09,593 - DEBUG :     - one_row_one_sim
2021-07-27 08:48:09,649 - DEBUG : Adding menus to Excel:
2021-07-27 08:48:09,649 - DEBUG :   - PyXLL
2021-07-27 08:48:09,649 - DEBUG :     - Reload PyXLL
2021-07-27 08:48:09,649 - DEBUG :     - Another example menu item
2021-07-27 08:48:09,649 - DEBUG :     - More Examples
2021-07-27 08:48:09,649 - DEBUG :       - Click me
2021-07-27 08:48:09,649 - DEBUG :       - Unicode Test
2021-07-27 08:48:09,649 - DEBUG :     - Open log file
2021-07-27 08:48:09,649 - DEBUG :     - Attach To VS Code
2021-07-27 08:48:09,649 - DEBUG :     - Custom Task Panes
2021-07-27 08:48:09,649 - DEBUG :       - Qt
2021-07-27 08:48:09,649 - DEBUG :       - Tk
2021-07-27 08:48:09,649 - DEBUG :       - Wx
2021-07-27 08:48:09,649 - DEBUG :     - Example Menu Item 1
2021-07-27 08:48:09,649 - DEBUG :     - Show last error
2021-07-27 08:48:09,649 - DEBUG :     - About PyXLL...
2021-07-27 08:48:09,649 - DEBUG :   - PyXLL example menu
2021-07-27 08:48:09,649 - DEBUG :     - Click me
2021-07-27 08:48:09,683 - DEBUG : Finished binding Python functions
2021-07-27 08:48:09,691 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 08:48:11,320 - DEBUG : pyxll._post_open complete.
2021-07-27 08:48:11,320 - DEBUG : PyXLL initialization complete.
2021-07-27 08:48:14,794 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:48:19,255 - ERROR : Traceback (most recent call last):
2021-07-27 08:48:19,270 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 169, in advanced_simulation_cell_wrapper
2021-07-27 08:48:19,273 - ERROR :     fig, ax = plt.subplots(1, 1)
2021-07-27 08:48:19,274 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 08:48:19,277 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 08:48:19,279 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 08:48:19,281 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 08:48:19,286 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 08:48:19,289 - ERROR :     if len(X) == 0:
2021-07-27 08:48:19,290 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 08:48:19,914 - DEBUG : Closing PyXLL Python module.
2021-07-27 08:48:19,914 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 08:48:19,915 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 08:48:19,915 - DEBUG : PyXLL Python module closed.
2021-07-27 08:48:25,135 - DEBUG : 
Tue Jul 27 08:48:25 2021
---------- PyXLL Stopped ----------
2021-07-27 08:48:47,647 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:48:47,647 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:48:47,647 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:48:47,648 - DEBUG : -------- PyXLL config --------
2021-07-27 08:48:47,648 - DEBUG : [LOG]
2021-07-27 08:48:47,648 - DEBUG : encoding = utf-8
2021-07-27 08:48:47,648 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:48:47,648 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:48:47,648 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:48:47,648 - DEBUG : verbosity = debug
2021-07-27 08:48:47,648 - DEBUG : 
2021-07-27 08:48:47,648 - DEBUG : [PYTHON]
2021-07-27 08:48:47,648 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:48:47,648 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:48:47,648 - DEBUG : 
2021-07-27 08:48:47,648 - DEBUG : [PYXLL]
2021-07-27 08:48:47,648 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:48:47,648 - DEBUG : developer_mode = 1
2021-07-27 08:48:47,648 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:48:47,648 - DEBUG : modules = 
2021-07-27 08:48:47,648 - DEBUG :     misc
2021-07-27 08:48:47,648 - DEBUG :     worksheetfuncs
2021-07-27 08:48:47,648 - DEBUG :     menus
2021-07-27 08:48:47,648 - DEBUG :     callbacks
2021-07-27 08:48:47,648 - DEBUG :     custom_task_panes
2021-07-27 08:48:47,648 - DEBUG :     test
2021-07-27 08:48:47,648 - DEBUG :     ribbon_functions
2021-07-27 08:48:47,648 - DEBUG :     debugging
2021-07-27 08:48:47,648 - DEBUG :     meta_variables
2021-07-27 08:48:47,648 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:48:47,648 - DEBUG : ------------------------------
2021-07-27 08:48:47,653 - DEBUG : Attempting to load python38.dll
2021-07-27 08:48:47,659 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 08:48:47,663 - DEBUG : Checking Py_IsInitialized...
2021-07-27 08:48:47,663 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 08:48:47,865 - DEBUG : Calling Py_Initialize...
2021-07-27 08:48:47,997 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 08:48:47,998 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 08:48:47,998 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:48:47,998 - DEBUG : Python is initialized.
2021-07-27 08:48:47,999 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 08:48:48,001 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 08:48:48,001 - DEBUG : Looking for module 'site'...
2021-07-27 08:48:48,034 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 08:48:48,034 - DEBUG : Importing pyxll module
2021-07-27 08:48:48,034 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 08:48:48,034 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 08:48:48,034 - DEBUG :   Detected Python3
2021-07-27 08:48:48,072 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 08:48:48,072 - DEBUG : pyxll module imported
2021-07-27 08:48:48,072 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:48:48,072 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:48:48,072 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:48:48,088 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:48:48,089 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:48:48,335 - DEBUG : Importing misc
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:48:48,335 - DEBUG : Imported misc
2021-07-27 08:48:48,335 - DEBUG : Importing worksheetfuncs
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:48:48,335 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:48:48,343 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:48:48,343 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:48:48,343 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:48:48,343 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:48:48,343 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:48:48,343 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:48:48,343 - DEBUG : Imported worksheetfuncs
2021-07-27 08:48:48,343 - DEBUG : Importing menus
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:48:48,346 - DEBUG : Imported menus
2021-07-27 08:48:48,346 - DEBUG : Importing callbacks
2021-07-27 08:48:48,346 - DEBUG : Imported callbacks
2021-07-27 08:48:48,346 - DEBUG : Importing custom_task_panes
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:48:48,346 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:48:48,346 - DEBUG : Imported custom_task_panes
2021-07-27 08:48:48,346 - DEBUG : Importing test
2021-07-27 08:48:48,353 - DEBUG : Imported test
2021-07-27 08:48:48,353 - DEBUG : Importing ribbon_functions
2021-07-27 08:48:49,480 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 08:48:49,498 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:48:49,498 - DEBUG : matplotlib version 3.4.2
2021-07-27 08:48:49,498 - DEBUG : interactive is False
2021-07-27 08:48:49,498 - DEBUG : platform is win32
2021-07-27 08:48:49,498 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_2a0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_2a0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 08:48:49,571 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 08:48:49,580 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 08:48:49,817 - DEBUG : Loaded backend agg version unknown.
2021-07-27 08:48:49,822 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016D74F0B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016D74F67220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016D74F74220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016D75001B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016D74F9BE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016D74FF4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016D74F93820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016D74FF4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016D74FE9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016D74FD2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016D74FD22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016D74FCC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016D74F5A580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016D74FBEC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016D74F0B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016D74F67220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016D74F74220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016D75001B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016D74F9BE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016D74FF4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016D74F93820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016D74FF4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016D74FE9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016D74FD2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016D74FD22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016D74FCC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016D74F5A580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016D74FBEC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:48:49,822 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:48:49,822 - DEBUG : Imported ribbon_functions
2021-07-27 08:48:49,822 - DEBUG : Importing debugging
2021-07-27 08:48:50,823 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:48:50,823 - DEBUG : Imported debugging
2021-07-27 08:48:50,825 - DEBUG : Importing meta_variables
2021-07-27 08:48:50,825 - DEBUG : Imported meta_variables
2021-07-27 08:48:50,876 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:48:50,884 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:48:50,908 - INFO : This product is licensed to 
2021-07-27 08:48:50,908 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:48:50,914 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:48:50,914 - DEBUG : Binding Python functions to Excel
2021-07-27 08:48:50,914 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:48:50,914 - DEBUG :     - pyxll_version
2021-07-27 08:48:50,914 - DEBUG :     - python_version
2021-07-27 08:48:50,914 - DEBUG :     - win32api_is_installed
2021-07-27 08:48:50,914 - DEBUG :     - win32com_is_installed
2021-07-27 08:48:50,914 - DEBUG :     - numpy_is_installed
2021-07-27 08:48:50,914 - DEBUG :     - pyxll_logfile
2021-07-27 08:48:50,914 - DEBUG :     - get_formula
2021-07-27 08:48:50,914 - DEBUG :     - get_array_formula
2021-07-27 08:48:50,914 - DEBUG :     - get_last_error
2021-07-27 08:48:50,914 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:48:50,914 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:48:50,914 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:48:50,914 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:48:50,914 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:48:50,914 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:48:50,914 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:48:50,914 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:48:50,914 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:48:50,914 - DEBUG :     - xl_cell_example
2021-07-27 08:48:50,914 - DEBUG :     - recalc_on_open_test
2021-07-27 08:48:50,914 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:48:50,914 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:48:50,914 - DEBUG :     - one_cell_one_sim
2021-07-27 08:48:50,914 - DEBUG :     - one_row_one_sim
2021-07-27 08:48:50,930 - DEBUG : Adding menus to Excel:
2021-07-27 08:48:50,930 - DEBUG :   - PyXLL
2021-07-27 08:48:50,930 - DEBUG :     - Reload PyXLL
2021-07-27 08:48:50,930 - DEBUG :     - Another example menu item
2021-07-27 08:48:50,930 - DEBUG :     - More Examples
2021-07-27 08:48:50,930 - DEBUG :       - Click me
2021-07-27 08:48:50,930 - DEBUG :       - Unicode Test
2021-07-27 08:48:50,930 - DEBUG :     - Open log file
2021-07-27 08:48:50,930 - DEBUG :     - Attach To VS Code
2021-07-27 08:48:50,930 - DEBUG :     - Custom Task Panes
2021-07-27 08:48:50,930 - DEBUG :       - Qt
2021-07-27 08:48:50,930 - DEBUG :       - Tk
2021-07-27 08:48:50,930 - DEBUG :       - Wx
2021-07-27 08:48:50,930 - DEBUG :     - Example Menu Item 1
2021-07-27 08:48:50,930 - DEBUG :     - Show last error
2021-07-27 08:48:50,930 - DEBUG :     - About PyXLL...
2021-07-27 08:48:50,930 - DEBUG :   - PyXLL example menu
2021-07-27 08:48:50,930 - DEBUG :     - Click me
2021-07-27 08:48:51,011 - DEBUG : Finished binding Python functions
2021-07-27 08:48:51,012 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 08:48:51,012 - DEBUG : pyxll._post_open complete.
2021-07-27 08:48:51,015 - DEBUG : PyXLL initialization complete.
2021-07-27 08:48:56,429 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:48:56,429 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:48:56,447 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:48:56,500 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:49:09,841 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:49:21,549 - ERROR : Traceback (most recent call last):
2021-07-27 08:49:21,549 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-27 08:49:21,550 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-27 08:49:21,550 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 109, in advanced_simulation_cell
2021-07-27 08:49:21,550 - ERROR :     sys.exit(0)
2021-07-27 08:49:21,550 - ERROR : SystemExit: 0
2021-07-27 08:49:53,857 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:49:58,211 - ERROR : Traceback (most recent call last):
2021-07-27 08:49:58,211 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-27 08:49:58,212 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-27 08:49:58,212 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 109, in advanced_simulation_cell
2021-07-27 08:49:58,213 - ERROR :     sys.exit(0)
2021-07-27 08:49:58,213 - ERROR : SystemExit: 0
2021-07-27 08:53:23,682 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:53:25,016 - ERROR : Traceback (most recent call last):
2021-07-27 08:53:25,016 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-27 08:53:25,017 - ERROR :     try:
2021-07-27 08:53:25,017 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 109, in advanced_simulation_cell
2021-07-27 08:53:25,018 - ERROR :     sys.exit(0)
2021-07-27 08:53:25,018 - ERROR : SystemExit: 0
2021-07-27 08:53:26,483 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 08:53:26,483 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 08:53:26,483 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 08:53:26,496 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 08:53:26,496 - DEBUG : -------- PyXLL config --------
2021-07-27 08:53:26,496 - DEBUG : [LOG]
2021-07-27 08:53:26,496 - DEBUG : encoding = utf-8
2021-07-27 08:53:26,496 - DEBUG : file = pyxll.20210727.log
2021-07-27 08:53:26,496 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 08:53:26,496 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 08:53:26,496 - DEBUG : verbosity = debug
2021-07-27 08:53:26,496 - DEBUG : 
2021-07-27 08:53:26,496 - DEBUG : [PYTHON]
2021-07-27 08:53:26,497 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 08:53:26,497 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 08:53:26,497 - DEBUG : 
2021-07-27 08:53:26,497 - DEBUG : [PYXLL]
2021-07-27 08:53:26,497 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 08:53:26,497 - DEBUG : developer_mode = 1
2021-07-27 08:53:26,497 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 08:53:26,497 - DEBUG : modules = 
2021-07-27 08:53:26,497 - DEBUG :     misc
2021-07-27 08:53:26,497 - DEBUG :     worksheetfuncs
2021-07-27 08:53:26,497 - DEBUG :     menus
2021-07-27 08:53:26,497 - DEBUG :     callbacks
2021-07-27 08:53:26,497 - DEBUG :     custom_task_panes
2021-07-27 08:53:26,497 - DEBUG :     test
2021-07-27 08:53:26,497 - DEBUG :     ribbon_functions
2021-07-27 08:53:26,497 - DEBUG :     debugging
2021-07-27 08:53:26,497 - DEBUG :     meta_variables
2021-07-27 08:53:26,497 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 08:53:26,497 - DEBUG : ------------------------------
2021-07-27 08:53:26,497 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 08:53:26,498 - DEBUG : Initializing PyXLL Python module.
2021-07-27 08:53:26,498 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 08:53:26,498 - DEBUG : PyXLL Python module initialized.
2021-07-27 08:53:26,498 - DEBUG : Functions will not be cancellable by default.
2021-07-27 08:53:26,498 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 08:53:26,498 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 08:53:26,582 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 08:53:26,582 - DEBUG : Reloading misc
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 08:53:26,582 - DEBUG : Reloaded misc
2021-07-27 08:53:26,582 - DEBUG : Reloading worksheetfuncs
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 08:53:26,582 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 08:53:26,582 - DEBUG : Reloaded worksheetfuncs
2021-07-27 08:53:26,582 - DEBUG : Reloading menus
2021-07-27 08:53:26,582 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 08:53:26,582 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 08:53:26,582 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 08:53:26,582 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 08:53:26,582 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 08:53:26,582 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 08:53:26,598 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 08:53:26,598 - DEBUG : Reloaded menus
2021-07-27 08:53:26,598 - DEBUG : Reloading callbacks
2021-07-27 08:53:26,598 - DEBUG : Reloaded callbacks
2021-07-27 08:53:26,598 - DEBUG : Reloading custom_task_panes
2021-07-27 08:53:26,598 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 08:53:26,598 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 08:53:26,598 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 08:53:26,598 - DEBUG : Reloaded custom_task_panes
2021-07-27 08:53:26,598 - DEBUG : Reloading test
2021-07-27 08:53:26,598 - DEBUG : Reloaded test
2021-07-27 08:53:26,598 - DEBUG : Reloading meta_variables
2021-07-27 08:53:26,598 - DEBUG : Reloaded meta_variables
2021-07-27 08:53:26,598 - DEBUG : Reloading dependency error_functions
2021-07-27 08:53:26,598 - DEBUG : Reloaded dependency error_functions
2021-07-27 08:53:26,598 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 08:53:26,598 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 08:53:26,598 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 08:53:26,598 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 08:53:26,598 - DEBUG : Reloading dependency examples
2021-07-27 08:53:26,598 - DEBUG : Reloaded dependency examples
2021-07-27 08:53:26,598 - DEBUG : Reloading ribbon_functions
2021-07-27 08:53:26,598 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016D74F0B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016D74F67220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016D74F74220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016D75001B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016D74F9BE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016D74FF4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016D74F93820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016D74FF4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016D74FE9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016D74FD2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016D74FD22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016D74FCC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016D74F5A580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016D74FBEC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016D74F0B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016D74F67220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016D74F74220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016D75001B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016D74F9BE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016D74FF4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016D74F93820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016D74FF4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016D74FE9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016D74FD2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016D74FD22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016D74FCC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016D74F5A580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016D74FBEC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 08:53:26,598 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 08:53:26,598 - DEBUG : Reloaded ribbon_functions
2021-07-27 08:53:26,598 - DEBUG : Reloading debugging
2021-07-27 08:53:26,598 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 08:53:26,598 - DEBUG : Reloaded debugging
2021-07-27 08:53:26,670 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 08:53:26,677 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 08:53:26,699 - INFO : This product is licensed to 
2021-07-27 08:53:26,699 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 08:53:26,709 - DEBUG : Calling pyxll._post_open.
2021-07-27 08:53:26,709 - DEBUG : Binding Python functions to Excel
2021-07-27 08:53:26,709 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 08:53:26,709 - DEBUG :     - pyxll_version
2021-07-27 08:53:26,709 - DEBUG :     - python_version
2021-07-27 08:53:26,709 - DEBUG :     - win32api_is_installed
2021-07-27 08:53:26,709 - DEBUG :     - win32com_is_installed
2021-07-27 08:53:26,709 - DEBUG :     - numpy_is_installed
2021-07-27 08:53:26,709 - DEBUG :     - pyxll_logfile
2021-07-27 08:53:26,709 - DEBUG :     - get_formula
2021-07-27 08:53:26,709 - DEBUG :     - get_array_formula
2021-07-27 08:53:26,709 - DEBUG :     - get_last_error
2021-07-27 08:53:26,709 - DEBUG :     - basic_pyxll_function_1
2021-07-27 08:53:26,709 - DEBUG :     - basic_pyxll_function_2
2021-07-27 08:53:26,709 - DEBUG :     - basic_pyxll_function_3
2021-07-27 08:53:26,709 - DEBUG :     - var_pyxll_function_1
2021-07-27 08:53:26,709 - DEBUG :     - var_pyxll_function_2
2021-07-27 08:53:26,709 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 08:53:26,709 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 08:53:26,709 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 08:53:26,709 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 08:53:26,709 - DEBUG :     - xl_cell_example
2021-07-27 08:53:26,709 - DEBUG :     - recalc_on_open_test
2021-07-27 08:53:26,713 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 08:53:26,713 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 08:53:26,713 - DEBUG :     - one_cell_one_sim
2021-07-27 08:53:26,713 - DEBUG :     - one_row_one_sim
2021-07-27 08:53:26,731 - DEBUG : Adding menus to Excel:
2021-07-27 08:53:26,731 - DEBUG :   - PyXLL
2021-07-27 08:53:26,731 - DEBUG :     - Reload PyXLL
2021-07-27 08:53:26,731 - DEBUG :     - Another example menu item
2021-07-27 08:53:26,731 - DEBUG :     - More Examples
2021-07-27 08:53:26,731 - DEBUG :       - Click me
2021-07-27 08:53:26,731 - DEBUG :       - Unicode Test
2021-07-27 08:53:26,731 - DEBUG :     - Open log file
2021-07-27 08:53:26,731 - DEBUG :     - Attach To VS Code
2021-07-27 08:53:26,731 - DEBUG :     - Custom Task Panes
2021-07-27 08:53:26,731 - DEBUG :       - Qt
2021-07-27 08:53:26,731 - DEBUG :       - Tk
2021-07-27 08:53:26,731 - DEBUG :       - Wx
2021-07-27 08:53:26,731 - DEBUG :     - Example Menu Item 1
2021-07-27 08:53:26,731 - DEBUG :     - Show last error
2021-07-27 08:53:26,731 - DEBUG :     - About PyXLL...
2021-07-27 08:53:26,731 - DEBUG :   - PyXLL example menu
2021-07-27 08:53:26,731 - DEBUG :     - Click me
2021-07-27 08:53:26,740 - DEBUG : Finished binding Python functions
2021-07-27 08:53:26,740 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 08:53:27,423 - DEBUG : pyxll._post_open complete.
2021-07-27 08:53:27,425 - DEBUG : PyXLL initialization complete.
2021-07-27 08:53:27,429 - DEBUG : Loading PyXLL COM Addin
2021-07-27 08:53:27,429 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 08:53:27,434 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 08:53:27,549 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 08:53:29,022 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:53:33,309 - ERROR : Traceback (most recent call last):
2021-07-27 08:53:33,309 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-27 08:53:33,310 - ERROR :     try:
2021-07-27 08:53:33,311 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 109, in advanced_simulation_cell
2021-07-27 08:53:33,311 - ERROR :     sys.exit(0)
2021-07-27 08:53:33,312 - ERROR : SystemExit: 0
2021-07-27 08:54:14,184 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 08:54:16,572 - ERROR : Traceback (most recent call last):
2021-07-27 08:54:16,572 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-27 08:54:16,572 - ERROR :     try:
2021-07-27 08:54:16,572 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 109, in advanced_simulation_cell
2021-07-27 08:54:16,572 - ERROR :     sys.exit(0)
2021-07-27 08:54:16,572 - ERROR : SystemExit: 0
2021-07-27 09:02:33,107 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:02:33,115 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:02:33,115 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:02:33,115 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:02:33,115 - DEBUG : -------- PyXLL config --------
2021-07-27 09:02:33,115 - DEBUG : [LOG]
2021-07-27 09:02:33,116 - DEBUG : encoding = utf-8
2021-07-27 09:02:33,116 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:02:33,116 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:02:33,116 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:02:33,116 - DEBUG : verbosity = debug
2021-07-27 09:02:33,116 - DEBUG : 
2021-07-27 09:02:33,116 - DEBUG : [PYTHON]
2021-07-27 09:02:33,116 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:02:33,116 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:02:33,116 - DEBUG : 
2021-07-27 09:02:33,116 - DEBUG : [PYXLL]
2021-07-27 09:02:33,116 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:02:33,116 - DEBUG : developer_mode = 1
2021-07-27 09:02:33,116 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:02:33,116 - DEBUG : modules = 
2021-07-27 09:02:33,116 - DEBUG :     misc
2021-07-27 09:02:33,116 - DEBUG :     worksheetfuncs
2021-07-27 09:02:33,116 - DEBUG :     menus
2021-07-27 09:02:33,116 - DEBUG :     callbacks
2021-07-27 09:02:33,116 - DEBUG :     custom_task_panes
2021-07-27 09:02:33,116 - DEBUG :     test
2021-07-27 09:02:33,116 - DEBUG :     ribbon_functions
2021-07-27 09:02:33,116 - DEBUG :     debugging
2021-07-27 09:02:33,116 - DEBUG :     meta_variables
2021-07-27 09:02:33,116 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:02:33,116 - DEBUG : ------------------------------
2021-07-27 09:02:33,117 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:02:33,117 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:02:33,117 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:02:33,117 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:02:33,117 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:02:33,117 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:02:33,117 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:02:33,207 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:02:33,207 - DEBUG : Reloading misc
2021-07-27 09:02:33,207 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:02:33,207 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:02:33,207 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:02:33,213 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:02:33,213 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:02:33,213 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:02:33,213 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:02:33,213 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:02:33,213 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:02:33,213 - DEBUG : Reloaded misc
2021-07-27 09:02:33,213 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:02:33,216 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:02:33,216 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:02:33,216 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:02:33,216 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:02:33,217 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:02:33,217 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:02:33,217 - DEBUG : Reloading menus
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:02:33,217 - DEBUG : Reloaded menus
2021-07-27 09:02:33,217 - DEBUG : Reloading callbacks
2021-07-27 09:02:33,217 - DEBUG : Reloaded callbacks
2021-07-27 09:02:33,217 - DEBUG : Reloading custom_task_panes
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:02:33,217 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:02:33,217 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:02:33,217 - DEBUG : Reloading test
2021-07-27 09:02:33,223 - DEBUG : Reloaded test
2021-07-27 09:02:33,223 - DEBUG : Reloading meta_variables
2021-07-27 09:02:33,238 - DEBUG : Reloaded meta_variables
2021-07-27 09:02:33,238 - DEBUG : Reloading dependency error_functions
2021-07-27 09:02:33,239 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:02:33,239 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:02:33,240 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:02:33,240 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:02:33,240 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:02:33,240 - DEBUG : Reloading dependency examples
2021-07-27 09:02:33,244 - DEBUG : Reloaded dependency examples
2021-07-27 09:02:33,244 - DEBUG : Reloading ribbon_functions
2021-07-27 09:02:33,246 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016D74F0B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016D74F67220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016D74F74220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016D75001B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016D74F9BE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016D74FF4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016D74F93820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016D74FF4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016D74FE9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016D74FD2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016D74FD22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016D74FCC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016D74F5A580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016D74FBEC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016D74F0B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016D74F67220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016D74F74220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016D75001B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016D74F9BE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016D74FF4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016D74F93820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016D74FF4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016D74FE9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016D74FD2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016D74FD22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016D74FCC580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016D74F5A580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016D74FBEC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:02:33,246 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:02:33,246 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:02:33,246 - DEBUG : Reloading debugging
2021-07-27 09:02:33,247 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:02:33,247 - DEBUG : Reloaded debugging
2021-07-27 09:02:33,317 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:02:33,327 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:02:33,347 - INFO : This product is licensed to 
2021-07-27 09:02:33,347 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:02:33,357 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:02:33,357 - DEBUG : Binding Python functions to Excel
2021-07-27 09:02:33,357 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:02:33,357 - DEBUG :     - pyxll_version
2021-07-27 09:02:33,357 - DEBUG :     - python_version
2021-07-27 09:02:33,357 - DEBUG :     - win32api_is_installed
2021-07-27 09:02:33,357 - DEBUG :     - win32com_is_installed
2021-07-27 09:02:33,357 - DEBUG :     - numpy_is_installed
2021-07-27 09:02:33,357 - DEBUG :     - pyxll_logfile
2021-07-27 09:02:33,357 - DEBUG :     - get_formula
2021-07-27 09:02:33,357 - DEBUG :     - get_array_formula
2021-07-27 09:02:33,357 - DEBUG :     - get_last_error
2021-07-27 09:02:33,357 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:02:33,357 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:02:33,357 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:02:33,357 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:02:33,357 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:02:33,357 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:02:33,357 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:02:33,357 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:02:33,357 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:02:33,357 - DEBUG :     - xl_cell_example
2021-07-27 09:02:33,357 - DEBUG :     - recalc_on_open_test
2021-07-27 09:02:33,357 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:02:33,357 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:02:33,357 - DEBUG :     - one_cell_one_sim
2021-07-27 09:02:33,357 - DEBUG :     - one_row_one_sim
2021-07-27 09:02:33,380 - DEBUG : Adding menus to Excel:
2021-07-27 09:02:33,380 - DEBUG :   - PyXLL
2021-07-27 09:02:33,380 - DEBUG :     - Reload PyXLL
2021-07-27 09:02:33,380 - DEBUG :     - Another example menu item
2021-07-27 09:02:33,380 - DEBUG :     - More Examples
2021-07-27 09:02:33,380 - DEBUG :       - Click me
2021-07-27 09:02:33,380 - DEBUG :       - Unicode Test
2021-07-27 09:02:33,380 - DEBUG :     - Open log file
2021-07-27 09:02:33,380 - DEBUG :     - Attach To VS Code
2021-07-27 09:02:33,380 - DEBUG :     - Custom Task Panes
2021-07-27 09:02:33,380 - DEBUG :       - Qt
2021-07-27 09:02:33,380 - DEBUG :       - Tk
2021-07-27 09:02:33,380 - DEBUG :       - Wx
2021-07-27 09:02:33,380 - DEBUG :     - Example Menu Item 1
2021-07-27 09:02:33,380 - DEBUG :     - Show last error
2021-07-27 09:02:33,380 - DEBUG :     - About PyXLL...
2021-07-27 09:02:33,380 - DEBUG :   - PyXLL example menu
2021-07-27 09:02:33,380 - DEBUG :     - Click me
2021-07-27 09:02:33,390 - DEBUG : Finished binding Python functions
2021-07-27 09:02:33,390 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:02:34,100 - DEBUG : pyxll._post_open complete.
2021-07-27 09:02:34,101 - DEBUG : PyXLL initialization complete.
2021-07-27 09:02:34,105 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:02:34,105 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:02:34,110 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:02:34,222 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:02:35,852 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 09:02:37,645 - ERROR : Traceback (most recent call last):
2021-07-27 09:02:37,646 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-27 09:02:37,646 - ERROR :     ax.grid()
2021-07-27 09:02:37,646 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 109, in advanced_simulation_cell
2021-07-27 09:02:37,647 - ERROR :     explainError(control=control, error_id="FormulaError",
2021-07-27 09:02:37,647 - ERROR : SystemExit: 0
2021-07-27 09:02:38,428 - DEBUG : Closing PyXLL Python module.
2021-07-27 09:02:38,428 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 09:02:38,429 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 09:02:38,429 - DEBUG : PyXLL Python module closed.
2021-07-27 09:02:41,588 - DEBUG : 
Tue Jul 27 09:02:41 2021
---------- PyXLL Stopped ----------
2021-07-27 09:02:45,581 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:02:45,581 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:02:45,581 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:02:45,581 - DEBUG : -------- PyXLL config --------
2021-07-27 09:02:45,581 - DEBUG : [LOG]
2021-07-27 09:02:45,581 - DEBUG : encoding = utf-8
2021-07-27 09:02:45,581 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:02:45,581 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:02:45,581 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:02:45,581 - DEBUG : verbosity = debug
2021-07-27 09:02:45,581 - DEBUG : 
2021-07-27 09:02:45,581 - DEBUG : [PYTHON]
2021-07-27 09:02:45,581 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:02:45,581 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:02:45,582 - DEBUG : 
2021-07-27 09:02:45,582 - DEBUG : [PYXLL]
2021-07-27 09:02:45,582 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:02:45,582 - DEBUG : developer_mode = 1
2021-07-27 09:02:45,582 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:02:45,582 - DEBUG : modules = 
2021-07-27 09:02:45,582 - DEBUG :     misc
2021-07-27 09:02:45,582 - DEBUG :     worksheetfuncs
2021-07-27 09:02:45,582 - DEBUG :     menus
2021-07-27 09:02:45,582 - DEBUG :     callbacks
2021-07-27 09:02:45,582 - DEBUG :     custom_task_panes
2021-07-27 09:02:45,582 - DEBUG :     test
2021-07-27 09:02:45,582 - DEBUG :     ribbon_functions
2021-07-27 09:02:45,582 - DEBUG :     debugging
2021-07-27 09:02:45,582 - DEBUG :     meta_variables
2021-07-27 09:02:45,582 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:02:45,582 - DEBUG : ------------------------------
2021-07-27 09:02:45,585 - DEBUG : Attempting to load python38.dll
2021-07-27 09:02:45,592 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 09:02:45,595 - DEBUG : Checking Py_IsInitialized...
2021-07-27 09:02:45,595 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 09:04:23,355 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:04:23,355 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:04:23,356 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:04:23,356 - DEBUG : -------- PyXLL config --------
2021-07-27 09:04:23,356 - DEBUG : [LOG]
2021-07-27 09:04:23,356 - DEBUG : encoding = utf-8
2021-07-27 09:04:23,356 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:04:23,356 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:04:23,356 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:04:23,356 - DEBUG : verbosity = debug
2021-07-27 09:04:23,356 - DEBUG : 
2021-07-27 09:04:23,356 - DEBUG : [PYTHON]
2021-07-27 09:04:23,356 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:04:23,356 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:04:23,356 - DEBUG : 
2021-07-27 09:04:23,356 - DEBUG : [PYXLL]
2021-07-27 09:04:23,356 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:04:23,356 - DEBUG : developer_mode = 1
2021-07-27 09:04:23,356 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:04:23,356 - DEBUG : modules = 
2021-07-27 09:04:23,356 - DEBUG :     misc
2021-07-27 09:04:23,356 - DEBUG :     worksheetfuncs
2021-07-27 09:04:23,356 - DEBUG :     menus
2021-07-27 09:04:23,356 - DEBUG :     callbacks
2021-07-27 09:04:23,356 - DEBUG :     custom_task_panes
2021-07-27 09:04:23,356 - DEBUG :     test
2021-07-27 09:04:23,356 - DEBUG :     ribbon_functions
2021-07-27 09:04:23,356 - DEBUG :     debugging
2021-07-27 09:04:23,356 - DEBUG :     meta_variables
2021-07-27 09:04:23,356 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:04:23,356 - DEBUG : ------------------------------
2021-07-27 09:04:23,357 - DEBUG : Attempting to load python38.dll
2021-07-27 09:04:23,359 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 09:04:23,360 - DEBUG : Checking Py_IsInitialized...
2021-07-27 09:04:23,360 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 09:04:23,510 - DEBUG : Calling Py_Initialize...
2021-07-27 09:04:23,633 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 09:04:23,633 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 09:04:23,633 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:04:23,634 - DEBUG : Python is initialized.
2021-07-27 09:04:23,634 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 09:04:23,636 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 09:04:23,636 - DEBUG : Looking for module 'site'...
2021-07-27 09:04:23,658 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 09:04:23,658 - DEBUG : Importing pyxll module
2021-07-27 09:04:23,658 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 09:04:23,658 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 09:04:23,658 - DEBUG :   Detected Python3
2021-07-27 09:04:23,693 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 09:04:23,696 - DEBUG : pyxll module imported
2021-07-27 09:04:23,696 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:04:23,696 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:04:23,696 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:04:23,698 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:04:23,698 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:04:23,859 - DEBUG : Importing misc
2021-07-27 09:04:23,869 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:04:23,869 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:04:23,869 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:04:23,869 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:04:23,869 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:04:23,869 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:04:23,870 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:04:23,870 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:04:23,870 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:04:23,870 - DEBUG : Imported misc
2021-07-27 09:04:23,871 - DEBUG : Importing worksheetfuncs
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:04:23,871 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:04:23,871 - DEBUG : Imported worksheetfuncs
2021-07-27 09:04:23,871 - DEBUG : Importing menus
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:04:23,871 - DEBUG : Imported menus
2021-07-27 09:04:23,871 - DEBUG : Importing callbacks
2021-07-27 09:04:23,871 - DEBUG : Imported callbacks
2021-07-27 09:04:23,871 - DEBUG : Importing custom_task_panes
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:04:23,871 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:04:23,871 - DEBUG : Imported custom_task_panes
2021-07-27 09:04:23,871 - DEBUG : Importing test
2021-07-27 09:04:23,871 - DEBUG : Imported test
2021-07-27 09:04:23,871 - DEBUG : Importing ribbon_functions
2021-07-27 09:04:24,822 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 09:04:24,850 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:04:24,850 - DEBUG : matplotlib version 3.4.2
2021-07-27 09:04:24,850 - DEBUG : interactive is False
2021-07-27 09:04:24,850 - DEBUG : platform is win32
2021-07-27 09:04:24,850 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_f40000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_f40000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 09:04:24,904 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:04:24,904 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 09:04:25,070 - DEBUG : Loaded backend agg version unknown.
2021-07-27 09:04:25,072 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016575BFB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016575C54220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016575C63220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016575CF1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016575C9AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016575CE4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016575C82820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016575CE4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016575CD9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016575CC5CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016575CC52B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016575CB1580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016575C41580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016575CADC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016575BFB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016575C54220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016575C63220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016575CF1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016575C9AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016575CE4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016575C82820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016575CE4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016575CD9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016575CC5CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016575CC52B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016575CB1580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016575C41580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016575CADC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:04:25,072 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:04:25,072 - DEBUG : Imported ribbon_functions
2021-07-27 09:04:25,072 - DEBUG : Importing debugging
2021-07-27 09:04:25,508 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:04:25,508 - DEBUG : Imported debugging
2021-07-27 09:04:25,508 - DEBUG : Importing meta_variables
2021-07-27 09:04:25,508 - DEBUG : Imported meta_variables
2021-07-27 09:04:25,543 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:04:25,544 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:04:25,563 - INFO : This product is licensed to 
2021-07-27 09:04:25,563 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:04:25,565 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:04:25,565 - DEBUG : Binding Python functions to Excel
2021-07-27 09:04:25,565 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:04:25,565 - DEBUG :     - pyxll_version
2021-07-27 09:04:25,565 - DEBUG :     - python_version
2021-07-27 09:04:25,565 - DEBUG :     - win32api_is_installed
2021-07-27 09:04:25,565 - DEBUG :     - win32com_is_installed
2021-07-27 09:04:25,565 - DEBUG :     - numpy_is_installed
2021-07-27 09:04:25,566 - DEBUG :     - pyxll_logfile
2021-07-27 09:04:25,566 - DEBUG :     - get_formula
2021-07-27 09:04:25,566 - DEBUG :     - get_array_formula
2021-07-27 09:04:25,566 - DEBUG :     - get_last_error
2021-07-27 09:04:25,566 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:04:25,566 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:04:25,566 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:04:25,566 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:04:25,566 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:04:25,566 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:04:25,566 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:04:25,566 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:04:25,566 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:04:25,566 - DEBUG :     - xl_cell_example
2021-07-27 09:04:25,566 - DEBUG :     - recalc_on_open_test
2021-07-27 09:04:25,566 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:04:25,566 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:04:25,566 - DEBUG :     - one_cell_one_sim
2021-07-27 09:04:25,566 - DEBUG :     - one_row_one_sim
2021-07-27 09:04:25,578 - DEBUG : Adding menus to Excel:
2021-07-27 09:04:25,578 - DEBUG :   - PyXLL
2021-07-27 09:04:25,578 - DEBUG :     - Reload PyXLL
2021-07-27 09:04:25,578 - DEBUG :     - Another example menu item
2021-07-27 09:04:25,578 - DEBUG :     - More Examples
2021-07-27 09:04:25,578 - DEBUG :       - Click me
2021-07-27 09:04:25,578 - DEBUG :       - Unicode Test
2021-07-27 09:04:25,578 - DEBUG :     - Open log file
2021-07-27 09:04:25,578 - DEBUG :     - Attach To VS Code
2021-07-27 09:04:25,578 - DEBUG :     - Custom Task Panes
2021-07-27 09:04:25,578 - DEBUG :       - Qt
2021-07-27 09:04:25,578 - DEBUG :       - Tk
2021-07-27 09:04:25,578 - DEBUG :       - Wx
2021-07-27 09:04:25,578 - DEBUG :     - Example Menu Item 1
2021-07-27 09:04:25,578 - DEBUG :     - Show last error
2021-07-27 09:04:25,578 - DEBUG :     - About PyXLL...
2021-07-27 09:04:25,578 - DEBUG :   - PyXLL example menu
2021-07-27 09:04:25,578 - DEBUG :     - Click me
2021-07-27 09:04:25,607 - DEBUG : Finished binding Python functions
2021-07-27 09:04:25,607 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 09:04:25,607 - DEBUG : pyxll._post_open complete.
2021-07-27 09:04:25,610 - DEBUG : PyXLL initialization complete.
2021-07-27 09:04:29,023 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:04:29,023 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:04:29,036 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:04:29,069 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:04:43,098 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 09:04:44,992 - ERROR : Traceback (most recent call last):
2021-07-27 09:04:44,993 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 166, in advanced_simulation_cell_wrapper
2021-07-27 09:04:44,994 - ERROR :     ax.hist(hist_data, bins=histogram_bins)
2021-07-27 09:04:44,994 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 09:04:44,995 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 09:04:44,995 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 09:04:44,995 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 09:04:44,995 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 09:04:44,995 - ERROR :     if len(X) == 0:
2021-07-27 09:04:44,995 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 09:05:16,858 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:05:16,861 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:05:16,861 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:05:16,861 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:05:16,861 - DEBUG : -------- PyXLL config --------
2021-07-27 09:05:16,861 - DEBUG : [LOG]
2021-07-27 09:05:16,861 - DEBUG : encoding = utf-8
2021-07-27 09:05:16,861 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:05:16,861 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:05:16,861 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:05:16,861 - DEBUG : verbosity = debug
2021-07-27 09:05:16,861 - DEBUG : 
2021-07-27 09:05:16,861 - DEBUG : [PYTHON]
2021-07-27 09:05:16,861 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:05:16,861 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:05:16,861 - DEBUG : 
2021-07-27 09:05:16,861 - DEBUG : [PYXLL]
2021-07-27 09:05:16,861 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:05:16,861 - DEBUG : developer_mode = 1
2021-07-27 09:05:16,861 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:05:16,861 - DEBUG : modules = 
2021-07-27 09:05:16,861 - DEBUG :     misc
2021-07-27 09:05:16,861 - DEBUG :     worksheetfuncs
2021-07-27 09:05:16,861 - DEBUG :     menus
2021-07-27 09:05:16,861 - DEBUG :     callbacks
2021-07-27 09:05:16,861 - DEBUG :     custom_task_panes
2021-07-27 09:05:16,861 - DEBUG :     test
2021-07-27 09:05:16,861 - DEBUG :     ribbon_functions
2021-07-27 09:05:16,861 - DEBUG :     debugging
2021-07-27 09:05:16,861 - DEBUG :     meta_variables
2021-07-27 09:05:16,861 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:05:16,861 - DEBUG : ------------------------------
2021-07-27 09:05:16,862 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:05:16,862 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:05:16,862 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:05:16,863 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:05:16,864 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:05:16,865 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:05:16,865 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:05:16,907 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:05:16,907 - DEBUG : Reloading misc
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:05:16,907 - DEBUG : Reloaded misc
2021-07-27 09:05:16,907 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:05:16,907 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:05:16,907 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:05:16,907 - DEBUG : Reloading menus
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:05:16,907 - DEBUG : Reloaded menus
2021-07-27 09:05:16,907 - DEBUG : Reloading callbacks
2021-07-27 09:05:16,907 - DEBUG : Reloaded callbacks
2021-07-27 09:05:16,907 - DEBUG : Reloading custom_task_panes
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:05:16,907 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:05:16,907 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:05:16,907 - DEBUG : Reloading test
2021-07-27 09:05:16,923 - DEBUG : Reloaded test
2021-07-27 09:05:16,923 - DEBUG : Reloading meta_variables
2021-07-27 09:05:16,923 - DEBUG : Reloaded meta_variables
2021-07-27 09:05:16,923 - DEBUG : Reloading dependency error_functions
2021-07-27 09:05:16,923 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:05:16,923 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:05:16,923 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:05:16,923 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:05:16,923 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:05:16,923 - DEBUG : Reloading dependency examples
2021-07-27 09:05:16,923 - DEBUG : Reloaded dependency examples
2021-07-27 09:05:16,923 - DEBUG : Reloading ribbon_functions
2021-07-27 09:05:16,923 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016575BFB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016575C54220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016575C63220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016575CF1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016575C9AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016575CE4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016575C82820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016575CE4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016575CD9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016575CC5CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016575CC52B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016575CB1580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016575C41580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016575CADC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016575BFB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000016575C54220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016575C63220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000016575CF1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000016575C9AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000016575CE4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000016575C82820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000016575CE4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000016575CD9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016575CC5CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000016575CC52B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000016575CB1580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000016575C41580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000016575CADC40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:05:16,923 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:05:16,923 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:05:16,923 - DEBUG : Reloading debugging
2021-07-27 09:05:16,923 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:05:16,923 - DEBUG : Reloaded debugging
2021-07-27 09:05:16,949 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:05:16,949 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:05:16,977 - INFO : This product is licensed to 
2021-07-27 09:05:16,977 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:05:16,978 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:05:16,978 - DEBUG : Binding Python functions to Excel
2021-07-27 09:05:16,978 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:05:16,978 - DEBUG :     - pyxll_version
2021-07-27 09:05:16,978 - DEBUG :     - python_version
2021-07-27 09:05:16,978 - DEBUG :     - win32api_is_installed
2021-07-27 09:05:16,978 - DEBUG :     - win32com_is_installed
2021-07-27 09:05:16,978 - DEBUG :     - numpy_is_installed
2021-07-27 09:05:16,978 - DEBUG :     - pyxll_logfile
2021-07-27 09:05:16,978 - DEBUG :     - get_formula
2021-07-27 09:05:16,978 - DEBUG :     - get_array_formula
2021-07-27 09:05:16,978 - DEBUG :     - get_last_error
2021-07-27 09:05:16,978 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:05:16,978 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:05:16,978 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:05:16,978 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:05:16,978 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:05:16,978 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:05:16,978 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:05:16,978 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:05:16,978 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:05:16,978 - DEBUG :     - xl_cell_example
2021-07-27 09:05:16,978 - DEBUG :     - recalc_on_open_test
2021-07-27 09:05:16,978 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:05:16,978 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:05:16,978 - DEBUG :     - one_cell_one_sim
2021-07-27 09:05:16,978 - DEBUG :     - one_row_one_sim
2021-07-27 09:05:16,982 - DEBUG : Adding menus to Excel:
2021-07-27 09:05:16,982 - DEBUG :   - PyXLL
2021-07-27 09:05:16,982 - DEBUG :     - Reload PyXLL
2021-07-27 09:05:16,982 - DEBUG :     - Another example menu item
2021-07-27 09:05:16,982 - DEBUG :     - More Examples
2021-07-27 09:05:16,982 - DEBUG :       - Click me
2021-07-27 09:05:16,982 - DEBUG :       - Unicode Test
2021-07-27 09:05:16,982 - DEBUG :     - Open log file
2021-07-27 09:05:16,982 - DEBUG :     - Attach To VS Code
2021-07-27 09:05:16,982 - DEBUG :     - Custom Task Panes
2021-07-27 09:05:16,982 - DEBUG :       - Qt
2021-07-27 09:05:16,982 - DEBUG :       - Tk
2021-07-27 09:05:16,982 - DEBUG :       - Wx
2021-07-27 09:05:16,982 - DEBUG :     - Example Menu Item 1
2021-07-27 09:05:16,982 - DEBUG :     - Show last error
2021-07-27 09:05:16,982 - DEBUG :     - About PyXLL...
2021-07-27 09:05:16,982 - DEBUG :   - PyXLL example menu
2021-07-27 09:05:16,982 - DEBUG :     - Click me
2021-07-27 09:05:16,986 - DEBUG : Finished binding Python functions
2021-07-27 09:05:16,986 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:05:18,043 - DEBUG : pyxll._post_open complete.
2021-07-27 09:05:18,043 - DEBUG : PyXLL initialization complete.
2021-07-27 09:05:18,046 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:05:18,046 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:05:18,047 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:05:18,107 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:05:19,670 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 09:05:21,867 - ERROR : Traceback (most recent call last):
2021-07-27 09:05:21,867 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 166, in advanced_simulation_cell_wrapper
2021-07-27 09:05:21,868 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\__init__.py", line 1361, in inner
2021-07-27 09:05:21,869 - ERROR :     return func(ax, *map(sanitize_sequence, args), **kwargs)
2021-07-27 09:05:21,869 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\axes\_axes.py", line 6672, in hist
2021-07-27 09:05:21,872 - ERROR :     x = cbook._reshape_2D(x, 'x')
2021-07-27 09:05:21,872 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\cbook\__init__.py", line 1419, in _reshape_2D
2021-07-27 09:05:21,873 - ERROR :     if len(X) == 0:
2021-07-27 09:05:21,873 - ERROR : TypeError: object of type 'NoneType' has no len()
2021-07-27 09:05:22,437 - DEBUG : Closing PyXLL Python module.
2021-07-27 09:05:22,438 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 09:05:22,438 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 09:05:22,438 - DEBUG : PyXLL Python module closed.
2021-07-27 09:05:25,482 - DEBUG : 
Tue Jul 27 09:05:25 2021
---------- PyXLL Stopped ----------
2021-07-27 09:05:27,914 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:05:27,914 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:05:27,915 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:05:27,916 - DEBUG : -------- PyXLL config --------
2021-07-27 09:05:27,916 - DEBUG : [LOG]
2021-07-27 09:05:27,916 - DEBUG : encoding = utf-8
2021-07-27 09:05:27,916 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:05:27,916 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:05:27,916 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:05:27,916 - DEBUG : verbosity = debug
2021-07-27 09:05:27,916 - DEBUG : 
2021-07-27 09:05:27,916 - DEBUG : [PYTHON]
2021-07-27 09:05:27,916 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:05:27,916 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:05:27,916 - DEBUG : 
2021-07-27 09:05:27,916 - DEBUG : [PYXLL]
2021-07-27 09:05:27,916 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:05:27,916 - DEBUG : developer_mode = 1
2021-07-27 09:05:27,916 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:05:27,916 - DEBUG : modules = 
2021-07-27 09:05:27,916 - DEBUG :     misc
2021-07-27 09:05:27,916 - DEBUG :     worksheetfuncs
2021-07-27 09:05:27,916 - DEBUG :     menus
2021-07-27 09:05:27,916 - DEBUG :     callbacks
2021-07-27 09:05:27,916 - DEBUG :     custom_task_panes
2021-07-27 09:05:27,916 - DEBUG :     test
2021-07-27 09:05:27,916 - DEBUG :     ribbon_functions
2021-07-27 09:05:27,916 - DEBUG :     debugging
2021-07-27 09:05:27,916 - DEBUG :     meta_variables
2021-07-27 09:05:27,916 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:05:27,916 - DEBUG : ------------------------------
2021-07-27 09:05:27,917 - DEBUG : Attempting to load python38.dll
2021-07-27 09:05:27,919 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 09:05:27,920 - DEBUG : Checking Py_IsInitialized...
2021-07-27 09:05:27,920 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 09:05:28,065 - DEBUG : Calling Py_Initialize...
2021-07-27 09:05:28,191 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 09:05:28,191 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 09:05:28,191 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:05:28,191 - DEBUG : Python is initialized.
2021-07-27 09:05:28,192 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 09:05:28,194 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 09:05:28,194 - DEBUG : Looking for module 'site'...
2021-07-27 09:05:28,216 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 09:05:28,216 - DEBUG : Importing pyxll module
2021-07-27 09:05:28,219 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 09:05:28,219 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 09:05:28,219 - DEBUG :   Detected Python3
2021-07-27 09:05:28,246 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 09:05:28,246 - DEBUG : pyxll module imported
2021-07-27 09:05:28,246 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:05:28,246 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:05:28,246 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:05:28,253 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:05:28,253 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:05:28,411 - DEBUG : Importing misc
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:05:28,412 - DEBUG : Imported misc
2021-07-27 09:05:28,412 - DEBUG : Importing worksheetfuncs
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:05:28,412 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:05:28,412 - DEBUG : Imported worksheetfuncs
2021-07-27 09:05:28,412 - DEBUG : Importing menus
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:05:28,421 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:05:28,421 - DEBUG : Imported menus
2021-07-27 09:05:28,421 - DEBUG : Importing callbacks
2021-07-27 09:05:28,422 - DEBUG : Imported callbacks
2021-07-27 09:05:28,422 - DEBUG : Importing custom_task_panes
2021-07-27 09:05:28,422 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:05:28,422 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:05:28,422 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:05:28,422 - DEBUG : Imported custom_task_panes
2021-07-27 09:05:28,422 - DEBUG : Importing test
2021-07-27 09:05:28,422 - DEBUG : Imported test
2021-07-27 09:05:28,422 - DEBUG : Importing ribbon_functions
2021-07-27 09:05:29,417 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 09:05:29,441 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:05:29,449 - DEBUG : matplotlib version 3.4.2
2021-07-27 09:05:29,449 - DEBUG : interactive is False
2021-07-27 09:05:29,449 - DEBUG : platform is win32
2021-07-27 09:05:29,449 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_130000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_130000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 09:05:29,489 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:05:29,497 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 09:05:29,646 - DEBUG : Loaded backend agg version unknown.
2021-07-27 09:05:29,647 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000255E4CEB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000255E4D47220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000255E4D54220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000255E4DE1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000255E4D8AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000255E4DD4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000255E4D72820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000255E4DD4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000255E4DC9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000255E4DBDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000255E4DBD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000255E4DA5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000255E4D34580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000255E4DA0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000255E4CEB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000255E4D47220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000255E4D54220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000255E4DE1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000255E4D8AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000255E4DD4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000255E4D72820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000255E4DD4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000255E4DC9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000255E4DBDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000255E4DBD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000255E4DA5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000255E4D34580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000255E4DA0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:05:29,647 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:05:29,647 - DEBUG : Imported ribbon_functions
2021-07-27 09:05:29,647 - DEBUG : Importing debugging
2021-07-27 09:05:30,032 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:05:30,032 - DEBUG : Imported debugging
2021-07-27 09:05:30,032 - DEBUG : Importing meta_variables
2021-07-27 09:05:30,032 - DEBUG : Imported meta_variables
2021-07-27 09:05:30,065 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:05:30,067 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:05:30,082 - INFO : This product is licensed to 
2021-07-27 09:05:30,082 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:05:30,086 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:05:30,086 - DEBUG : Binding Python functions to Excel
2021-07-27 09:05:30,086 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:05:30,086 - DEBUG :     - pyxll_version
2021-07-27 09:05:30,086 - DEBUG :     - python_version
2021-07-27 09:05:30,086 - DEBUG :     - win32api_is_installed
2021-07-27 09:05:30,086 - DEBUG :     - win32com_is_installed
2021-07-27 09:05:30,086 - DEBUG :     - numpy_is_installed
2021-07-27 09:05:30,086 - DEBUG :     - pyxll_logfile
2021-07-27 09:05:30,086 - DEBUG :     - get_formula
2021-07-27 09:05:30,086 - DEBUG :     - get_array_formula
2021-07-27 09:05:30,086 - DEBUG :     - get_last_error
2021-07-27 09:05:30,086 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:05:30,086 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:05:30,087 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:05:30,087 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:05:30,087 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:05:30,087 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:05:30,087 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:05:30,087 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:05:30,087 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:05:30,087 - DEBUG :     - xl_cell_example
2021-07-27 09:05:30,087 - DEBUG :     - recalc_on_open_test
2021-07-27 09:05:30,087 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:05:30,087 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:05:30,087 - DEBUG :     - one_cell_one_sim
2021-07-27 09:05:30,087 - DEBUG :     - one_row_one_sim
2021-07-27 09:05:30,097 - DEBUG : Adding menus to Excel:
2021-07-27 09:05:30,098 - DEBUG :   - PyXLL
2021-07-27 09:05:30,098 - DEBUG :     - Reload PyXLL
2021-07-27 09:05:30,098 - DEBUG :     - Another example menu item
2021-07-27 09:05:30,098 - DEBUG :     - More Examples
2021-07-27 09:05:30,098 - DEBUG :       - Click me
2021-07-27 09:05:30,098 - DEBUG :       - Unicode Test
2021-07-27 09:05:30,098 - DEBUG :     - Open log file
2021-07-27 09:05:30,098 - DEBUG :     - Attach To VS Code
2021-07-27 09:05:30,098 - DEBUG :     - Custom Task Panes
2021-07-27 09:05:30,098 - DEBUG :       - Qt
2021-07-27 09:05:30,098 - DEBUG :       - Tk
2021-07-27 09:05:30,098 - DEBUG :       - Wx
2021-07-27 09:05:30,098 - DEBUG :     - Example Menu Item 1
2021-07-27 09:05:30,098 - DEBUG :     - Show last error
2021-07-27 09:05:30,098 - DEBUG :     - About PyXLL...
2021-07-27 09:05:30,098 - DEBUG :   - PyXLL example menu
2021-07-27 09:05:30,098 - DEBUG :     - Click me
2021-07-27 09:05:30,134 - DEBUG : Finished binding Python functions
2021-07-27 09:05:30,134 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 09:05:30,134 - DEBUG : pyxll._post_open complete.
2021-07-27 09:05:30,136 - DEBUG : PyXLL initialization complete.
2021-07-27 09:05:36,844 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:05:36,844 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:05:36,849 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:05:36,861 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:05:54,790 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 09:06:06,334 - ERROR : Traceback (most recent call last):
2021-07-27 09:06:06,334 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 157, in advanced_simulation_cell_wrapper
2021-07-27 09:06:06,335 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-27 09:06:06,335 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 121, in advanced_simulation_cell
2021-07-27 09:06:06,335 - ERROR :     variable_dict[sheet_cell_address] = advanced_simulation_cell(control=control,
2021-07-27 09:06:06,335 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 151, in advanced_simulation_cell
2021-07-27 09:06:06,336 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-27 09:06:06,336 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-27 09:06:06,336 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-27 09:06:06,336 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-27 09:06:06,337 - ERROR :     raise Exception(self.errormsg)
2021-07-27 09:06:06,337 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-27 09:06:32,502 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-27 09:06:32,502 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 09:06:32,510 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:06:32,518 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,518 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,518 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,518 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,519 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,520 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,526 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,528 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,536 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,544 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:06:32,544 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,545 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,552 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,553 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,554 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,555 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,556 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:06:32,563 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:06:32,563 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-27 09:11:46,953 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:11:46,956 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:11:46,956 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:11:46,956 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:11:46,956 - DEBUG : -------- PyXLL config --------
2021-07-27 09:11:46,956 - DEBUG : [LOG]
2021-07-27 09:11:46,956 - DEBUG : encoding = utf-8
2021-07-27 09:11:46,956 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:11:46,956 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:11:46,956 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:11:46,956 - DEBUG : verbosity = debug
2021-07-27 09:11:46,956 - DEBUG : 
2021-07-27 09:11:46,956 - DEBUG : [PYTHON]
2021-07-27 09:11:46,956 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:11:46,956 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:11:46,956 - DEBUG : 
2021-07-27 09:11:46,956 - DEBUG : [PYXLL]
2021-07-27 09:11:46,956 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:11:46,956 - DEBUG : developer_mode = 1
2021-07-27 09:11:46,956 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:11:46,956 - DEBUG : modules = 
2021-07-27 09:11:46,956 - DEBUG :     misc
2021-07-27 09:11:46,956 - DEBUG :     worksheetfuncs
2021-07-27 09:11:46,956 - DEBUG :     menus
2021-07-27 09:11:46,956 - DEBUG :     callbacks
2021-07-27 09:11:46,956 - DEBUG :     custom_task_panes
2021-07-27 09:11:46,956 - DEBUG :     test
2021-07-27 09:11:46,956 - DEBUG :     ribbon_functions
2021-07-27 09:11:46,956 - DEBUG :     debugging
2021-07-27 09:11:46,956 - DEBUG :     meta_variables
2021-07-27 09:11:46,956 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:11:46,956 - DEBUG : ------------------------------
2021-07-27 09:11:46,957 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:11:46,957 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:11:46,957 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:11:46,957 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:11:46,957 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:11:46,957 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:11:46,957 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:11:47,006 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:11:47,006 - DEBUG : Reloading misc
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:11:47,006 - DEBUG : Reloaded misc
2021-07-27 09:11:47,006 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:11:47,006 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:11:47,006 - DEBUG : Reloading menus
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:11:47,006 - DEBUG : Reloaded menus
2021-07-27 09:11:47,006 - DEBUG : Reloading callbacks
2021-07-27 09:11:47,006 - DEBUG : Reloaded callbacks
2021-07-27 09:11:47,006 - DEBUG : Reloading custom_task_panes
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:11:47,006 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:11:47,006 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:11:47,006 - DEBUG : Reloading test
2021-07-27 09:11:47,006 - DEBUG : Reloaded test
2021-07-27 09:11:47,006 - DEBUG : Reloading meta_variables
2021-07-27 09:11:47,006 - DEBUG : Reloaded meta_variables
2021-07-27 09:11:47,006 - DEBUG : Reloading dependency error_functions
2021-07-27 09:11:47,006 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:11:47,006 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:11:47,006 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:11:47,006 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:11:47,006 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:11:47,006 - DEBUG : Reloading dependency examples
2021-07-27 09:11:47,006 - DEBUG : Reloaded dependency examples
2021-07-27 09:11:47,006 - DEBUG : Reloading ribbon_functions
2021-07-27 09:11:47,006 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000255E4CEB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000255E4D47220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000255E4D54220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000255E4DE1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000255E4D8AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000255E4DD4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000255E4D72820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000255E4DD4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000255E4DC9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000255E4DBDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000255E4DBD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000255E4DA5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000255E4D34580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000255E4DA0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000255E4CEB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000255E4D47220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000255E4D54220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000255E4DE1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000255E4D8AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000255E4DD4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000255E4D72820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000255E4DD4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000255E4DC9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000255E4DBDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000255E4DBD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000255E4DA5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000255E4D34580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000255E4DA0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:11:47,021 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:11:47,021 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:11:47,021 - DEBUG : Reloading debugging
2021-07-27 09:11:47,021 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:11:47,021 - DEBUG : Reloaded debugging
2021-07-27 09:11:47,075 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:11:47,077 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:11:47,097 - INFO : This product is licensed to 
2021-07-27 09:11:47,097 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:11:47,099 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:11:47,100 - DEBUG : Binding Python functions to Excel
2021-07-27 09:11:47,100 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:11:47,100 - DEBUG :     - pyxll_version
2021-07-27 09:11:47,100 - DEBUG :     - python_version
2021-07-27 09:11:47,100 - DEBUG :     - win32api_is_installed
2021-07-27 09:11:47,100 - DEBUG :     - win32com_is_installed
2021-07-27 09:11:47,100 - DEBUG :     - numpy_is_installed
2021-07-27 09:11:47,100 - DEBUG :     - pyxll_logfile
2021-07-27 09:11:47,100 - DEBUG :     - get_formula
2021-07-27 09:11:47,100 - DEBUG :     - get_array_formula
2021-07-27 09:11:47,100 - DEBUG :     - get_last_error
2021-07-27 09:11:47,100 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:11:47,100 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:11:47,100 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:11:47,100 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:11:47,100 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:11:47,100 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:11:47,100 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:11:47,100 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:11:47,100 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:11:47,100 - DEBUG :     - xl_cell_example
2021-07-27 09:11:47,100 - DEBUG :     - recalc_on_open_test
2021-07-27 09:11:47,100 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:11:47,100 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:11:47,100 - DEBUG :     - one_cell_one_sim
2021-07-27 09:11:47,100 - DEBUG :     - one_row_one_sim
2021-07-27 09:11:47,100 - DEBUG : Adding menus to Excel:
2021-07-27 09:11:47,100 - DEBUG :   - PyXLL
2021-07-27 09:11:47,100 - DEBUG :     - Reload PyXLL
2021-07-27 09:11:47,100 - DEBUG :     - Another example menu item
2021-07-27 09:11:47,100 - DEBUG :     - More Examples
2021-07-27 09:11:47,100 - DEBUG :       - Click me
2021-07-27 09:11:47,100 - DEBUG :       - Unicode Test
2021-07-27 09:11:47,100 - DEBUG :     - Open log file
2021-07-27 09:11:47,100 - DEBUG :     - Attach To VS Code
2021-07-27 09:11:47,100 - DEBUG :     - Custom Task Panes
2021-07-27 09:11:47,100 - DEBUG :       - Qt
2021-07-27 09:11:47,100 - DEBUG :       - Tk
2021-07-27 09:11:47,100 - DEBUG :       - Wx
2021-07-27 09:11:47,100 - DEBUG :     - Example Menu Item 1
2021-07-27 09:11:47,100 - DEBUG :     - Show last error
2021-07-27 09:11:47,100 - DEBUG :     - About PyXLL...
2021-07-27 09:11:47,100 - DEBUG :   - PyXLL example menu
2021-07-27 09:11:47,100 - DEBUG :     - Click me
2021-07-27 09:11:47,107 - DEBUG : Finished binding Python functions
2021-07-27 09:11:47,107 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:11:48,075 - DEBUG : pyxll._post_open complete.
2021-07-27 09:11:48,075 - DEBUG : PyXLL initialization complete.
2021-07-27 09:11:48,078 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:11:48,078 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:11:48,080 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:11:48,150 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:11:55,430 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 09:11:58,544 - ERROR : Traceback (most recent call last):
2021-07-27 09:11:58,545 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 157, in advanced_simulation_cell_wrapper
2021-07-27 09:11:58,545 - ERROR :     def advanced_simulation_cell_wrapper(control, histogram_bins=histogram_bins):
2021-07-27 09:11:58,545 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 121, in advanced_simulation_cell
2021-07-27 09:11:58,546 - ERROR :     
2021-07-27 09:11:58,546 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 151, in advanced_simulation_cell
2021-07-27 09:11:58,547 - ERROR :     
2021-07-27 09:11:58,547 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-27 09:11:58,548 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-27 09:11:58,548 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-27 09:11:58,548 - ERROR :     raise Exception(self.errormsg)
2021-07-27 09:11:58,548 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-27 09:12:57,062 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-27 09:14:50,434 - DEBUG : Closing PyXLL Python module.
2021-07-27 09:14:50,436 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 09:14:50,438 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 09:14:50,439 - DEBUG : PyXLL Python module closed.
2021-07-27 09:15:09,619 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:15:09,619 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:15:09,619 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:15:09,619 - DEBUG : -------- PyXLL config --------
2021-07-27 09:15:09,619 - DEBUG : [LOG]
2021-07-27 09:15:09,619 - DEBUG : encoding = utf-8
2021-07-27 09:15:09,619 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:15:09,619 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:15:09,619 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:15:09,619 - DEBUG : verbosity = debug
2021-07-27 09:15:09,619 - DEBUG : 
2021-07-27 09:15:09,619 - DEBUG : [PYTHON]
2021-07-27 09:15:09,619 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:15:09,619 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:15:09,619 - DEBUG : 
2021-07-27 09:15:09,619 - DEBUG : [PYXLL]
2021-07-27 09:15:09,619 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:15:09,619 - DEBUG : developer_mode = 1
2021-07-27 09:15:09,619 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:15:09,619 - DEBUG : modules = 
2021-07-27 09:15:09,619 - DEBUG :     misc
2021-07-27 09:15:09,619 - DEBUG :     worksheetfuncs
2021-07-27 09:15:09,619 - DEBUG :     menus
2021-07-27 09:15:09,619 - DEBUG :     callbacks
2021-07-27 09:15:09,619 - DEBUG :     custom_task_panes
2021-07-27 09:15:09,619 - DEBUG :     test
2021-07-27 09:15:09,619 - DEBUG :     ribbon_functions
2021-07-27 09:15:09,619 - DEBUG :     debugging
2021-07-27 09:15:09,619 - DEBUG :     meta_variables
2021-07-27 09:15:09,619 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:15:09,619 - DEBUG : ------------------------------
2021-07-27 09:15:09,620 - DEBUG : Attempting to load python38.dll
2021-07-27 09:15:09,621 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 09:15:09,622 - DEBUG : Checking Py_IsInitialized...
2021-07-27 09:15:09,622 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 09:15:09,738 - DEBUG : Calling Py_Initialize...
2021-07-27 09:15:09,863 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 09:15:09,863 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 09:15:09,863 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:15:09,863 - DEBUG : Python is initialized.
2021-07-27 09:15:09,864 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 09:15:09,865 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 09:15:09,865 - DEBUG : Looking for module 'site'...
2021-07-27 09:15:09,887 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 09:15:09,887 - DEBUG : Importing pyxll module
2021-07-27 09:15:09,887 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 09:15:09,887 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 09:15:09,887 - DEBUG :   Detected Python3
2021-07-27 09:15:09,919 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 09:15:09,919 - DEBUG : pyxll module imported
2021-07-27 09:15:09,919 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:15:09,919 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:15:09,919 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:15:09,924 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:15:09,924 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:15:10,091 - DEBUG : Importing misc
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:15:10,092 - DEBUG : Imported misc
2021-07-27 09:15:10,092 - DEBUG : Importing worksheetfuncs
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:15:10,092 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:15:10,092 - DEBUG : Imported worksheetfuncs
2021-07-27 09:15:10,092 - DEBUG : Importing menus
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:15:10,101 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:15:10,101 - DEBUG : Imported menus
2021-07-27 09:15:10,101 - DEBUG : Importing callbacks
2021-07-27 09:15:10,102 - DEBUG : Imported callbacks
2021-07-27 09:15:10,102 - DEBUG : Importing custom_task_panes
2021-07-27 09:15:10,102 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:15:10,102 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:15:10,102 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:15:10,102 - DEBUG : Imported custom_task_panes
2021-07-27 09:15:10,103 - DEBUG : Importing test
2021-07-27 09:15:10,104 - DEBUG : Imported test
2021-07-27 09:15:10,104 - DEBUG : Importing ribbon_functions
2021-07-27 09:15:10,938 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 09:15:10,955 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:15:10,970 - DEBUG : matplotlib version 3.4.2
2021-07-27 09:15:10,970 - DEBUG : interactive is False
2021-07-27 09:15:10,970 - DEBUG : platform is win32
2021-07-27 09:15:10,970 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_c00000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_c00000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 09:15:11,009 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:15:11,009 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 09:15:11,158 - DEBUG : Loaded backend agg version unknown.
2021-07-27 09:15:11,160 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C2625FB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C262642220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C262664220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C2626F1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C26269AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C2626E4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C262684820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C2626E4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C2626D9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C2626CDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C2626CD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C2626B5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C262649580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C2626B0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C2625FB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C262642220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C262664220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C2626F1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C26269AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C2626E4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C262684820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C2626E4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C2626D9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C2626CDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C2626CD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C2626B5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C262649580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C2626B0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:15:11,160 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:15:11,160 - DEBUG : Imported ribbon_functions
2021-07-27 09:15:11,160 - DEBUG : Importing debugging
2021-07-27 09:15:11,545 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:15:11,545 - DEBUG : Imported debugging
2021-07-27 09:15:11,545 - DEBUG : Importing meta_variables
2021-07-27 09:15:11,545 - DEBUG : Imported meta_variables
2021-07-27 09:15:11,592 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:15:11,592 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:15:11,608 - INFO : This product is licensed to 
2021-07-27 09:15:11,608 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:15:11,612 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:15:11,612 - DEBUG : Binding Python functions to Excel
2021-07-27 09:15:11,612 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:15:11,612 - DEBUG :     - pyxll_version
2021-07-27 09:15:11,612 - DEBUG :     - python_version
2021-07-27 09:15:11,612 - DEBUG :     - win32api_is_installed
2021-07-27 09:15:11,612 - DEBUG :     - win32com_is_installed
2021-07-27 09:15:11,612 - DEBUG :     - numpy_is_installed
2021-07-27 09:15:11,612 - DEBUG :     - pyxll_logfile
2021-07-27 09:15:11,612 - DEBUG :     - get_formula
2021-07-27 09:15:11,612 - DEBUG :     - get_array_formula
2021-07-27 09:15:11,612 - DEBUG :     - get_last_error
2021-07-27 09:15:11,612 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:15:11,612 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:15:11,612 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:15:11,612 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:15:11,613 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:15:11,613 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:15:11,613 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:15:11,613 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:15:11,613 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:15:11,613 - DEBUG :     - xl_cell_example
2021-07-27 09:15:11,613 - DEBUG :     - recalc_on_open_test
2021-07-27 09:15:11,613 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:15:11,613 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:15:11,613 - DEBUG :     - one_cell_one_sim
2021-07-27 09:15:11,613 - DEBUG :     - one_row_one_sim
2021-07-27 09:15:11,615 - DEBUG : Adding menus to Excel:
2021-07-27 09:15:11,615 - DEBUG :   - PyXLL
2021-07-27 09:15:11,615 - DEBUG :     - Reload PyXLL
2021-07-27 09:15:11,615 - DEBUG :     - Another example menu item
2021-07-27 09:15:11,615 - DEBUG :     - More Examples
2021-07-27 09:15:11,615 - DEBUG :       - Click me
2021-07-27 09:15:11,615 - DEBUG :       - Unicode Test
2021-07-27 09:15:11,615 - DEBUG :     - Open log file
2021-07-27 09:15:11,615 - DEBUG :     - Attach To VS Code
2021-07-27 09:15:11,615 - DEBUG :     - Custom Task Panes
2021-07-27 09:15:11,615 - DEBUG :       - Qt
2021-07-27 09:15:11,615 - DEBUG :       - Tk
2021-07-27 09:15:11,615 - DEBUG :       - Wx
2021-07-27 09:15:11,615 - DEBUG :     - Example Menu Item 1
2021-07-27 09:15:11,615 - DEBUG :     - Show last error
2021-07-27 09:15:11,615 - DEBUG :     - About PyXLL...
2021-07-27 09:15:11,615 - DEBUG :   - PyXLL example menu
2021-07-27 09:15:11,615 - DEBUG :     - Click me
2021-07-27 09:15:11,677 - DEBUG : Finished binding Python functions
2021-07-27 09:15:11,677 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 09:15:11,678 - DEBUG : pyxll._post_open complete.
2021-07-27 09:15:11,680 - DEBUG : PyXLL initialization complete.
2021-07-27 09:15:19,967 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:15:19,967 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:15:19,973 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:15:19,989 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:15:34,439 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-27 09:15:34,439 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,439 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-27 09:15:34,439 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,439 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,439 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,447 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,449 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 09:15:34,457 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,459 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,467 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,468 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,469 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,470 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,471 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,472 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,473 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,474 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,475 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,476 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,477 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 09:15:34,478 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,479 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,480 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,481 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,482 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,483 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,484 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,485 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,486 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,487 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,488 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,488 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,488 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,488 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,488 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,488 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,489 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,490 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,491 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,492 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,493 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,494 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,495 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,496 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,497 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,498 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,499 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,501 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,504 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,505 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,506 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,507 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:15:34,508 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:15:34,508 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-27 09:15:40,967 - DEBUG : Error checking license server.
2021-07-27 09:15:40,967 - DEBUG : Response code 0.
2021-07-27 09:15:40,967 - DEBUG : Payload missing from returned document
2021-07-27 09:15:40,967 - DEBUG : Connection blocked by a firewall?
2021-07-27 09:31:05,209 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:31:05,211 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:31:05,211 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:31:05,211 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:31:05,211 - DEBUG : -------- PyXLL config --------
2021-07-27 09:31:05,211 - DEBUG : [LOG]
2021-07-27 09:31:05,211 - DEBUG : encoding = utf-8
2021-07-27 09:31:05,211 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:31:05,211 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:31:05,211 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:31:05,211 - DEBUG : verbosity = debug
2021-07-27 09:31:05,211 - DEBUG : 
2021-07-27 09:31:05,211 - DEBUG : [PYTHON]
2021-07-27 09:31:05,211 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:31:05,211 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:31:05,211 - DEBUG : 
2021-07-27 09:31:05,211 - DEBUG : [PYXLL]
2021-07-27 09:31:05,211 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:31:05,211 - DEBUG : developer_mode = 1
2021-07-27 09:31:05,211 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:31:05,211 - DEBUG : modules = 
2021-07-27 09:31:05,211 - DEBUG :     misc
2021-07-27 09:31:05,211 - DEBUG :     worksheetfuncs
2021-07-27 09:31:05,211 - DEBUG :     menus
2021-07-27 09:31:05,211 - DEBUG :     callbacks
2021-07-27 09:31:05,211 - DEBUG :     custom_task_panes
2021-07-27 09:31:05,211 - DEBUG :     test
2021-07-27 09:31:05,211 - DEBUG :     ribbon_functions
2021-07-27 09:31:05,211 - DEBUG :     debugging
2021-07-27 09:31:05,212 - DEBUG :     meta_variables
2021-07-27 09:31:05,212 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:31:05,212 - DEBUG : ------------------------------
2021-07-27 09:31:05,212 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:31:05,213 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:31:05,213 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:31:05,213 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:31:05,220 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:31:05,221 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:31:05,221 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:31:05,269 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:31:05,269 - DEBUG : Reloading misc
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:31:05,269 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:31:05,278 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:31:05,278 - DEBUG : Reloaded misc
2021-07-27 09:31:05,278 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:31:05,280 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:31:05,281 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:31:05,281 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:31:05,282 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:31:05,282 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:31:05,282 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:31:05,282 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:31:05,282 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:31:05,284 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:31:05,284 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:31:05,285 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:31:05,285 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:31:05,285 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:31:05,285 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:31:05,285 - DEBUG : Reloading menus
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:31:05,285 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:31:05,285 - DEBUG : Reloaded menus
2021-07-27 09:31:05,285 - DEBUG : Reloading callbacks
2021-07-27 09:31:05,285 - DEBUG : Reloaded callbacks
2021-07-27 09:31:05,285 - DEBUG : Reloading custom_task_panes
2021-07-27 09:31:05,292 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:31:05,292 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:31:05,292 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:31:05,292 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:31:05,292 - DEBUG : Reloading test
2021-07-27 09:31:05,294 - DEBUG : Reloaded test
2021-07-27 09:31:05,294 - DEBUG : Reloading meta_variables
2021-07-27 09:31:05,295 - DEBUG : Reloaded meta_variables
2021-07-27 09:31:05,295 - DEBUG : Reloading dependency error_functions
2021-07-27 09:31:05,295 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:31:05,295 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:31:05,295 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:31:05,295 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:31:05,295 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:31:05,295 - DEBUG : Reloading dependency examples
2021-07-27 09:31:05,300 - DEBUG : Reloaded dependency examples
2021-07-27 09:31:05,300 - DEBUG : Reloading ribbon_functions
2021-07-27 09:31:05,302 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C2625FB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C262642220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C262664220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C2626F1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C26269AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C2626E4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C262684820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C2626E4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C2626D9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C2626CDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C2626CD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C2626B5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C262649580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C2626B0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C2625FB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C262642220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C262664220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C2626F1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C26269AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C2626E4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C262684820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C2626E4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C2626D9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C2626CDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C2626CD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C2626B5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C262649580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C2626B0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:31:05,302 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:31:05,302 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:31:05,302 - DEBUG : Reloading debugging
2021-07-27 09:31:05,302 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:31:05,302 - DEBUG : Reloaded debugging
2021-07-27 09:31:05,334 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:31:05,348 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:31:05,364 - INFO : This product is licensed to 
2021-07-27 09:31:05,364 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:31:05,367 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:31:05,367 - DEBUG : Binding Python functions to Excel
2021-07-27 09:31:05,367 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:31:05,367 - DEBUG :     - pyxll_version
2021-07-27 09:31:05,367 - DEBUG :     - python_version
2021-07-27 09:31:05,368 - DEBUG :     - win32api_is_installed
2021-07-27 09:31:05,368 - DEBUG :     - win32com_is_installed
2021-07-27 09:31:05,368 - DEBUG :     - numpy_is_installed
2021-07-27 09:31:05,368 - DEBUG :     - pyxll_logfile
2021-07-27 09:31:05,368 - DEBUG :     - get_formula
2021-07-27 09:31:05,368 - DEBUG :     - get_array_formula
2021-07-27 09:31:05,368 - DEBUG :     - get_last_error
2021-07-27 09:31:05,368 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:31:05,368 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:31:05,369 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:31:05,369 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:31:05,369 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:31:05,369 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:31:05,369 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:31:05,369 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:31:05,369 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:31:05,369 - DEBUG :     - xl_cell_example
2021-07-27 09:31:05,369 - DEBUG :     - recalc_on_open_test
2021-07-27 09:31:05,370 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:31:05,370 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:31:05,370 - DEBUG :     - one_cell_one_sim
2021-07-27 09:31:05,370 - DEBUG :     - one_row_one_sim
2021-07-27 09:31:05,372 - DEBUG : Adding menus to Excel:
2021-07-27 09:31:05,372 - DEBUG :   - PyXLL
2021-07-27 09:31:05,372 - DEBUG :     - Reload PyXLL
2021-07-27 09:31:05,372 - DEBUG :     - Another example menu item
2021-07-27 09:31:05,372 - DEBUG :     - More Examples
2021-07-27 09:31:05,372 - DEBUG :       - Click me
2021-07-27 09:31:05,372 - DEBUG :       - Unicode Test
2021-07-27 09:31:05,372 - DEBUG :     - Open log file
2021-07-27 09:31:05,372 - DEBUG :     - Attach To VS Code
2021-07-27 09:31:05,372 - DEBUG :     - Custom Task Panes
2021-07-27 09:31:05,372 - DEBUG :       - Qt
2021-07-27 09:31:05,372 - DEBUG :       - Tk
2021-07-27 09:31:05,372 - DEBUG :       - Wx
2021-07-27 09:31:05,372 - DEBUG :     - Example Menu Item 1
2021-07-27 09:31:05,372 - DEBUG :     - Show last error
2021-07-27 09:31:05,372 - DEBUG :     - About PyXLL...
2021-07-27 09:31:05,372 - DEBUG :   - PyXLL example menu
2021-07-27 09:31:05,372 - DEBUG :     - Click me
2021-07-27 09:31:05,378 - DEBUG : Finished binding Python functions
2021-07-27 09:31:05,379 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:31:06,267 - DEBUG : pyxll._post_open complete.
2021-07-27 09:31:06,268 - DEBUG : PyXLL initialization complete.
2021-07-27 09:31:06,270 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:31:06,270 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:31:06,281 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:31:06,349 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:34:38,184 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:34:38,185 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:34:38,185 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:34:38,185 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:34:38,185 - DEBUG : -------- PyXLL config --------
2021-07-27 09:34:38,185 - DEBUG : [LOG]
2021-07-27 09:34:38,185 - DEBUG : encoding = utf-8
2021-07-27 09:34:38,185 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:34:38,185 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:34:38,185 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:34:38,185 - DEBUG : verbosity = debug
2021-07-27 09:34:38,185 - DEBUG : 
2021-07-27 09:34:38,185 - DEBUG : [PYTHON]
2021-07-27 09:34:38,185 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:34:38,185 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:34:38,185 - DEBUG : 
2021-07-27 09:34:38,185 - DEBUG : [PYXLL]
2021-07-27 09:34:38,185 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:34:38,185 - DEBUG : developer_mode = 1
2021-07-27 09:34:38,185 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:34:38,185 - DEBUG : modules = 
2021-07-27 09:34:38,185 - DEBUG :     misc
2021-07-27 09:34:38,185 - DEBUG :     worksheetfuncs
2021-07-27 09:34:38,185 - DEBUG :     menus
2021-07-27 09:34:38,185 - DEBUG :     callbacks
2021-07-27 09:34:38,185 - DEBUG :     custom_task_panes
2021-07-27 09:34:38,185 - DEBUG :     test
2021-07-27 09:34:38,185 - DEBUG :     ribbon_functions
2021-07-27 09:34:38,185 - DEBUG :     debugging
2021-07-27 09:34:38,185 - DEBUG :     meta_variables
2021-07-27 09:34:38,185 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:34:38,185 - DEBUG : ------------------------------
2021-07-27 09:34:38,185 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:34:38,185 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:34:38,185 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:34:38,185 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:34:38,185 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:34:38,185 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:34:38,192 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:34:38,251 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:34:38,251 - DEBUG : Reloading misc
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:34:38,251 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:34:38,258 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:34:38,258 - DEBUG : Reloaded misc
2021-07-27 09:34:38,258 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:34:38,260 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:34:38,260 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:34:38,260 - DEBUG : Reloading menus
2021-07-27 09:34:38,266 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:34:38,266 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:34:38,266 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:34:38,266 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:34:38,266 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:34:38,267 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:34:38,267 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:34:38,267 - DEBUG : Reloaded menus
2021-07-27 09:34:38,267 - DEBUG : Reloading callbacks
2021-07-27 09:34:38,267 - DEBUG : Reloaded callbacks
2021-07-27 09:34:38,267 - DEBUG : Reloading custom_task_panes
2021-07-27 09:34:38,267 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:34:38,267 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:34:38,267 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:34:38,267 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:34:38,267 - DEBUG : Reloading test
2021-07-27 09:34:38,267 - DEBUG : Reloaded test
2021-07-27 09:34:38,267 - DEBUG : Reloading meta_variables
2021-07-27 09:34:38,267 - DEBUG : Reloaded meta_variables
2021-07-27 09:34:38,267 - DEBUG : Reloading dependency error_functions
2021-07-27 09:34:38,267 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:34:38,267 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:34:38,267 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:34:38,267 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:34:38,274 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:34:38,274 - DEBUG : Reloading dependency examples
2021-07-27 09:34:38,275 - DEBUG : Reloaded dependency examples
2021-07-27 09:34:38,275 - DEBUG : Reloading ribbon_functions
2021-07-27 09:34:38,275 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C2625FB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C262642220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C262664220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C2626F1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C26269AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C2626E4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C262684820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C2626E4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C2626D9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C2626CDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C2626CD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C2626B5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C262649580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C2626B0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C2625FB760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C262642220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C262664220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C2626F1B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C26269AE50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C2626E4310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C262684820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C2626E4A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C2626D9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C2626CDCA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C2626CD2B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C2626B5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C262649580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C2626B0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:34:38,275 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:34:38,275 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:34:38,275 - DEBUG : Reloading debugging
2021-07-27 09:34:38,275 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:34:38,275 - DEBUG : Reloaded debugging
2021-07-27 09:34:38,314 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:34:38,322 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:34:38,337 - INFO : This product is licensed to 
2021-07-27 09:34:38,337 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:34:38,340 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:34:38,340 - DEBUG : Binding Python functions to Excel
2021-07-27 09:34:38,341 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:34:38,341 - DEBUG :     - pyxll_version
2021-07-27 09:34:38,341 - DEBUG :     - python_version
2021-07-27 09:34:38,341 - DEBUG :     - win32api_is_installed
2021-07-27 09:34:38,341 - DEBUG :     - win32com_is_installed
2021-07-27 09:34:38,341 - DEBUG :     - numpy_is_installed
2021-07-27 09:34:38,341 - DEBUG :     - pyxll_logfile
2021-07-27 09:34:38,341 - DEBUG :     - get_formula
2021-07-27 09:34:38,341 - DEBUG :     - get_array_formula
2021-07-27 09:34:38,342 - DEBUG :     - get_last_error
2021-07-27 09:34:38,342 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:34:38,342 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:34:38,342 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:34:38,342 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:34:38,342 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:34:38,342 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:34:38,342 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:34:38,342 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:34:38,342 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:34:38,342 - DEBUG :     - xl_cell_example
2021-07-27 09:34:38,342 - DEBUG :     - recalc_on_open_test
2021-07-27 09:34:38,342 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:34:38,342 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:34:38,342 - DEBUG :     - one_cell_one_sim
2021-07-27 09:34:38,342 - DEBUG :     - one_row_one_sim
2021-07-27 09:34:38,346 - DEBUG : Adding menus to Excel:
2021-07-27 09:34:38,346 - DEBUG :   - PyXLL
2021-07-27 09:34:38,346 - DEBUG :     - Reload PyXLL
2021-07-27 09:34:38,346 - DEBUG :     - Another example menu item
2021-07-27 09:34:38,346 - DEBUG :     - More Examples
2021-07-27 09:34:38,346 - DEBUG :       - Click me
2021-07-27 09:34:38,346 - DEBUG :       - Unicode Test
2021-07-27 09:34:38,346 - DEBUG :     - Open log file
2021-07-27 09:34:38,346 - DEBUG :     - Attach To VS Code
2021-07-27 09:34:38,346 - DEBUG :     - Custom Task Panes
2021-07-27 09:34:38,346 - DEBUG :       - Qt
2021-07-27 09:34:38,346 - DEBUG :       - Tk
2021-07-27 09:34:38,346 - DEBUG :       - Wx
2021-07-27 09:34:38,346 - DEBUG :     - Example Menu Item 1
2021-07-27 09:34:38,346 - DEBUG :     - Show last error
2021-07-27 09:34:38,346 - DEBUG :     - About PyXLL...
2021-07-27 09:34:38,346 - DEBUG :   - PyXLL example menu
2021-07-27 09:34:38,346 - DEBUG :     - Click me
2021-07-27 09:34:38,353 - DEBUG : Finished binding Python functions
2021-07-27 09:34:38,353 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:34:39,168 - DEBUG : pyxll._post_open complete.
2021-07-27 09:34:39,168 - DEBUG : PyXLL initialization complete.
2021-07-27 09:34:39,171 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:34:39,171 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:34:39,172 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:34:39,229 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:36:39,050 - DEBUG : Closing PyXLL Python module.
2021-07-27 09:36:39,050 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 09:36:39,051 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 09:36:39,051 - DEBUG : PyXLL Python module closed.
2021-07-27 09:36:41,125 - DEBUG : 
Tue Jul 27 09:36:41 2021
---------- PyXLL Stopped ----------
2021-07-27 09:36:48,434 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:36:48,434 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:36:48,435 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:36:48,435 - DEBUG : -------- PyXLL config --------
2021-07-27 09:36:48,435 - DEBUG : [LOG]
2021-07-27 09:36:48,435 - DEBUG : encoding = utf-8
2021-07-27 09:36:48,435 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:36:48,435 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:36:48,435 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:36:48,435 - DEBUG : verbosity = debug
2021-07-27 09:36:48,435 - DEBUG : 
2021-07-27 09:36:48,435 - DEBUG : [PYTHON]
2021-07-27 09:36:48,435 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:36:48,435 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:36:48,435 - DEBUG : 
2021-07-27 09:36:48,435 - DEBUG : [PYXLL]
2021-07-27 09:36:48,435 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:36:48,435 - DEBUG : developer_mode = 1
2021-07-27 09:36:48,435 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:36:48,435 - DEBUG : modules = 
2021-07-27 09:36:48,435 - DEBUG :     misc
2021-07-27 09:36:48,435 - DEBUG :     worksheetfuncs
2021-07-27 09:36:48,435 - DEBUG :     menus
2021-07-27 09:36:48,435 - DEBUG :     callbacks
2021-07-27 09:36:48,435 - DEBUG :     custom_task_panes
2021-07-27 09:36:48,435 - DEBUG :     test
2021-07-27 09:36:48,435 - DEBUG :     ribbon_functions
2021-07-27 09:36:48,435 - DEBUG :     debugging
2021-07-27 09:36:48,435 - DEBUG :     meta_variables
2021-07-27 09:36:48,435 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:36:48,435 - DEBUG : ------------------------------
2021-07-27 09:36:48,436 - DEBUG : Attempting to load python38.dll
2021-07-27 09:36:48,437 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 09:36:48,438 - DEBUG : Checking Py_IsInitialized...
2021-07-27 09:36:48,438 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 09:36:48,659 - DEBUG : Calling Py_Initialize...
2021-07-27 09:36:48,810 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 09:36:48,811 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 09:36:48,811 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:36:48,811 - DEBUG : Python is initialized.
2021-07-27 09:36:48,811 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 09:36:48,814 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 09:36:48,814 - DEBUG : Looking for module 'site'...
2021-07-27 09:36:48,839 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 09:36:48,839 - DEBUG : Importing pyxll module
2021-07-27 09:36:48,839 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 09:36:48,839 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 09:36:48,839 - DEBUG :   Detected Python3
2021-07-27 09:36:48,873 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 09:36:48,876 - DEBUG : pyxll module imported
2021-07-27 09:36:48,876 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:36:48,876 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:36:48,876 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:36:48,879 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:36:48,879 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:36:49,052 - DEBUG : Importing misc
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:36:49,053 - DEBUG : Imported misc
2021-07-27 09:36:49,053 - DEBUG : Importing worksheetfuncs
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:36:49,053 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:36:49,053 - DEBUG : Imported worksheetfuncs
2021-07-27 09:36:49,053 - DEBUG : Importing menus
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:36:49,062 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:36:49,062 - DEBUG : Imported menus
2021-07-27 09:36:49,062 - DEBUG : Importing callbacks
2021-07-27 09:36:49,063 - DEBUG : Imported callbacks
2021-07-27 09:36:49,063 - DEBUG : Importing custom_task_panes
2021-07-27 09:36:49,063 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:36:49,063 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:36:49,063 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:36:49,064 - DEBUG : Imported custom_task_panes
2021-07-27 09:36:49,064 - DEBUG : Importing test
2021-07-27 09:36:49,065 - DEBUG : Imported test
2021-07-27 09:36:49,065 - DEBUG : Importing ribbon_functions
2021-07-27 09:36:49,901 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 09:36:49,928 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:36:49,931 - DEBUG : matplotlib version 3.4.2
2021-07-27 09:36:49,932 - DEBUG : interactive is False
2021-07-27 09:36:49,932 - DEBUG : platform is win32
2021-07-27 09:36:49,932 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_e30000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_e30000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 09:36:49,979 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 09:36:49,989 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 09:36:50,153 - DEBUG : Loaded backend agg version unknown.
2021-07-27 09:36:50,154 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:36:50,157 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:36:50,157 - DEBUG : Imported ribbon_functions
2021-07-27 09:36:50,157 - DEBUG : Importing debugging
2021-07-27 09:36:50,600 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:36:50,600 - DEBUG : Imported debugging
2021-07-27 09:36:50,600 - DEBUG : Importing meta_variables
2021-07-27 09:36:50,600 - DEBUG : Imported meta_variables
2021-07-27 09:36:50,635 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:36:50,637 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:36:50,651 - INFO : This product is licensed to 
2021-07-27 09:36:50,651 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:36:50,653 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:36:50,653 - DEBUG : Binding Python functions to Excel
2021-07-27 09:36:50,653 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:36:50,653 - DEBUG :     - pyxll_version
2021-07-27 09:36:50,653 - DEBUG :     - python_version
2021-07-27 09:36:50,653 - DEBUG :     - win32api_is_installed
2021-07-27 09:36:50,653 - DEBUG :     - win32com_is_installed
2021-07-27 09:36:50,653 - DEBUG :     - numpy_is_installed
2021-07-27 09:36:50,653 - DEBUG :     - pyxll_logfile
2021-07-27 09:36:50,653 - DEBUG :     - get_formula
2021-07-27 09:36:50,653 - DEBUG :     - get_array_formula
2021-07-27 09:36:50,653 - DEBUG :     - get_last_error
2021-07-27 09:36:50,653 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:36:50,653 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:36:50,653 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:36:50,653 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:36:50,653 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:36:50,653 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:36:50,654 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:36:50,654 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:36:50,654 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:36:50,654 - DEBUG :     - xl_cell_example
2021-07-27 09:36:50,654 - DEBUG :     - recalc_on_open_test
2021-07-27 09:36:50,654 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:36:50,654 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:36:50,654 - DEBUG :     - one_cell_one_sim
2021-07-27 09:36:50,654 - DEBUG :     - one_row_one_sim
2021-07-27 09:36:50,663 - DEBUG : Adding menus to Excel:
2021-07-27 09:36:50,663 - DEBUG :   - PyXLL
2021-07-27 09:36:50,663 - DEBUG :     - Reload PyXLL
2021-07-27 09:36:50,663 - DEBUG :     - Another example menu item
2021-07-27 09:36:50,663 - DEBUG :     - More Examples
2021-07-27 09:36:50,663 - DEBUG :       - Click me
2021-07-27 09:36:50,663 - DEBUG :       - Unicode Test
2021-07-27 09:36:50,663 - DEBUG :     - Open log file
2021-07-27 09:36:50,663 - DEBUG :     - Attach To VS Code
2021-07-27 09:36:50,663 - DEBUG :     - Custom Task Panes
2021-07-27 09:36:50,663 - DEBUG :       - Qt
2021-07-27 09:36:50,663 - DEBUG :       - Tk
2021-07-27 09:36:50,663 - DEBUG :       - Wx
2021-07-27 09:36:50,663 - DEBUG :     - Example Menu Item 1
2021-07-27 09:36:50,663 - DEBUG :     - Show last error
2021-07-27 09:36:50,663 - DEBUG :     - About PyXLL...
2021-07-27 09:36:50,663 - DEBUG :   - PyXLL example menu
2021-07-27 09:36:50,663 - DEBUG :     - Click me
2021-07-27 09:36:50,703 - DEBUG : Finished binding Python functions
2021-07-27 09:36:50,703 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 09:36:50,703 - DEBUG : pyxll._post_open complete.
2021-07-27 09:36:50,705 - DEBUG : PyXLL initialization complete.
2021-07-27 09:36:53,657 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:36:53,658 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:36:53,663 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:36:53,680 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:37:23,090 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,090 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,105 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,106 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,107 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,117 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:37:23,118 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,125 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,126 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,127 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,133 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 09:37:23,134 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,135 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,141 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:37:23,142 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,149 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,150 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,155 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 09:37:23,156 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 09:37:23,156 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-27 09:39:31,625 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:39:31,626 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:39:31,626 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:39:31,626 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:39:31,626 - DEBUG : -------- PyXLL config --------
2021-07-27 09:39:31,626 - DEBUG : [LOG]
2021-07-27 09:39:31,626 - DEBUG : encoding = utf-8
2021-07-27 09:39:31,626 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:39:31,626 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:39:31,626 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:39:31,626 - DEBUG : verbosity = debug
2021-07-27 09:39:31,626 - DEBUG : 
2021-07-27 09:39:31,626 - DEBUG : [PYTHON]
2021-07-27 09:39:31,626 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:39:31,626 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:39:31,626 - DEBUG : 
2021-07-27 09:39:31,626 - DEBUG : [PYXLL]
2021-07-27 09:39:31,626 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:39:31,626 - DEBUG : developer_mode = 1
2021-07-27 09:39:31,626 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:39:31,626 - DEBUG : modules = 
2021-07-27 09:39:31,629 - DEBUG :     misc
2021-07-27 09:39:31,629 - DEBUG :     worksheetfuncs
2021-07-27 09:39:31,629 - DEBUG :     menus
2021-07-27 09:39:31,629 - DEBUG :     callbacks
2021-07-27 09:39:31,629 - DEBUG :     custom_task_panes
2021-07-27 09:39:31,629 - DEBUG :     test
2021-07-27 09:39:31,629 - DEBUG :     ribbon_functions
2021-07-27 09:39:31,629 - DEBUG :     debugging
2021-07-27 09:39:31,629 - DEBUG :     meta_variables
2021-07-27 09:39:31,629 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:39:31,629 - DEBUG : ------------------------------
2021-07-27 09:39:31,629 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:39:31,629 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:39:31,629 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:39:31,630 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:39:31,631 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:39:31,632 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:39:31,632 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:39:31,671 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:39:31,671 - DEBUG : Reloading misc
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:39:31,671 - DEBUG : Reloaded misc
2021-07-27 09:39:31,671 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:39:31,671 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:39:31,671 - DEBUG : Reloading menus
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:39:31,671 - DEBUG : Reloaded menus
2021-07-27 09:39:31,671 - DEBUG : Reloading callbacks
2021-07-27 09:39:31,671 - DEBUG : Reloaded callbacks
2021-07-27 09:39:31,671 - DEBUG : Reloading custom_task_panes
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:39:31,671 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:39:31,671 - DEBUG : Reloading test
2021-07-27 09:39:31,671 - DEBUG : Reloaded test
2021-07-27 09:39:31,671 - DEBUG : Reloading meta_variables
2021-07-27 09:39:31,671 - DEBUG : Reloaded meta_variables
2021-07-27 09:39:31,671 - DEBUG : Reloading dependency error_functions
2021-07-27 09:39:31,671 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:39:31,671 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:39:31,671 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:39:31,671 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:39:31,671 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:39:31,671 - DEBUG : Reloading dependency examples
2021-07-27 09:39:31,671 - DEBUG : Reloaded dependency examples
2021-07-27 09:39:31,671 - DEBUG : Reloading ribbon_functions
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:39:31,671 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:39:31,671 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:39:31,671 - DEBUG : Reloading debugging
2021-07-27 09:39:31,671 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:39:31,671 - DEBUG : Reloaded debugging
2021-07-27 09:39:31,714 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:39:31,714 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:39:31,735 - INFO : This product is licensed to 
2021-07-27 09:39:31,735 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:39:31,737 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:39:31,737 - DEBUG : Binding Python functions to Excel
2021-07-27 09:39:31,737 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:39:31,737 - DEBUG :     - pyxll_version
2021-07-27 09:39:31,737 - DEBUG :     - python_version
2021-07-27 09:39:31,737 - DEBUG :     - win32api_is_installed
2021-07-27 09:39:31,737 - DEBUG :     - win32com_is_installed
2021-07-27 09:39:31,737 - DEBUG :     - numpy_is_installed
2021-07-27 09:39:31,737 - DEBUG :     - pyxll_logfile
2021-07-27 09:39:31,737 - DEBUG :     - get_formula
2021-07-27 09:39:31,737 - DEBUG :     - get_array_formula
2021-07-27 09:39:31,737 - DEBUG :     - get_last_error
2021-07-27 09:39:31,737 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:39:31,737 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:39:31,737 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:39:31,737 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:39:31,738 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:39:31,738 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:39:31,738 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:39:31,738 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:39:31,738 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:39:31,738 - DEBUG :     - xl_cell_example
2021-07-27 09:39:31,738 - DEBUG :     - recalc_on_open_test
2021-07-27 09:39:31,738 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:39:31,738 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:39:31,738 - DEBUG :     - one_cell_one_sim
2021-07-27 09:39:31,738 - DEBUG :     - one_row_one_sim
2021-07-27 09:39:31,739 - DEBUG : Adding menus to Excel:
2021-07-27 09:39:31,739 - DEBUG :   - PyXLL
2021-07-27 09:39:31,739 - DEBUG :     - Reload PyXLL
2021-07-27 09:39:31,739 - DEBUG :     - Another example menu item
2021-07-27 09:39:31,739 - DEBUG :     - More Examples
2021-07-27 09:39:31,739 - DEBUG :       - Click me
2021-07-27 09:39:31,739 - DEBUG :       - Unicode Test
2021-07-27 09:39:31,739 - DEBUG :     - Open log file
2021-07-27 09:39:31,739 - DEBUG :     - Attach To VS Code
2021-07-27 09:39:31,739 - DEBUG :     - Custom Task Panes
2021-07-27 09:39:31,739 - DEBUG :       - Qt
2021-07-27 09:39:31,739 - DEBUG :       - Tk
2021-07-27 09:39:31,739 - DEBUG :       - Wx
2021-07-27 09:39:31,739 - DEBUG :     - Example Menu Item 1
2021-07-27 09:39:31,739 - DEBUG :     - Show last error
2021-07-27 09:39:31,739 - DEBUG :     - About PyXLL...
2021-07-27 09:39:31,739 - DEBUG :   - PyXLL example menu
2021-07-27 09:39:31,739 - DEBUG :     - Click me
2021-07-27 09:39:31,752 - DEBUG : Finished binding Python functions
2021-07-27 09:39:31,752 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:39:32,575 - DEBUG : pyxll._post_open complete.
2021-07-27 09:39:32,577 - DEBUG : PyXLL initialization complete.
2021-07-27 09:39:32,579 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:39:32,579 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:39:32,580 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:39:32,644 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:40:09,695 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:40:09,698 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:40:09,698 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:40:09,698 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:40:09,698 - DEBUG : -------- PyXLL config --------
2021-07-27 09:40:09,698 - DEBUG : [LOG]
2021-07-27 09:40:09,698 - DEBUG : encoding = utf-8
2021-07-27 09:40:09,698 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:40:09,698 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:40:09,698 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:40:09,698 - DEBUG : verbosity = debug
2021-07-27 09:40:09,698 - DEBUG : 
2021-07-27 09:40:09,699 - DEBUG : [PYTHON]
2021-07-27 09:40:09,699 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:40:09,699 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:40:09,699 - DEBUG : 
2021-07-27 09:40:09,699 - DEBUG : [PYXLL]
2021-07-27 09:40:09,699 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:40:09,699 - DEBUG : developer_mode = 1
2021-07-27 09:40:09,699 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:40:09,699 - DEBUG : modules = 
2021-07-27 09:40:09,699 - DEBUG :     misc
2021-07-27 09:40:09,699 - DEBUG :     worksheetfuncs
2021-07-27 09:40:09,699 - DEBUG :     menus
2021-07-27 09:40:09,699 - DEBUG :     callbacks
2021-07-27 09:40:09,699 - DEBUG :     custom_task_panes
2021-07-27 09:40:09,699 - DEBUG :     test
2021-07-27 09:40:09,699 - DEBUG :     ribbon_functions
2021-07-27 09:40:09,699 - DEBUG :     debugging
2021-07-27 09:40:09,699 - DEBUG :     meta_variables
2021-07-27 09:40:09,699 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:40:09,699 - DEBUG : ------------------------------
2021-07-27 09:40:09,699 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:40:09,699 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:40:09,699 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:40:09,700 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:40:09,702 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:40:09,702 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:40:09,702 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:40:09,750 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:40:09,750 - DEBUG : Reloading misc
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:40:09,750 - DEBUG : Reloaded misc
2021-07-27 09:40:09,750 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:40:09,750 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:40:09,750 - DEBUG : Reloading menus
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:40:09,750 - DEBUG : Reloaded menus
2021-07-27 09:40:09,750 - DEBUG : Reloading callbacks
2021-07-27 09:40:09,750 - DEBUG : Reloaded callbacks
2021-07-27 09:40:09,750 - DEBUG : Reloading custom_task_panes
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:40:09,750 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:40:09,750 - DEBUG : Reloading test
2021-07-27 09:40:09,750 - DEBUG : Reloaded test
2021-07-27 09:40:09,750 - DEBUG : Reloading meta_variables
2021-07-27 09:40:09,750 - DEBUG : Reloaded meta_variables
2021-07-27 09:40:09,750 - DEBUG : Reloading dependency error_functions
2021-07-27 09:40:09,750 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:40:09,750 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:40:09,750 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:40:09,750 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:40:09,750 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:40:09,750 - DEBUG : Reloading dependency examples
2021-07-27 09:40:09,750 - DEBUG : Reloaded dependency examples
2021-07-27 09:40:09,750 - DEBUG : Reloading ribbon_functions
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:40:09,750 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:40:09,750 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:40:09,750 - DEBUG : Reloading debugging
2021-07-27 09:40:09,750 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:40:09,750 - DEBUG : Reloaded debugging
2021-07-27 09:40:09,789 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:40:09,795 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:40:09,809 - INFO : This product is licensed to 
2021-07-27 09:40:09,809 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:40:09,810 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:40:09,810 - DEBUG : Binding Python functions to Excel
2021-07-27 09:40:09,810 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:40:09,810 - DEBUG :     - pyxll_version
2021-07-27 09:40:09,810 - DEBUG :     - python_version
2021-07-27 09:40:09,810 - DEBUG :     - win32api_is_installed
2021-07-27 09:40:09,811 - DEBUG :     - win32com_is_installed
2021-07-27 09:40:09,811 - DEBUG :     - numpy_is_installed
2021-07-27 09:40:09,811 - DEBUG :     - pyxll_logfile
2021-07-27 09:40:09,811 - DEBUG :     - get_formula
2021-07-27 09:40:09,811 - DEBUG :     - get_array_formula
2021-07-27 09:40:09,811 - DEBUG :     - get_last_error
2021-07-27 09:40:09,811 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:40:09,811 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:40:09,811 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:40:09,811 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:40:09,811 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:40:09,811 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:40:09,811 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:40:09,811 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:40:09,811 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:40:09,811 - DEBUG :     - xl_cell_example
2021-07-27 09:40:09,811 - DEBUG :     - recalc_on_open_test
2021-07-27 09:40:09,811 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:40:09,811 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:40:09,811 - DEBUG :     - one_cell_one_sim
2021-07-27 09:40:09,811 - DEBUG :     - one_row_one_sim
2021-07-27 09:40:09,814 - DEBUG : Adding menus to Excel:
2021-07-27 09:40:09,814 - DEBUG :   - PyXLL
2021-07-27 09:40:09,814 - DEBUG :     - Reload PyXLL
2021-07-27 09:40:09,814 - DEBUG :     - Another example menu item
2021-07-27 09:40:09,814 - DEBUG :     - More Examples
2021-07-27 09:40:09,814 - DEBUG :       - Click me
2021-07-27 09:40:09,814 - DEBUG :       - Unicode Test
2021-07-27 09:40:09,814 - DEBUG :     - Open log file
2021-07-27 09:40:09,814 - DEBUG :     - Attach To VS Code
2021-07-27 09:40:09,814 - DEBUG :     - Custom Task Panes
2021-07-27 09:40:09,814 - DEBUG :       - Qt
2021-07-27 09:40:09,814 - DEBUG :       - Tk
2021-07-27 09:40:09,814 - DEBUG :       - Wx
2021-07-27 09:40:09,814 - DEBUG :     - Example Menu Item 1
2021-07-27 09:40:09,814 - DEBUG :     - Show last error
2021-07-27 09:40:09,814 - DEBUG :     - About PyXLL...
2021-07-27 09:40:09,814 - DEBUG :   - PyXLL example menu
2021-07-27 09:40:09,814 - DEBUG :     - Click me
2021-07-27 09:40:09,823 - DEBUG : Finished binding Python functions
2021-07-27 09:40:09,823 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:40:10,605 - DEBUG : pyxll._post_open complete.
2021-07-27 09:40:10,605 - DEBUG : PyXLL initialization complete.
2021-07-27 09:40:10,607 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:40:10,608 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:40:10,609 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:40:10,667 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 09:44:53,166 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 09:44:53,167 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 09:44:53,167 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 09:44:53,167 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 09:44:53,167 - DEBUG : -------- PyXLL config --------
2021-07-27 09:44:53,167 - DEBUG : [LOG]
2021-07-27 09:44:53,167 - DEBUG : encoding = utf-8
2021-07-27 09:44:53,167 - DEBUG : file = pyxll.20210727.log
2021-07-27 09:44:53,167 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 09:44:53,167 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 09:44:53,167 - DEBUG : verbosity = debug
2021-07-27 09:44:53,167 - DEBUG : 
2021-07-27 09:44:53,167 - DEBUG : [PYTHON]
2021-07-27 09:44:53,167 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 09:44:53,167 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 09:44:53,167 - DEBUG : 
2021-07-27 09:44:53,167 - DEBUG : [PYXLL]
2021-07-27 09:44:53,167 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 09:44:53,167 - DEBUG : developer_mode = 1
2021-07-27 09:44:53,167 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 09:44:53,167 - DEBUG : modules = 
2021-07-27 09:44:53,167 - DEBUG :     misc
2021-07-27 09:44:53,167 - DEBUG :     worksheetfuncs
2021-07-27 09:44:53,167 - DEBUG :     menus
2021-07-27 09:44:53,167 - DEBUG :     callbacks
2021-07-27 09:44:53,167 - DEBUG :     custom_task_panes
2021-07-27 09:44:53,167 - DEBUG :     test
2021-07-27 09:44:53,167 - DEBUG :     ribbon_functions
2021-07-27 09:44:53,167 - DEBUG :     debugging
2021-07-27 09:44:53,167 - DEBUG :     meta_variables
2021-07-27 09:44:53,167 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 09:44:53,167 - DEBUG : ------------------------------
2021-07-27 09:44:53,167 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 09:44:53,167 - DEBUG : Initializing PyXLL Python module.
2021-07-27 09:44:53,167 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 09:44:53,172 - DEBUG : PyXLL Python module initialized.
2021-07-27 09:44:53,177 - DEBUG : Functions will not be cancellable by default.
2021-07-27 09:44:53,177 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 09:44:53,177 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 09:44:53,232 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 09:44:53,232 - DEBUG : Reloading misc
2021-07-27 09:44:53,232 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 09:44:53,232 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 09:44:53,232 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 09:44:53,232 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 09:44:53,232 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 09:44:53,232 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 09:44:53,240 - DEBUG : Reloaded misc
2021-07-27 09:44:53,240 - DEBUG : Reloading worksheetfuncs
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 09:44:53,240 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 09:44:53,248 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 09:44:53,248 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 09:44:53,248 - DEBUG : Reloaded worksheetfuncs
2021-07-27 09:44:53,248 - DEBUG : Reloading menus
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 09:44:53,248 - DEBUG : Reloaded menus
2021-07-27 09:44:53,248 - DEBUG : Reloading callbacks
2021-07-27 09:44:53,248 - DEBUG : Reloaded callbacks
2021-07-27 09:44:53,248 - DEBUG : Reloading custom_task_panes
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 09:44:53,248 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 09:44:53,248 - DEBUG : Reloaded custom_task_panes
2021-07-27 09:44:53,248 - DEBUG : Reloading test
2021-07-27 09:44:53,248 - DEBUG : Reloaded test
2021-07-27 09:44:53,256 - DEBUG : Reloading meta_variables
2021-07-27 09:45:04,344 - DEBUG : Reloaded meta_variables
2021-07-27 09:45:04,346 - DEBUG : Reloading dependency error_functions
2021-07-27 09:45:04,348 - DEBUG : Reloaded dependency error_functions
2021-07-27 09:45:04,352 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 09:45:04,354 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 09:45:04,354 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 09:45:04,354 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 09:45:04,354 - DEBUG : Reloading dependency examples
2021-07-27 09:45:04,360 - DEBUG : Reloaded dependency examples
2021-07-27 09:45:04,360 - DEBUG : Reloading ribbon_functions
2021-07-27 09:45:04,368 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 09:45:04,369 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 09:45:04,370 - DEBUG : Reloaded ribbon_functions
2021-07-27 09:45:04,370 - DEBUG : Reloading debugging
2021-07-27 09:45:04,370 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 09:45:04,370 - DEBUG : Reloaded debugging
2021-07-27 09:45:04,452 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 09:45:04,466 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 09:45:04,500 - INFO : This product is licensed to 
2021-07-27 09:45:04,500 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 09:45:04,510 - DEBUG : Calling pyxll._post_open.
2021-07-27 09:45:04,510 - DEBUG : Binding Python functions to Excel
2021-07-27 09:45:04,510 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 09:45:04,510 - DEBUG :     - pyxll_version
2021-07-27 09:45:04,513 - DEBUG :     - python_version
2021-07-27 09:45:04,513 - DEBUG :     - win32api_is_installed
2021-07-27 09:45:04,514 - DEBUG :     - win32com_is_installed
2021-07-27 09:45:04,514 - DEBUG :     - numpy_is_installed
2021-07-27 09:45:04,515 - DEBUG :     - pyxll_logfile
2021-07-27 09:45:04,515 - DEBUG :     - get_formula
2021-07-27 09:45:04,516 - DEBUG :     - get_array_formula
2021-07-27 09:45:04,516 - DEBUG :     - get_last_error
2021-07-27 09:45:04,516 - DEBUG :     - basic_pyxll_function_1
2021-07-27 09:45:04,516 - DEBUG :     - basic_pyxll_function_2
2021-07-27 09:45:04,516 - DEBUG :     - basic_pyxll_function_3
2021-07-27 09:45:04,516 - DEBUG :     - var_pyxll_function_1
2021-07-27 09:45:04,516 - DEBUG :     - var_pyxll_function_2
2021-07-27 09:45:04,516 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 09:45:04,516 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 09:45:04,516 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 09:45:04,516 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 09:45:04,516 - DEBUG :     - xl_cell_example
2021-07-27 09:45:04,516 - DEBUG :     - recalc_on_open_test
2021-07-27 09:45:04,516 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 09:45:04,516 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 09:45:04,516 - DEBUG :     - one_cell_one_sim
2021-07-27 09:45:04,524 - DEBUG :     - one_row_one_sim
2021-07-27 09:45:04,533 - DEBUG : Adding menus to Excel:
2021-07-27 09:45:04,533 - DEBUG :   - PyXLL
2021-07-27 09:45:04,533 - DEBUG :     - Reload PyXLL
2021-07-27 09:45:04,533 - DEBUG :     - Another example menu item
2021-07-27 09:45:04,533 - DEBUG :     - More Examples
2021-07-27 09:45:04,533 - DEBUG :       - Click me
2021-07-27 09:45:04,533 - DEBUG :       - Unicode Test
2021-07-27 09:45:04,533 - DEBUG :     - Open log file
2021-07-27 09:45:04,533 - DEBUG :     - Attach To VS Code
2021-07-27 09:45:04,533 - DEBUG :     - Custom Task Panes
2021-07-27 09:45:04,533 - DEBUG :       - Qt
2021-07-27 09:45:04,533 - DEBUG :       - Tk
2021-07-27 09:45:04,533 - DEBUG :       - Wx
2021-07-27 09:45:04,533 - DEBUG :     - Example Menu Item 1
2021-07-27 09:45:04,533 - DEBUG :     - Show last error
2021-07-27 09:45:04,533 - DEBUG :     - About PyXLL...
2021-07-27 09:45:04,533 - DEBUG :   - PyXLL example menu
2021-07-27 09:45:04,533 - DEBUG :     - Click me
2021-07-27 09:45:04,551 - DEBUG : Finished binding Python functions
2021-07-27 09:45:04,551 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 09:45:06,504 - DEBUG : pyxll._post_open complete.
2021-07-27 09:45:06,505 - DEBUG : PyXLL initialization complete.
2021-07-27 09:45:06,507 - DEBUG : Loading PyXLL COM Addin
2021-07-27 09:45:06,507 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 09:45:06,508 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 09:45:06,571 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:09:53,885 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:09:53,885 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:09:53,885 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:09:53,885 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:09:53,885 - DEBUG : -------- PyXLL config --------
2021-07-27 10:09:53,885 - DEBUG : [LOG]
2021-07-27 10:09:53,885 - DEBUG : encoding = utf-8
2021-07-27 10:09:53,885 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:09:53,885 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:09:53,885 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:09:53,885 - DEBUG : verbosity = debug
2021-07-27 10:09:53,885 - DEBUG : 
2021-07-27 10:09:53,885 - DEBUG : [PYTHON]
2021-07-27 10:09:53,885 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:09:53,885 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:09:53,885 - DEBUG : 
2021-07-27 10:09:53,885 - DEBUG : [PYXLL]
2021-07-27 10:09:53,885 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:09:53,885 - DEBUG : developer_mode = 1
2021-07-27 10:09:53,885 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:09:53,889 - DEBUG : modules = 
2021-07-27 10:09:53,889 - DEBUG :     misc
2021-07-27 10:09:53,889 - DEBUG :     worksheetfuncs
2021-07-27 10:09:53,889 - DEBUG :     menus
2021-07-27 10:09:53,889 - DEBUG :     callbacks
2021-07-27 10:09:53,889 - DEBUG :     custom_task_panes
2021-07-27 10:09:53,889 - DEBUG :     test
2021-07-27 10:09:53,889 - DEBUG :     ribbon_functions
2021-07-27 10:09:53,889 - DEBUG :     debugging
2021-07-27 10:09:53,889 - DEBUG :     meta_variables
2021-07-27 10:09:53,889 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:09:53,889 - DEBUG : ------------------------------
2021-07-27 10:09:53,889 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:09:53,889 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:09:53,889 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:09:53,891 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:09:53,893 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:09:53,894 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:09:53,895 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:09:53,966 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 10:09:53,966 - DEBUG : Reloading misc
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:09:53,966 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:09:53,966 - DEBUG : Reloaded misc
2021-07-27 10:09:53,966 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:09:53,978 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:09:53,978 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:09:53,978 - DEBUG : Reloading menus
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:09:53,978 - DEBUG : Reloaded menus
2021-07-27 10:09:53,978 - DEBUG : Reloading callbacks
2021-07-27 10:09:53,978 - DEBUG : Reloaded callbacks
2021-07-27 10:09:53,978 - DEBUG : Reloading custom_task_panes
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:09:53,978 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:09:53,978 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:09:53,978 - DEBUG : Reloading test
2021-07-27 10:09:53,978 - DEBUG : Reloaded test
2021-07-27 10:09:53,978 - DEBUG : Reloading meta_variables
2021-07-27 10:09:53,994 - ERROR : Error reloading 'meta_variables'
Traceback (most recent call last):
  File "build/x64/py38/res/release/pyxll.py", line 835, in _open
  File "build/x64/py38/res/release/pyxll.py", line 8047, in reload
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\imp.py", line 314, in reload
    return importlib.reload(module)
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\importlib\__init__.py", line 169, in reload
    _bootstrap._exec(spec, module)
  File "<frozen importlib._bootstrap>", line 604, in _exec
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 232
    frame = ErrorFrame(master=window, text)
                                      ^
SyntaxError: positional argument follows keyword argument
2021-07-27 10:09:54,039 - ERROR : Not reloading dependency error_functions because of previous failure to reload meta_variables
2021-07-27 10:09:54,039 - ERROR : Not reloading dependency tkinter_frames because of previous failure to reload meta_variables
2021-07-27 10:09:54,040 - ERROR : Not reloading dependency examples.tkinter_frames because of previous failure to reload meta_variables
2021-07-27 10:09:54,040 - DEBUG : Reloading dependency examples
2021-07-27 10:09:54,040 - DEBUG : Reloaded dependency examples
2021-07-27 10:09:54,040 - ERROR : Not reloading ribbon_functions because of previous failure to reload meta_variables
2021-07-27 10:09:54,045 - DEBUG : Reloading debugging
2021-07-27 10:09:54,047 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:09:54,047 - DEBUG : Reloaded debugging
2021-07-27 10:09:57,829 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:09:57,837 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:09:57,856 - INFO : This product is licensed to 
2021-07-27 10:09:57,856 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:09:57,859 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:09:57,859 - DEBUG : Binding Python functions to Excel
2021-07-27 10:09:57,859 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:09:57,859 - DEBUG :     - one_cell_one_sim
2021-07-27 10:09:57,860 - DEBUG :     - one_row_one_sim
2021-07-27 10:09:57,860 - DEBUG :     - pyxll_version
2021-07-27 10:09:57,860 - DEBUG :     - python_version
2021-07-27 10:09:57,860 - DEBUG :     - win32api_is_installed
2021-07-27 10:09:57,860 - DEBUG :     - win32com_is_installed
2021-07-27 10:09:57,860 - DEBUG :     - numpy_is_installed
2021-07-27 10:09:57,861 - DEBUG :     - pyxll_logfile
2021-07-27 10:09:57,861 - DEBUG :     - get_formula
2021-07-27 10:09:57,861 - DEBUG :     - get_array_formula
2021-07-27 10:09:57,861 - DEBUG :     - get_last_error
2021-07-27 10:09:57,862 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:09:57,862 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:09:57,862 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:09:57,862 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:09:57,863 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:09:57,863 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:09:57,863 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:09:57,863 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:09:57,863 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:09:57,863 - DEBUG :     - xl_cell_example
2021-07-27 10:09:57,863 - DEBUG :     - recalc_on_open_test
2021-07-27 10:09:57,863 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:09:57,864 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:09:57,867 - DEBUG : Adding menus to Excel:
2021-07-27 10:09:57,867 - DEBUG :   - PyXLL
2021-07-27 10:09:57,867 - DEBUG :     - Reload PyXLL
2021-07-27 10:09:57,867 - DEBUG :     - Another example menu item
2021-07-27 10:09:57,867 - DEBUG :     - More Examples
2021-07-27 10:09:57,867 - DEBUG :       - Click me
2021-07-27 10:09:57,867 - DEBUG :       - Unicode Test
2021-07-27 10:09:57,867 - DEBUG :     - Open log file
2021-07-27 10:09:57,867 - DEBUG :     - Attach To VS Code
2021-07-27 10:09:57,867 - DEBUG :     - Custom Task Panes
2021-07-27 10:09:57,867 - DEBUG :       - Qt
2021-07-27 10:09:57,867 - DEBUG :       - Tk
2021-07-27 10:09:57,867 - DEBUG :       - Wx
2021-07-27 10:09:57,867 - DEBUG :     - Example Menu Item 1
2021-07-27 10:09:57,867 - DEBUG :     - Show last error
2021-07-27 10:09:57,867 - DEBUG :     - About PyXLL...
2021-07-27 10:09:57,867 - DEBUG :   - PyXLL example menu
2021-07-27 10:09:57,867 - DEBUG :     - Click me
2021-07-27 10:09:57,874 - DEBUG : Finished binding Python functions
2021-07-27 10:09:57,874 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:09:57,874 - ERROR : Error loading 'meta_variables' : positional argument follows keyword argument (meta_variables.py, line 232)
2021-07-27 10:09:57,875 - DEBUG : pyxll._post_open complete.
2021-07-27 10:09:57,876 - DEBUG : PyXLL initialization complete.
2021-07-27 10:09:57,879 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:09:57,879 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:09:57,880 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:09:57,948 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:10:15,867 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:10:15,870 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:10:15,870 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:10:15,870 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:10:15,870 - DEBUG : -------- PyXLL config --------
2021-07-27 10:10:15,870 - DEBUG : [LOG]
2021-07-27 10:10:15,870 - DEBUG : encoding = utf-8
2021-07-27 10:10:15,870 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:10:15,870 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:10:15,870 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:10:15,870 - DEBUG : verbosity = debug
2021-07-27 10:10:15,870 - DEBUG : 
2021-07-27 10:10:15,870 - DEBUG : [PYTHON]
2021-07-27 10:10:15,870 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:10:15,870 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:10:15,870 - DEBUG : 
2021-07-27 10:10:15,870 - DEBUG : [PYXLL]
2021-07-27 10:10:15,870 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:10:15,870 - DEBUG : developer_mode = 1
2021-07-27 10:10:15,870 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:10:15,870 - DEBUG : modules = 
2021-07-27 10:10:15,870 - DEBUG :     misc
2021-07-27 10:10:15,870 - DEBUG :     worksheetfuncs
2021-07-27 10:10:15,870 - DEBUG :     menus
2021-07-27 10:10:15,870 - DEBUG :     callbacks
2021-07-27 10:10:15,870 - DEBUG :     custom_task_panes
2021-07-27 10:10:15,870 - DEBUG :     test
2021-07-27 10:10:15,870 - DEBUG :     ribbon_functions
2021-07-27 10:10:15,870 - DEBUG :     debugging
2021-07-27 10:10:15,870 - DEBUG :     meta_variables
2021-07-27 10:10:15,870 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:10:15,870 - DEBUG : ------------------------------
2021-07-27 10:10:15,870 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:10:15,871 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:10:15,871 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:10:15,873 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:10:15,875 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:10:15,876 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:10:15,876 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:10:15,940 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 10:10:15,940 - DEBUG : Reloading misc
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:10:15,941 - DEBUG : Reloaded misc
2021-07-27 10:10:15,941 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:10:15,941 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:10:15,947 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:10:15,947 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:10:15,948 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:10:15,948 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:10:15,948 - DEBUG : Reloading menus
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:10:15,948 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:10:15,948 - DEBUG : Reloaded menus
2021-07-27 10:10:15,948 - DEBUG : Reloading callbacks
2021-07-27 10:10:15,948 - DEBUG : Reloaded callbacks
2021-07-27 10:10:15,948 - DEBUG : Reloading custom_task_panes
2021-07-27 10:10:15,954 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:10:15,954 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:10:15,954 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:10:15,954 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:10:15,955 - DEBUG : Reloading test
2021-07-27 10:10:15,955 - DEBUG : Reloaded test
2021-07-27 10:10:15,956 - DEBUG : Reloading meta_variables
2021-07-27 10:10:15,957 - ERROR : Error reloading 'meta_variables'
Traceback (most recent call last):
  File "build/x64/py38/res/release/pyxll.py", line 835, in _open
  File "build/x64/py38/res/release/pyxll.py", line 8047, in reload
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\imp.py", line 314, in reload
    return importlib.reload(module)
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\importlib\__init__.py", line 169, in reload
    _bootstrap._exec(spec, module)
  File "<frozen importlib._bootstrap>", line 604, in _exec
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 232
    frame = ErrorFrame(master=window, text)
                                      ^
SyntaxError: positional argument follows keyword argument
2021-07-27 10:10:15,960 - ERROR : Not reloading dependency error_functions because of previous failure to reload meta_variables
2021-07-27 10:10:15,960 - ERROR : Not reloading dependency tkinter_frames because of previous failure to reload meta_variables
2021-07-27 10:10:15,960 - ERROR : Not reloading dependency examples.tkinter_frames because of previous failure to reload meta_variables
2021-07-27 10:10:15,960 - DEBUG : Reloading dependency examples
2021-07-27 10:10:15,962 - DEBUG : Reloaded dependency examples
2021-07-27 10:10:15,962 - ERROR : Not reloading ribbon_functions because of previous failure to reload meta_variables
2021-07-27 10:10:15,962 - DEBUG : Reloading debugging
2021-07-27 10:10:15,963 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:10:15,963 - DEBUG : Reloaded debugging
2021-07-27 10:10:19,237 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:10:19,240 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:10:19,263 - INFO : This product is licensed to 
2021-07-27 10:10:19,263 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:10:19,264 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:10:19,264 - DEBUG : Binding Python functions to Excel
2021-07-27 10:10:19,265 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:10:19,265 - DEBUG :     - one_cell_one_sim
2021-07-27 10:10:19,265 - DEBUG :     - one_row_one_sim
2021-07-27 10:10:19,265 - DEBUG :     - pyxll_version
2021-07-27 10:10:19,265 - DEBUG :     - python_version
2021-07-27 10:10:19,265 - DEBUG :     - win32api_is_installed
2021-07-27 10:10:19,266 - DEBUG :     - win32com_is_installed
2021-07-27 10:10:19,267 - DEBUG :     - numpy_is_installed
2021-07-27 10:10:19,267 - DEBUG :     - pyxll_logfile
2021-07-27 10:10:19,267 - DEBUG :     - get_formula
2021-07-27 10:10:19,267 - DEBUG :     - get_array_formula
2021-07-27 10:10:19,267 - DEBUG :     - get_last_error
2021-07-27 10:10:19,267 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:10:19,267 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:10:19,267 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:10:19,267 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:10:19,267 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:10:19,267 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:10:19,267 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:10:19,267 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:10:19,267 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:10:19,268 - DEBUG :     - xl_cell_example
2021-07-27 10:10:19,268 - DEBUG :     - recalc_on_open_test
2021-07-27 10:10:19,268 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:10:19,268 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:10:19,272 - DEBUG : Adding menus to Excel:
2021-07-27 10:10:19,272 - DEBUG :   - PyXLL
2021-07-27 10:10:19,272 - DEBUG :     - Reload PyXLL
2021-07-27 10:10:19,272 - DEBUG :     - Another example menu item
2021-07-27 10:10:19,272 - DEBUG :     - More Examples
2021-07-27 10:10:19,272 - DEBUG :       - Click me
2021-07-27 10:10:19,272 - DEBUG :       - Unicode Test
2021-07-27 10:10:19,272 - DEBUG :     - Open log file
2021-07-27 10:10:19,272 - DEBUG :     - Attach To VS Code
2021-07-27 10:10:19,272 - DEBUG :     - Custom Task Panes
2021-07-27 10:10:19,272 - DEBUG :       - Qt
2021-07-27 10:10:19,272 - DEBUG :       - Tk
2021-07-27 10:10:19,272 - DEBUG :       - Wx
2021-07-27 10:10:19,272 - DEBUG :     - Example Menu Item 1
2021-07-27 10:10:19,272 - DEBUG :     - Show last error
2021-07-27 10:10:19,272 - DEBUG :     - About PyXLL...
2021-07-27 10:10:19,272 - DEBUG :   - PyXLL example menu
2021-07-27 10:10:19,272 - DEBUG :     - Click me
2021-07-27 10:10:19,283 - DEBUG : Finished binding Python functions
2021-07-27 10:10:19,283 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:10:19,283 - ERROR : Error loading 'meta_variables' : positional argument follows keyword argument (meta_variables.py, line 232)
2021-07-27 10:10:19,283 - DEBUG : pyxll._post_open complete.
2021-07-27 10:10:19,284 - DEBUG : PyXLL initialization complete.
2021-07-27 10:10:19,288 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:10:19,288 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:10:19,289 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:10:19,348 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:10:34,836 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:10:34,837 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:10:34,837 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:10:34,837 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:10:34,837 - DEBUG : -------- PyXLL config --------
2021-07-27 10:10:34,837 - DEBUG : [LOG]
2021-07-27 10:10:34,837 - DEBUG : encoding = utf-8
2021-07-27 10:10:34,837 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:10:34,837 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:10:34,837 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:10:34,837 - DEBUG : verbosity = debug
2021-07-27 10:10:34,837 - DEBUG : 
2021-07-27 10:10:34,837 - DEBUG : [PYTHON]
2021-07-27 10:10:34,837 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:10:34,837 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:10:34,837 - DEBUG : 
2021-07-27 10:10:34,837 - DEBUG : [PYXLL]
2021-07-27 10:10:34,837 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:10:34,837 - DEBUG : developer_mode = 1
2021-07-27 10:10:34,837 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:10:34,837 - DEBUG : modules = 
2021-07-27 10:10:34,837 - DEBUG :     misc
2021-07-27 10:10:34,837 - DEBUG :     worksheetfuncs
2021-07-27 10:10:34,837 - DEBUG :     menus
2021-07-27 10:10:34,837 - DEBUG :     callbacks
2021-07-27 10:10:34,837 - DEBUG :     custom_task_panes
2021-07-27 10:10:34,837 - DEBUG :     test
2021-07-27 10:10:34,837 - DEBUG :     ribbon_functions
2021-07-27 10:10:34,837 - DEBUG :     debugging
2021-07-27 10:10:34,837 - DEBUG :     meta_variables
2021-07-27 10:10:34,837 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:10:34,837 - DEBUG : ------------------------------
2021-07-27 10:10:34,837 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:10:34,837 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:10:34,837 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:10:34,837 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:10:34,837 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:10:34,844 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:10:34,845 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:10:34,896 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-27 10:10:34,896 - DEBUG : Reloading misc
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:10:34,896 - DEBUG : Reloaded misc
2021-07-27 10:10:34,896 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:10:34,896 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:10:34,911 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:10:34,911 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:10:34,911 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:10:34,913 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:10:34,913 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:10:34,913 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:10:34,913 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:10:34,913 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:10:34,913 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:10:34,913 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:10:34,913 - DEBUG : Reloading menus
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:10:34,913 - DEBUG : Reloaded menus
2021-07-27 10:10:34,913 - DEBUG : Reloading callbacks
2021-07-27 10:10:34,913 - DEBUG : Reloaded callbacks
2021-07-27 10:10:34,913 - DEBUG : Reloading custom_task_panes
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:10:34,913 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:10:34,913 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:10:34,913 - DEBUG : Reloading test
2021-07-27 10:10:34,913 - DEBUG : Reloaded test
2021-07-27 10:10:34,913 - DEBUG : Reloading meta_variables
2021-07-27 10:10:34,931 - DEBUG : Reloaded meta_variables
2021-07-27 10:10:34,931 - DEBUG : Reloading dependency error_functions
2021-07-27 10:10:34,931 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:10:34,931 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:10:34,931 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:10:34,931 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:10:34,931 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:10:34,931 - DEBUG : Reloading dependency examples
2021-07-27 10:10:34,935 - DEBUG : Reloaded dependency examples
2021-07-27 10:10:34,936 - DEBUG : Reloading ribbon_functions
2021-07-27 10:10:34,959 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:10:34,960 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:10:34,960 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:10:34,960 - DEBUG : Reloading debugging
2021-07-27 10:10:34,961 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:10:34,961 - DEBUG : Reloaded debugging
2021-07-27 10:10:34,998 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:10:35,005 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:10:35,082 - INFO : This product is licensed to 
2021-07-27 10:10:35,082 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:10:35,090 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:10:35,090 - DEBUG : Binding Python functions to Excel
2021-07-27 10:10:35,090 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:10:35,090 - DEBUG :     - pyxll_version
2021-07-27 10:10:35,091 - DEBUG :     - python_version
2021-07-27 10:10:35,091 - DEBUG :     - win32api_is_installed
2021-07-27 10:10:35,091 - DEBUG :     - win32com_is_installed
2021-07-27 10:10:35,091 - DEBUG :     - numpy_is_installed
2021-07-27 10:10:35,091 - DEBUG :     - pyxll_logfile
2021-07-27 10:10:35,091 - DEBUG :     - get_formula
2021-07-27 10:10:35,091 - DEBUG :     - get_array_formula
2021-07-27 10:10:35,091 - DEBUG :     - get_last_error
2021-07-27 10:10:35,092 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:10:35,092 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:10:35,092 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:10:35,092 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:10:35,092 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:10:35,092 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:10:35,092 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:10:35,093 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:10:35,093 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:10:35,093 - DEBUG :     - xl_cell_example
2021-07-27 10:10:35,093 - DEBUG :     - recalc_on_open_test
2021-07-27 10:10:35,093 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:10:35,093 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:10:35,093 - DEBUG :     - one_cell_one_sim
2021-07-27 10:10:35,093 - DEBUG :     - one_row_one_sim
2021-07-27 10:10:35,096 - DEBUG : Adding menus to Excel:
2021-07-27 10:10:35,096 - DEBUG :   - PyXLL
2021-07-27 10:10:35,096 - DEBUG :     - Reload PyXLL
2021-07-27 10:10:35,096 - DEBUG :     - Another example menu item
2021-07-27 10:10:35,096 - DEBUG :     - More Examples
2021-07-27 10:10:35,096 - DEBUG :       - Click me
2021-07-27 10:10:35,096 - DEBUG :       - Unicode Test
2021-07-27 10:10:35,096 - DEBUG :     - Open log file
2021-07-27 10:10:35,096 - DEBUG :     - Attach To VS Code
2021-07-27 10:10:35,096 - DEBUG :     - Custom Task Panes
2021-07-27 10:10:35,096 - DEBUG :       - Qt
2021-07-27 10:10:35,096 - DEBUG :       - Tk
2021-07-27 10:10:35,096 - DEBUG :       - Wx
2021-07-27 10:10:35,096 - DEBUG :     - Example Menu Item 1
2021-07-27 10:10:35,096 - DEBUG :     - Show last error
2021-07-27 10:10:35,096 - DEBUG :     - About PyXLL...
2021-07-27 10:10:35,096 - DEBUG :   - PyXLL example menu
2021-07-27 10:10:35,096 - DEBUG :     - Click me
2021-07-27 10:10:35,104 - DEBUG : Finished binding Python functions
2021-07-27 10:10:35,104 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:10:35,916 - DEBUG : pyxll._post_open complete.
2021-07-27 10:10:35,916 - DEBUG : PyXLL initialization complete.
2021-07-27 10:10:35,918 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:10:35,919 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:10:35,919 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:10:35,971 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:10:44,282 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:10:57,795 - ERROR : Traceback (most recent call last):
2021-07-27 10:10:57,797 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 310, in distribution_info
2021-07-27 10:10:57,798 - ERROR :     cell_info = cell_data(control=control, cell_location=xl.Selection)
2021-07-27 10:10:57,799 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 87, in cell_data
2021-07-27 10:10:57,800 - ERROR :     if re.search("[:,]", cell_location):
2021-07-27 10:10:57,800 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 199, in search
2021-07-27 10:10:57,802 - ERROR :     return _compile(pattern, flags).search(string)
2021-07-27 10:10:57,803 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 10:11:00,668 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:11:01,716 - ERROR : Traceback (most recent call last):
2021-07-27 10:11:01,716 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 310, in distribution_info
2021-07-27 10:11:01,717 - ERROR :     cell_info = cell_data(control=control, cell_location=xl.Selection)
2021-07-27 10:11:01,717 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 87, in cell_data
2021-07-27 10:11:01,718 - ERROR :     if re.search("[:,]", cell_location):
2021-07-27 10:11:01,718 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\re.py", line 199, in search
2021-07-27 10:11:01,720 - ERROR :     return _compile(pattern, flags).search(string)
2021-07-27 10:11:01,720 - ERROR : TypeError: expected string or bytes-like object
2021-07-27 10:11:31,166 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:11:31,166 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:11:31,166 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:11:31,166 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:11:31,166 - DEBUG : -------- PyXLL config --------
2021-07-27 10:11:31,166 - DEBUG : [LOG]
2021-07-27 10:11:31,166 - DEBUG : encoding = utf-8
2021-07-27 10:11:31,166 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:11:31,166 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:11:31,166 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:11:31,166 - DEBUG : verbosity = debug
2021-07-27 10:11:31,166 - DEBUG : 
2021-07-27 10:11:31,166 - DEBUG : [PYTHON]
2021-07-27 10:11:31,166 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:11:31,166 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:11:31,166 - DEBUG : 
2021-07-27 10:11:31,166 - DEBUG : [PYXLL]
2021-07-27 10:11:31,166 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:11:31,166 - DEBUG : developer_mode = 1
2021-07-27 10:11:31,166 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:11:31,166 - DEBUG : modules = 
2021-07-27 10:11:31,169 - DEBUG :     misc
2021-07-27 10:11:31,169 - DEBUG :     worksheetfuncs
2021-07-27 10:11:31,169 - DEBUG :     menus
2021-07-27 10:11:31,169 - DEBUG :     callbacks
2021-07-27 10:11:31,169 - DEBUG :     custom_task_panes
2021-07-27 10:11:31,169 - DEBUG :     test
2021-07-27 10:11:31,169 - DEBUG :     ribbon_functions
2021-07-27 10:11:31,169 - DEBUG :     debugging
2021-07-27 10:11:31,169 - DEBUG :     meta_variables
2021-07-27 10:11:31,169 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:11:31,169 - DEBUG : ------------------------------
2021-07-27 10:11:31,169 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:11:31,169 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:11:31,169 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:11:31,170 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:11:31,170 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:11:31,170 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:11:31,170 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:11:31,233 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:11:31,233 - DEBUG : Reloading misc
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:11:31,234 - DEBUG : Reloaded misc
2021-07-27 10:11:31,234 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:11:31,234 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:11:31,243 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:11:31,243 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:11:31,243 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:11:31,244 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:11:31,244 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:11:31,244 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:11:31,244 - DEBUG : Reloading menus
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:11:31,244 - DEBUG : Reloaded menus
2021-07-27 10:11:31,244 - DEBUG : Reloading callbacks
2021-07-27 10:11:31,244 - DEBUG : Reloaded callbacks
2021-07-27 10:11:31,244 - DEBUG : Reloading custom_task_panes
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:11:31,244 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:11:31,244 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:11:31,244 - DEBUG : Reloading test
2021-07-27 10:11:31,244 - DEBUG : Reloaded test
2021-07-27 10:11:31,244 - DEBUG : Reloading meta_variables
2021-07-27 10:11:31,251 - DEBUG : Reloaded meta_variables
2021-07-27 10:11:31,251 - DEBUG : Reloading dependency error_functions
2021-07-27 10:11:31,252 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:11:31,252 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:11:31,252 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:11:31,252 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:11:31,252 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:11:31,252 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:11:31,252 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:11:31,252 - DEBUG : Reloading dependency examples
2021-07-27 10:11:31,252 - DEBUG : Reloaded dependency examples
2021-07-27 10:11:31,252 - DEBUG : Reloading ribbon_functions
2021-07-27 10:11:31,294 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:11:31,294 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:11:31,294 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:11:31,294 - DEBUG : Reloading debugging
2021-07-27 10:11:31,294 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:11:31,294 - DEBUG : Reloaded debugging
2021-07-27 10:11:31,337 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:11:31,338 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:11:31,360 - INFO : This product is licensed to 
2021-07-27 10:11:31,360 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:11:31,364 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:11:31,364 - DEBUG : Binding Python functions to Excel
2021-07-27 10:11:31,364 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:11:31,364 - DEBUG :     - pyxll_version
2021-07-27 10:11:31,364 - DEBUG :     - python_version
2021-07-27 10:11:31,364 - DEBUG :     - win32api_is_installed
2021-07-27 10:11:31,365 - DEBUG :     - win32com_is_installed
2021-07-27 10:11:31,365 - DEBUG :     - numpy_is_installed
2021-07-27 10:11:31,365 - DEBUG :     - pyxll_logfile
2021-07-27 10:11:31,365 - DEBUG :     - get_formula
2021-07-27 10:11:31,365 - DEBUG :     - get_array_formula
2021-07-27 10:11:31,365 - DEBUG :     - get_last_error
2021-07-27 10:11:31,365 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:11:31,365 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:11:31,366 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:11:31,366 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:11:31,366 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:11:31,366 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:11:31,366 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:11:31,366 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:11:31,366 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:11:31,366 - DEBUG :     - xl_cell_example
2021-07-27 10:11:31,366 - DEBUG :     - recalc_on_open_test
2021-07-27 10:11:31,366 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:11:31,367 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:11:31,367 - DEBUG :     - one_cell_one_sim
2021-07-27 10:11:31,367 - DEBUG :     - one_row_one_sim
2021-07-27 10:11:31,369 - DEBUG : Adding menus to Excel:
2021-07-27 10:11:31,369 - DEBUG :   - PyXLL
2021-07-27 10:11:31,369 - DEBUG :     - Reload PyXLL
2021-07-27 10:11:31,369 - DEBUG :     - Another example menu item
2021-07-27 10:11:31,369 - DEBUG :     - More Examples
2021-07-27 10:11:31,369 - DEBUG :       - Click me
2021-07-27 10:11:31,369 - DEBUG :       - Unicode Test
2021-07-27 10:11:31,369 - DEBUG :     - Open log file
2021-07-27 10:11:31,369 - DEBUG :     - Attach To VS Code
2021-07-27 10:11:31,369 - DEBUG :     - Custom Task Panes
2021-07-27 10:11:31,369 - DEBUG :       - Qt
2021-07-27 10:11:31,369 - DEBUG :       - Tk
2021-07-27 10:11:31,369 - DEBUG :       - Wx
2021-07-27 10:11:31,369 - DEBUG :     - Example Menu Item 1
2021-07-27 10:11:31,369 - DEBUG :     - Show last error
2021-07-27 10:11:31,369 - DEBUG :     - About PyXLL...
2021-07-27 10:11:31,369 - DEBUG :   - PyXLL example menu
2021-07-27 10:11:31,369 - DEBUG :     - Click me
2021-07-27 10:11:31,376 - DEBUG : Finished binding Python functions
2021-07-27 10:11:31,376 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:11:32,120 - DEBUG : pyxll._post_open complete.
2021-07-27 10:11:32,120 - DEBUG : PyXLL initialization complete.
2021-07-27 10:11:32,122 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:11:32,122 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:11:32,123 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:11:32,177 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:11:34,196 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:11:43,402 - ERROR : Traceback (most recent call last):
2021-07-27 10:11:43,402 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 312, in distribution_info
2021-07-27 10:11:43,403 - ERROR :     distr_id = cell_info[-1]
2021-07-27 10:11:43,404 - ERROR : KeyError: -1
2021-07-27 10:12:38,696 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:12:38,697 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:12:38,697 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:12:38,697 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:12:38,697 - DEBUG : -------- PyXLL config --------
2021-07-27 10:12:38,697 - DEBUG : [LOG]
2021-07-27 10:12:38,697 - DEBUG : encoding = utf-8
2021-07-27 10:12:38,697 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:12:38,697 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:12:38,697 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:12:38,697 - DEBUG : verbosity = debug
2021-07-27 10:12:38,697 - DEBUG : 
2021-07-27 10:12:38,697 - DEBUG : [PYTHON]
2021-07-27 10:12:38,697 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:12:38,697 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:12:38,697 - DEBUG : 
2021-07-27 10:12:38,697 - DEBUG : [PYXLL]
2021-07-27 10:12:38,697 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:12:38,697 - DEBUG : developer_mode = 1
2021-07-27 10:12:38,697 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:12:38,697 - DEBUG : modules = 
2021-07-27 10:12:38,700 - DEBUG :     misc
2021-07-27 10:12:38,700 - DEBUG :     worksheetfuncs
2021-07-27 10:12:38,700 - DEBUG :     menus
2021-07-27 10:12:38,700 - DEBUG :     callbacks
2021-07-27 10:12:38,700 - DEBUG :     custom_task_panes
2021-07-27 10:12:38,700 - DEBUG :     test
2021-07-27 10:12:38,700 - DEBUG :     ribbon_functions
2021-07-27 10:12:38,700 - DEBUG :     debugging
2021-07-27 10:12:38,700 - DEBUG :     meta_variables
2021-07-27 10:12:38,700 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:12:38,700 - DEBUG : ------------------------------
2021-07-27 10:12:38,700 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:12:38,700 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:12:38,700 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:12:38,701 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:12:38,703 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:12:38,704 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:12:38,705 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:12:38,755 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:12:38,755 - DEBUG : Reloading misc
2021-07-27 10:12:38,755 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:12:38,755 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:12:38,755 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:12:38,755 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:12:38,755 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:12:38,761 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:12:38,761 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:12:38,762 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:12:38,762 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:12:38,763 - DEBUG : Reloaded misc
2021-07-27 10:12:38,763 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:12:38,763 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:12:38,764 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:12:38,764 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:12:38,764 - DEBUG : Reloading menus
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:12:38,764 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:12:38,764 - DEBUG : Reloaded menus
2021-07-27 10:12:38,764 - DEBUG : Reloading callbacks
2021-07-27 10:12:38,773 - DEBUG : Reloaded callbacks
2021-07-27 10:12:38,773 - DEBUG : Reloading custom_task_panes
2021-07-27 10:12:38,774 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:12:38,774 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:12:38,774 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:12:38,774 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:12:38,774 - DEBUG : Reloading test
2021-07-27 10:12:38,775 - DEBUG : Reloaded test
2021-07-27 10:12:38,775 - DEBUG : Reloading meta_variables
2021-07-27 10:12:38,776 - DEBUG : Reloaded meta_variables
2021-07-27 10:12:38,776 - DEBUG : Reloading dependency error_functions
2021-07-27 10:12:38,777 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:12:38,777 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:12:38,777 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:12:38,777 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:12:38,777 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:12:38,777 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:12:38,777 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:12:38,781 - DEBUG : Reloading dependency examples
2021-07-27 10:12:38,782 - DEBUG : Reloaded dependency examples
2021-07-27 10:12:38,782 - DEBUG : Reloading ribbon_functions
2021-07-27 10:12:38,801 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:12:38,802 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:12:38,802 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:12:38,803 - DEBUG : Reloading debugging
2021-07-27 10:12:38,804 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:12:38,804 - DEBUG : Reloaded debugging
2021-07-27 10:12:38,842 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:12:38,851 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:12:38,867 - INFO : This product is licensed to 
2021-07-27 10:12:38,867 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:12:38,870 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:12:38,870 - DEBUG : Binding Python functions to Excel
2021-07-27 10:12:38,870 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:12:38,870 - DEBUG :     - pyxll_version
2021-07-27 10:12:38,870 - DEBUG :     - python_version
2021-07-27 10:12:38,870 - DEBUG :     - win32api_is_installed
2021-07-27 10:12:38,871 - DEBUG :     - win32com_is_installed
2021-07-27 10:12:38,871 - DEBUG :     - numpy_is_installed
2021-07-27 10:12:38,871 - DEBUG :     - pyxll_logfile
2021-07-27 10:12:38,871 - DEBUG :     - get_formula
2021-07-27 10:12:38,871 - DEBUG :     - get_array_formula
2021-07-27 10:12:38,871 - DEBUG :     - get_last_error
2021-07-27 10:12:38,871 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:12:38,871 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:12:38,873 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:12:38,873 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:12:38,873 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:12:38,873 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:12:38,873 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:12:38,873 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:12:38,873 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:12:38,873 - DEBUG :     - xl_cell_example
2021-07-27 10:12:38,873 - DEBUG :     - recalc_on_open_test
2021-07-27 10:12:38,874 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:12:38,874 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:12:38,874 - DEBUG :     - one_cell_one_sim
2021-07-27 10:12:38,874 - DEBUG :     - one_row_one_sim
2021-07-27 10:12:38,876 - DEBUG : Adding menus to Excel:
2021-07-27 10:12:38,876 - DEBUG :   - PyXLL
2021-07-27 10:12:38,876 - DEBUG :     - Reload PyXLL
2021-07-27 10:12:38,876 - DEBUG :     - Another example menu item
2021-07-27 10:12:38,876 - DEBUG :     - More Examples
2021-07-27 10:12:38,876 - DEBUG :       - Click me
2021-07-27 10:12:38,876 - DEBUG :       - Unicode Test
2021-07-27 10:12:38,876 - DEBUG :     - Open log file
2021-07-27 10:12:38,876 - DEBUG :     - Attach To VS Code
2021-07-27 10:12:38,876 - DEBUG :     - Custom Task Panes
2021-07-27 10:12:38,876 - DEBUG :       - Qt
2021-07-27 10:12:38,876 - DEBUG :       - Tk
2021-07-27 10:12:38,876 - DEBUG :       - Wx
2021-07-27 10:12:38,876 - DEBUG :     - Example Menu Item 1
2021-07-27 10:12:38,876 - DEBUG :     - Show last error
2021-07-27 10:12:38,876 - DEBUG :     - About PyXLL...
2021-07-27 10:12:38,876 - DEBUG :   - PyXLL example menu
2021-07-27 10:12:38,876 - DEBUG :     - Click me
2021-07-27 10:12:38,884 - DEBUG : Finished binding Python functions
2021-07-27 10:12:38,884 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:12:39,465 - DEBUG : pyxll._post_open complete.
2021-07-27 10:12:39,465 - DEBUG : PyXLL initialization complete.
2021-07-27 10:12:39,468 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:12:39,468 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:12:39,469 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:12:39,532 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:12:41,663 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:12:48,122 - ERROR : Traceback (most recent call last):
2021-07-27 10:12:48,123 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 322, in distribution_info
2021-07-27 10:12:48,124 - ERROR :     text = "Distribution parameters: " + distr_params + "\n" + "Input parameters: " + ", ".join(params)
2021-07-27 10:12:48,125 - ERROR : TypeError: sequence item 0: expected str instance, float found
2021-07-27 10:13:02,114 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:13:02,117 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:13:02,117 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:13:02,117 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:13:02,117 - DEBUG : -------- PyXLL config --------
2021-07-27 10:13:02,117 - DEBUG : [LOG]
2021-07-27 10:13:02,117 - DEBUG : encoding = utf-8
2021-07-27 10:13:02,117 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:13:02,117 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:13:02,117 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:13:02,117 - DEBUG : verbosity = debug
2021-07-27 10:13:02,117 - DEBUG : 
2021-07-27 10:13:02,117 - DEBUG : [PYTHON]
2021-07-27 10:13:02,117 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:13:02,117 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:13:02,117 - DEBUG : 
2021-07-27 10:13:02,117 - DEBUG : [PYXLL]
2021-07-27 10:13:02,117 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:13:02,118 - DEBUG : developer_mode = 1
2021-07-27 10:13:02,118 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:13:02,118 - DEBUG : modules = 
2021-07-27 10:13:02,118 - DEBUG :     misc
2021-07-27 10:13:02,118 - DEBUG :     worksheetfuncs
2021-07-27 10:13:02,118 - DEBUG :     menus
2021-07-27 10:13:02,118 - DEBUG :     callbacks
2021-07-27 10:13:02,118 - DEBUG :     custom_task_panes
2021-07-27 10:13:02,118 - DEBUG :     test
2021-07-27 10:13:02,118 - DEBUG :     ribbon_functions
2021-07-27 10:13:02,118 - DEBUG :     debugging
2021-07-27 10:13:02,118 - DEBUG :     meta_variables
2021-07-27 10:13:02,118 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:13:02,118 - DEBUG : ------------------------------
2021-07-27 10:13:02,118 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:13:02,118 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:13:02,118 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:13:02,119 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:13:02,122 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:13:02,123 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:13:02,123 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:13:02,183 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:13:02,183 - DEBUG : Reloading misc
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:13:02,183 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:13:02,183 - DEBUG : Reloaded misc
2021-07-27 10:13:02,189 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:13:02,190 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:13:02,190 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:13:02,190 - DEBUG : Reloading menus
2021-07-27 10:13:02,190 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:13:02,190 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:13:02,197 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:13:02,197 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:13:02,197 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:13:02,197 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:13:02,197 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:13:02,197 - DEBUG : Reloaded menus
2021-07-27 10:13:02,198 - DEBUG : Reloading callbacks
2021-07-27 10:13:02,198 - DEBUG : Reloaded callbacks
2021-07-27 10:13:02,198 - DEBUG : Reloading custom_task_panes
2021-07-27 10:13:02,199 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:13:02,199 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:13:02,199 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:13:02,200 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:13:02,200 - DEBUG : Reloading test
2021-07-27 10:13:02,200 - DEBUG : Reloaded test
2021-07-27 10:13:02,200 - DEBUG : Reloading meta_variables
2021-07-27 10:13:02,200 - DEBUG : Reloaded meta_variables
2021-07-27 10:13:02,200 - DEBUG : Reloading dependency error_functions
2021-07-27 10:13:02,200 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:13:02,200 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:13:02,200 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:13:02,200 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:13:02,205 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:13:02,205 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:13:02,206 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:13:02,206 - DEBUG : Reloading dependency examples
2021-07-27 10:13:02,206 - DEBUG : Reloaded dependency examples
2021-07-27 10:13:02,206 - DEBUG : Reloading ribbon_functions
2021-07-27 10:13:02,246 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:13:02,246 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:13:02,246 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:13:02,246 - DEBUG : Reloading debugging
2021-07-27 10:13:02,246 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:13:02,251 - DEBUG : Reloaded debugging
2021-07-27 10:13:02,292 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:13:02,298 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:13:02,317 - INFO : This product is licensed to 
2021-07-27 10:13:02,317 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:13:02,318 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:13:02,318 - DEBUG : Binding Python functions to Excel
2021-07-27 10:13:02,318 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:13:02,318 - DEBUG :     - pyxll_version
2021-07-27 10:13:02,318 - DEBUG :     - python_version
2021-07-27 10:13:02,319 - DEBUG :     - win32api_is_installed
2021-07-27 10:13:02,319 - DEBUG :     - win32com_is_installed
2021-07-27 10:13:02,319 - DEBUG :     - numpy_is_installed
2021-07-27 10:13:02,319 - DEBUG :     - pyxll_logfile
2021-07-27 10:13:02,319 - DEBUG :     - get_formula
2021-07-27 10:13:02,319 - DEBUG :     - get_array_formula
2021-07-27 10:13:02,319 - DEBUG :     - get_last_error
2021-07-27 10:13:02,319 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:13:02,319 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:13:02,320 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:13:02,320 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:13:02,320 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:13:02,320 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:13:02,320 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:13:02,320 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:13:02,320 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:13:02,320 - DEBUG :     - xl_cell_example
2021-07-27 10:13:02,320 - DEBUG :     - recalc_on_open_test
2021-07-27 10:13:02,320 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:13:02,320 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:13:02,320 - DEBUG :     - one_cell_one_sim
2021-07-27 10:13:02,322 - DEBUG :     - one_row_one_sim
2021-07-27 10:13:02,324 - DEBUG : Adding menus to Excel:
2021-07-27 10:13:02,324 - DEBUG :   - PyXLL
2021-07-27 10:13:02,324 - DEBUG :     - Reload PyXLL
2021-07-27 10:13:02,324 - DEBUG :     - Another example menu item
2021-07-27 10:13:02,324 - DEBUG :     - More Examples
2021-07-27 10:13:02,324 - DEBUG :       - Click me
2021-07-27 10:13:02,324 - DEBUG :       - Unicode Test
2021-07-27 10:13:02,324 - DEBUG :     - Open log file
2021-07-27 10:13:02,324 - DEBUG :     - Attach To VS Code
2021-07-27 10:13:02,324 - DEBUG :     - Custom Task Panes
2021-07-27 10:13:02,324 - DEBUG :       - Qt
2021-07-27 10:13:02,324 - DEBUG :       - Tk
2021-07-27 10:13:02,324 - DEBUG :       - Wx
2021-07-27 10:13:02,324 - DEBUG :     - Example Menu Item 1
2021-07-27 10:13:02,324 - DEBUG :     - Show last error
2021-07-27 10:13:02,324 - DEBUG :     - About PyXLL...
2021-07-27 10:13:02,324 - DEBUG :   - PyXLL example menu
2021-07-27 10:13:02,324 - DEBUG :     - Click me
2021-07-27 10:13:02,332 - DEBUG : Finished binding Python functions
2021-07-27 10:13:02,333 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:13:03,045 - DEBUG : pyxll._post_open complete.
2021-07-27 10:13:03,045 - DEBUG : PyXLL initialization complete.
2021-07-27 10:13:03,047 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:13:03,047 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:13:03,049 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:13:03,107 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:13:05,445 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:13:08,945 - ERROR : Traceback (most recent call last):
2021-07-27 10:13:08,946 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 324, in distribution_info
2021-07-27 10:13:08,947 - ERROR :     popupWindow(control=control, text=text, title=title)
2021-07-27 10:13:08,947 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 232, in popupWindow
2021-07-27 10:13:08,948 - ERROR :     frame = ErrorFrame(master=window, text=text)
2021-07-27 10:13:08,949 - ERROR : TypeError: __init__() got an unexpected keyword argument 'text'
2021-07-27 10:13:40,162 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:13:40,162 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:13:40,162 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:13:40,162 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:13:40,162 - DEBUG : -------- PyXLL config --------
2021-07-27 10:13:40,162 - DEBUG : [LOG]
2021-07-27 10:13:40,162 - DEBUG : encoding = utf-8
2021-07-27 10:13:40,162 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:13:40,162 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:13:40,162 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:13:40,162 - DEBUG : verbosity = debug
2021-07-27 10:13:40,162 - DEBUG : 
2021-07-27 10:13:40,162 - DEBUG : [PYTHON]
2021-07-27 10:13:40,162 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:13:40,162 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:13:40,162 - DEBUG : 
2021-07-27 10:13:40,162 - DEBUG : [PYXLL]
2021-07-27 10:13:40,162 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:13:40,162 - DEBUG : developer_mode = 1
2021-07-27 10:13:40,162 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:13:40,162 - DEBUG : modules = 
2021-07-27 10:13:40,162 - DEBUG :     misc
2021-07-27 10:13:40,162 - DEBUG :     worksheetfuncs
2021-07-27 10:13:40,162 - DEBUG :     menus
2021-07-27 10:13:40,162 - DEBUG :     callbacks
2021-07-27 10:13:40,162 - DEBUG :     custom_task_panes
2021-07-27 10:13:40,162 - DEBUG :     test
2021-07-27 10:13:40,162 - DEBUG :     ribbon_functions
2021-07-27 10:13:40,162 - DEBUG :     debugging
2021-07-27 10:13:40,162 - DEBUG :     meta_variables
2021-07-27 10:13:40,162 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:13:40,162 - DEBUG : ------------------------------
2021-07-27 10:13:40,162 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:13:40,162 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:13:40,162 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:13:40,162 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:13:40,162 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:13:40,162 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:13:40,162 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:13:40,212 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:13:40,212 - DEBUG : Reloading misc
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:13:40,212 - DEBUG : Reloaded misc
2021-07-27 10:13:40,212 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:13:40,212 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:13:40,228 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:13:40,228 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:13:40,228 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:13:40,228 - DEBUG : Reloading menus
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:13:40,229 - DEBUG : Reloaded menus
2021-07-27 10:13:40,229 - DEBUG : Reloading callbacks
2021-07-27 10:13:40,229 - DEBUG : Reloaded callbacks
2021-07-27 10:13:40,229 - DEBUG : Reloading custom_task_panes
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:13:40,229 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:13:40,229 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:13:40,229 - DEBUG : Reloading test
2021-07-27 10:13:40,229 - DEBUG : Reloaded test
2021-07-27 10:13:40,229 - DEBUG : Reloading meta_variables
2021-07-27 10:13:40,229 - DEBUG : Reloaded meta_variables
2021-07-27 10:13:40,229 - DEBUG : Reloading dependency error_functions
2021-07-27 10:13:40,229 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:13:40,229 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:13:40,229 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:13:40,229 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:13:40,229 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:13:40,229 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:13:40,229 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:13:40,229 - DEBUG : Reloading dependency examples
2021-07-27 10:13:40,229 - DEBUG : Reloaded dependency examples
2021-07-27 10:13:40,229 - DEBUG : Reloading ribbon_functions
2021-07-27 10:13:40,255 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:13:40,255 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:13:40,255 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:13:40,255 - DEBUG : Reloading debugging
2021-07-27 10:13:40,255 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:13:40,255 - DEBUG : Reloaded debugging
2021-07-27 10:13:40,308 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:13:40,308 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:13:40,326 - INFO : This product is licensed to 
2021-07-27 10:13:40,326 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:13:40,335 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:13:40,336 - DEBUG : Binding Python functions to Excel
2021-07-27 10:13:40,336 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:13:40,336 - DEBUG :     - pyxll_version
2021-07-27 10:13:40,336 - DEBUG :     - python_version
2021-07-27 10:13:40,336 - DEBUG :     - win32api_is_installed
2021-07-27 10:13:40,336 - DEBUG :     - win32com_is_installed
2021-07-27 10:13:40,336 - DEBUG :     - numpy_is_installed
2021-07-27 10:13:40,337 - DEBUG :     - pyxll_logfile
2021-07-27 10:13:40,338 - DEBUG :     - get_formula
2021-07-27 10:13:40,338 - DEBUG :     - get_array_formula
2021-07-27 10:13:40,338 - DEBUG :     - get_last_error
2021-07-27 10:13:40,338 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:13:40,338 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:13:40,338 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:13:40,338 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:13:40,338 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:13:40,338 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:13:40,339 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:13:40,339 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:13:40,339 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:13:40,339 - DEBUG :     - xl_cell_example
2021-07-27 10:13:40,339 - DEBUG :     - recalc_on_open_test
2021-07-27 10:13:40,339 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:13:40,339 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:13:40,339 - DEBUG :     - one_cell_one_sim
2021-07-27 10:13:40,339 - DEBUG :     - one_row_one_sim
2021-07-27 10:13:40,342 - DEBUG : Adding menus to Excel:
2021-07-27 10:13:40,342 - DEBUG :   - PyXLL
2021-07-27 10:13:40,342 - DEBUG :     - Reload PyXLL
2021-07-27 10:13:40,342 - DEBUG :     - Another example menu item
2021-07-27 10:13:40,342 - DEBUG :     - More Examples
2021-07-27 10:13:40,342 - DEBUG :       - Click me
2021-07-27 10:13:40,342 - DEBUG :       - Unicode Test
2021-07-27 10:13:40,342 - DEBUG :     - Open log file
2021-07-27 10:13:40,342 - DEBUG :     - Attach To VS Code
2021-07-27 10:13:40,342 - DEBUG :     - Custom Task Panes
2021-07-27 10:13:40,342 - DEBUG :       - Qt
2021-07-27 10:13:40,342 - DEBUG :       - Tk
2021-07-27 10:13:40,342 - DEBUG :       - Wx
2021-07-27 10:13:40,342 - DEBUG :     - Example Menu Item 1
2021-07-27 10:13:40,342 - DEBUG :     - Show last error
2021-07-27 10:13:40,342 - DEBUG :     - About PyXLL...
2021-07-27 10:13:40,342 - DEBUG :   - PyXLL example menu
2021-07-27 10:13:40,342 - DEBUG :     - Click me
2021-07-27 10:13:40,347 - DEBUG : Finished binding Python functions
2021-07-27 10:13:40,348 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:13:41,433 - DEBUG : pyxll._post_open complete.
2021-07-27 10:13:41,434 - DEBUG : PyXLL initialization complete.
2021-07-27 10:13:41,437 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:13:41,437 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:13:41,439 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:13:41,492 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:13:43,785 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:13:50,238 - ERROR : Traceback (most recent call last):
2021-07-27 10:13:50,238 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 324, in distribution_info
2021-07-27 10:13:50,239 - ERROR :     popupWindow(control=control, text=text, title=title)
2021-07-27 10:13:50,240 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 232, in popupWindow
2021-07-27 10:13:50,241 - ERROR :     frame = ErrorFrame(master=window, text=text)
2021-07-27 10:13:50,241 - ERROR : TypeError: __init__() got an unexpected keyword argument 'text'
2021-07-27 10:13:57,701 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:13:57,701 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:13:57,701 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:13:57,701 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:13:57,701 - DEBUG : -------- PyXLL config --------
2021-07-27 10:13:57,701 - DEBUG : [LOG]
2021-07-27 10:13:57,701 - DEBUG : encoding = utf-8
2021-07-27 10:13:57,701 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:13:57,701 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:13:57,701 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:13:57,701 - DEBUG : verbosity = debug
2021-07-27 10:13:57,701 - DEBUG : 
2021-07-27 10:13:57,701 - DEBUG : [PYTHON]
2021-07-27 10:13:57,701 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:13:57,701 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:13:57,701 - DEBUG : 
2021-07-27 10:13:57,701 - DEBUG : [PYXLL]
2021-07-27 10:13:57,701 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:13:57,701 - DEBUG : developer_mode = 1
2021-07-27 10:13:57,701 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:13:57,701 - DEBUG : modules = 
2021-07-27 10:13:57,701 - DEBUG :     misc
2021-07-27 10:13:57,701 - DEBUG :     worksheetfuncs
2021-07-27 10:13:57,701 - DEBUG :     menus
2021-07-27 10:13:57,701 - DEBUG :     callbacks
2021-07-27 10:13:57,701 - DEBUG :     custom_task_panes
2021-07-27 10:13:57,701 - DEBUG :     test
2021-07-27 10:13:57,704 - DEBUG :     ribbon_functions
2021-07-27 10:13:57,704 - DEBUG :     debugging
2021-07-27 10:13:57,704 - DEBUG :     meta_variables
2021-07-27 10:13:57,704 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:13:57,704 - DEBUG : ------------------------------
2021-07-27 10:13:57,704 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:13:57,704 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:13:57,704 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:13:57,705 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:13:57,708 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:13:57,709 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:13:57,710 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:13:57,761 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:13:57,761 - DEBUG : Reloading misc
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:13:57,761 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:13:57,777 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:13:57,777 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:13:57,777 - DEBUG : Reloaded misc
2021-07-27 10:13:57,777 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:13:57,778 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:13:57,779 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:13:57,779 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:13:57,779 - DEBUG : Reloading menus
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:13:57,779 - DEBUG : Reloaded menus
2021-07-27 10:13:57,779 - DEBUG : Reloading callbacks
2021-07-27 10:13:57,779 - DEBUG : Reloaded callbacks
2021-07-27 10:13:57,779 - DEBUG : Reloading custom_task_panes
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:13:57,779 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:13:57,789 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:13:57,789 - DEBUG : Reloading test
2021-07-27 10:13:57,790 - DEBUG : Reloaded test
2021-07-27 10:13:57,790 - DEBUG : Reloading meta_variables
2021-07-27 10:13:57,800 - DEBUG : Reloaded meta_variables
2021-07-27 10:13:57,800 - DEBUG : Reloading dependency error_functions
2021-07-27 10:13:57,801 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:13:57,801 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:13:57,801 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:13:57,801 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:13:57,801 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:13:57,801 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:13:57,808 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:13:57,808 - DEBUG : Reloading dependency examples
2021-07-27 10:13:57,810 - DEBUG : Reloaded dependency examples
2021-07-27 10:13:57,811 - DEBUG : Reloading ribbon_functions
2021-07-27 10:13:57,811 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:13:57,811 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:13:57,811 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:13:57,811 - DEBUG : Reloading debugging
2021-07-27 10:13:57,811 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:13:57,811 - DEBUG : Reloaded debugging
2021-07-27 10:13:57,853 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:13:57,860 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:13:57,880 - INFO : This product is licensed to 
2021-07-27 10:13:57,880 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:13:57,884 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:13:57,884 - DEBUG : Binding Python functions to Excel
2021-07-27 10:13:57,884 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:13:57,884 - DEBUG :     - pyxll_version
2021-07-27 10:13:57,884 - DEBUG :     - python_version
2021-07-27 10:13:57,884 - DEBUG :     - win32api_is_installed
2021-07-27 10:13:57,884 - DEBUG :     - win32com_is_installed
2021-07-27 10:13:57,884 - DEBUG :     - numpy_is_installed
2021-07-27 10:13:57,884 - DEBUG :     - pyxll_logfile
2021-07-27 10:13:57,884 - DEBUG :     - get_formula
2021-07-27 10:13:57,884 - DEBUG :     - get_array_formula
2021-07-27 10:13:57,884 - DEBUG :     - get_last_error
2021-07-27 10:13:57,884 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:13:57,884 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:13:57,884 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:13:57,884 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:13:57,884 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:13:57,884 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:13:57,884 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:13:57,884 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:13:57,884 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:13:57,884 - DEBUG :     - xl_cell_example
2021-07-27 10:13:57,884 - DEBUG :     - recalc_on_open_test
2021-07-27 10:13:57,884 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:13:57,889 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:13:57,889 - DEBUG :     - one_cell_one_sim
2021-07-27 10:13:57,889 - DEBUG :     - one_row_one_sim
2021-07-27 10:13:57,891 - DEBUG : Adding menus to Excel:
2021-07-27 10:13:57,891 - DEBUG :   - PyXLL
2021-07-27 10:13:57,891 - DEBUG :     - Reload PyXLL
2021-07-27 10:13:57,891 - DEBUG :     - Another example menu item
2021-07-27 10:13:57,892 - DEBUG :     - More Examples
2021-07-27 10:13:57,892 - DEBUG :       - Click me
2021-07-27 10:13:57,892 - DEBUG :       - Unicode Test
2021-07-27 10:13:57,892 - DEBUG :     - Open log file
2021-07-27 10:13:57,892 - DEBUG :     - Attach To VS Code
2021-07-27 10:13:57,892 - DEBUG :     - Custom Task Panes
2021-07-27 10:13:57,892 - DEBUG :       - Qt
2021-07-27 10:13:57,892 - DEBUG :       - Tk
2021-07-27 10:13:57,892 - DEBUG :       - Wx
2021-07-27 10:13:57,892 - DEBUG :     - Example Menu Item 1
2021-07-27 10:13:57,892 - DEBUG :     - Show last error
2021-07-27 10:13:57,892 - DEBUG :     - About PyXLL...
2021-07-27 10:13:57,892 - DEBUG :   - PyXLL example menu
2021-07-27 10:13:57,892 - DEBUG :     - Click me
2021-07-27 10:13:57,899 - DEBUG : Finished binding Python functions
2021-07-27 10:13:57,900 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:13:58,784 - DEBUG : pyxll._post_open complete.
2021-07-27 10:13:58,784 - DEBUG : PyXLL initialization complete.
2021-07-27 10:13:58,786 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:13:58,786 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:13:58,788 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:13:58,846 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:14:00,453 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:14:04,137 - ERROR : Traceback (most recent call last):
2021-07-27 10:14:04,137 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 324, in distribution_info
2021-07-27 10:14:04,139 - ERROR :     popupWindow(control=control, text=text, title=title)
2021-07-27 10:14:04,139 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 232, in popupWindow
2021-07-27 10:14:04,140 - ERROR :     frame = popupWindow(master=window, text=text)
2021-07-27 10:14:04,141 - ERROR : TypeError: popupWindow() got an unexpected keyword argument 'master'
2021-07-27 10:33:04,688 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:33:04,689 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:33:04,689 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:33:04,689 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:33:04,689 - DEBUG : -------- PyXLL config --------
2021-07-27 10:33:04,689 - DEBUG : [LOG]
2021-07-27 10:33:04,689 - DEBUG : encoding = utf-8
2021-07-27 10:33:04,689 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:33:04,689 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:33:04,689 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:33:04,689 - DEBUG : verbosity = debug
2021-07-27 10:33:04,689 - DEBUG : 
2021-07-27 10:33:04,689 - DEBUG : [PYTHON]
2021-07-27 10:33:04,689 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:33:04,689 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:33:04,689 - DEBUG : 
2021-07-27 10:33:04,689 - DEBUG : [PYXLL]
2021-07-27 10:33:04,689 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:33:04,689 - DEBUG : developer_mode = 1
2021-07-27 10:33:04,689 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:33:04,689 - DEBUG : modules = 
2021-07-27 10:33:04,689 - DEBUG :     misc
2021-07-27 10:33:04,689 - DEBUG :     worksheetfuncs
2021-07-27 10:33:04,689 - DEBUG :     menus
2021-07-27 10:33:04,689 - DEBUG :     callbacks
2021-07-27 10:33:04,689 - DEBUG :     custom_task_panes
2021-07-27 10:33:04,689 - DEBUG :     test
2021-07-27 10:33:04,689 - DEBUG :     ribbon_functions
2021-07-27 10:33:04,689 - DEBUG :     debugging
2021-07-27 10:33:04,689 - DEBUG :     meta_variables
2021-07-27 10:33:04,689 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:33:04,689 - DEBUG : ------------------------------
2021-07-27 10:33:04,689 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:33:04,693 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:33:04,693 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:33:04,694 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:33:04,695 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:33:04,697 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:33:04,697 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:33:04,742 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:33:04,742 - DEBUG : Reloading misc
2021-07-27 10:33:04,742 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:33:04,758 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:33:04,758 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:33:04,758 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:33:04,758 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:33:04,759 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:33:04,759 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:33:04,759 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:33:04,761 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:33:04,761 - DEBUG : Reloaded misc
2021-07-27 10:33:04,761 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:33:04,762 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:33:04,763 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:33:04,763 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:33:04,763 - DEBUG : Reloading menus
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:33:04,763 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:33:04,763 - DEBUG : Reloaded menus
2021-07-27 10:33:04,763 - DEBUG : Reloading callbacks
2021-07-27 10:33:04,763 - DEBUG : Reloaded callbacks
2021-07-27 10:33:04,770 - DEBUG : Reloading custom_task_panes
2021-07-27 10:33:04,770 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:33:04,771 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:33:04,771 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:33:04,771 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:33:04,772 - DEBUG : Reloading test
2021-07-27 10:33:04,772 - DEBUG : Reloaded test
2021-07-27 10:33:04,772 - DEBUG : Reloading meta_variables
2021-07-27 10:33:04,773 - DEBUG : Reloaded meta_variables
2021-07-27 10:33:04,773 - DEBUG : Reloading dependency error_functions
2021-07-27 10:33:04,774 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:33:04,774 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:33:04,774 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:33:04,774 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:33:04,774 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:33:04,774 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:33:04,774 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:33:04,774 - DEBUG : Reloading dependency examples
2021-07-27 10:33:04,774 - DEBUG : Reloaded dependency examples
2021-07-27 10:33:04,774 - DEBUG : Reloading ribbon_functions
2021-07-27 10:33:04,774 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:33:04,774 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:33:04,774 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:33:04,774 - DEBUG : Reloading debugging
2021-07-27 10:33:04,774 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:33:04,774 - DEBUG : Reloaded debugging
2021-07-27 10:33:04,811 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:33:04,820 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:33:04,835 - INFO : This product is licensed to 
2021-07-27 10:33:04,835 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:33:04,841 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:33:04,841 - DEBUG : Binding Python functions to Excel
2021-07-27 10:33:04,841 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:33:04,841 - DEBUG :     - pyxll_version
2021-07-27 10:33:04,841 - DEBUG :     - python_version
2021-07-27 10:33:04,841 - DEBUG :     - win32api_is_installed
2021-07-27 10:33:04,842 - DEBUG :     - win32com_is_installed
2021-07-27 10:33:04,842 - DEBUG :     - numpy_is_installed
2021-07-27 10:33:04,842 - DEBUG :     - pyxll_logfile
2021-07-27 10:33:04,842 - DEBUG :     - get_formula
2021-07-27 10:33:04,842 - DEBUG :     - get_array_formula
2021-07-27 10:33:04,842 - DEBUG :     - get_last_error
2021-07-27 10:33:04,842 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:33:04,842 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:33:04,842 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:33:04,842 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:33:04,842 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:33:04,842 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:33:04,842 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:33:04,842 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:33:04,842 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:33:04,842 - DEBUG :     - xl_cell_example
2021-07-27 10:33:04,842 - DEBUG :     - recalc_on_open_test
2021-07-27 10:33:04,842 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:33:04,842 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:33:04,842 - DEBUG :     - one_cell_one_sim
2021-07-27 10:33:04,842 - DEBUG :     - one_row_one_sim
2021-07-27 10:33:04,845 - DEBUG : Adding menus to Excel:
2021-07-27 10:33:04,845 - DEBUG :   - PyXLL
2021-07-27 10:33:04,845 - DEBUG :     - Reload PyXLL
2021-07-27 10:33:04,845 - DEBUG :     - Another example menu item
2021-07-27 10:33:04,845 - DEBUG :     - More Examples
2021-07-27 10:33:04,845 - DEBUG :       - Click me
2021-07-27 10:33:04,845 - DEBUG :       - Unicode Test
2021-07-27 10:33:04,845 - DEBUG :     - Open log file
2021-07-27 10:33:04,845 - DEBUG :     - Attach To VS Code
2021-07-27 10:33:04,845 - DEBUG :     - Custom Task Panes
2021-07-27 10:33:04,845 - DEBUG :       - Qt
2021-07-27 10:33:04,845 - DEBUG :       - Tk
2021-07-27 10:33:04,845 - DEBUG :       - Wx
2021-07-27 10:33:04,845 - DEBUG :     - Example Menu Item 1
2021-07-27 10:33:04,845 - DEBUG :     - Show last error
2021-07-27 10:33:04,845 - DEBUG :     - About PyXLL...
2021-07-27 10:33:04,845 - DEBUG :   - PyXLL example menu
2021-07-27 10:33:04,845 - DEBUG :     - Click me
2021-07-27 10:33:04,853 - DEBUG : Finished binding Python functions
2021-07-27 10:33:04,853 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:33:05,560 - DEBUG : pyxll._post_open complete.
2021-07-27 10:33:05,560 - DEBUG : PyXLL initialization complete.
2021-07-27 10:33:05,563 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:33:05,563 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:33:05,564 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:33:05,622 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:33:07,137 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:33:10,100 - ERROR : Traceback (most recent call last):
2021-07-27 10:33:10,100 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 324, in distribution_info
2021-07-27 10:33:10,101 - ERROR :     popupWindow(control=control, text=text, title=title)
2021-07-27 10:33:10,101 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 232, in popupWindow
2021-07-27 10:33:10,102 - ERROR :     frame = popupWindow(master=window, text=text)
2021-07-27 10:33:10,103 - ERROR : TypeError: popupWindow() got an unexpected keyword argument 'master'
2021-07-27 10:35:47,693 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:35:47,693 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:35:47,693 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:35:47,693 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:35:47,693 - DEBUG : -------- PyXLL config --------
2021-07-27 10:35:47,693 - DEBUG : [LOG]
2021-07-27 10:35:47,693 - DEBUG : encoding = utf-8
2021-07-27 10:35:47,693 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:35:47,693 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:35:47,693 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:35:47,693 - DEBUG : verbosity = debug
2021-07-27 10:35:47,693 - DEBUG : 
2021-07-27 10:35:47,693 - DEBUG : [PYTHON]
2021-07-27 10:35:47,693 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:35:47,693 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:35:47,693 - DEBUG : 
2021-07-27 10:35:47,693 - DEBUG : [PYXLL]
2021-07-27 10:35:47,693 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:35:47,693 - DEBUG : developer_mode = 1
2021-07-27 10:35:47,693 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:35:47,693 - DEBUG : modules = 
2021-07-27 10:35:47,693 - DEBUG :     misc
2021-07-27 10:35:47,696 - DEBUG :     worksheetfuncs
2021-07-27 10:35:47,696 - DEBUG :     menus
2021-07-27 10:35:47,696 - DEBUG :     callbacks
2021-07-27 10:35:47,696 - DEBUG :     custom_task_panes
2021-07-27 10:35:47,696 - DEBUG :     test
2021-07-27 10:35:47,696 - DEBUG :     ribbon_functions
2021-07-27 10:35:47,696 - DEBUG :     debugging
2021-07-27 10:35:47,696 - DEBUG :     meta_variables
2021-07-27 10:35:47,696 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:35:47,696 - DEBUG : ------------------------------
2021-07-27 10:35:47,696 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:35:47,696 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:35:47,696 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:35:47,698 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:35:47,700 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:35:47,702 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:35:47,703 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:35:47,754 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:35:47,754 - DEBUG : Reloading misc
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:35:47,754 - DEBUG : Reloaded misc
2021-07-27 10:35:47,754 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:35:47,754 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:35:47,767 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:35:47,767 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:35:47,767 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:35:47,768 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:35:47,768 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:35:47,768 - DEBUG : Reloading menus
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:35:47,768 - DEBUG : Reloaded menus
2021-07-27 10:35:47,768 - DEBUG : Reloading callbacks
2021-07-27 10:35:47,768 - DEBUG : Reloaded callbacks
2021-07-27 10:35:47,768 - DEBUG : Reloading custom_task_panes
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:35:47,768 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:35:47,768 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:35:47,768 - DEBUG : Reloading test
2021-07-27 10:35:47,768 - DEBUG : Reloaded test
2021-07-27 10:35:47,768 - DEBUG : Reloading meta_variables
2021-07-27 10:35:47,788 - DEBUG : Reloaded meta_variables
2021-07-27 10:35:47,788 - DEBUG : Reloading dependency error_functions
2021-07-27 10:35:47,789 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:35:47,789 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:35:47,790 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:35:47,790 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:35:47,790 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:35:47,790 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:35:47,794 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:35:47,794 - DEBUG : Reloading dependency examples
2021-07-27 10:35:47,794 - DEBUG : Reloaded dependency examples
2021-07-27 10:35:47,794 - DEBUG : Reloading ribbon_functions
2021-07-27 10:35:47,813 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:35:47,814 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:35:47,814 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:35:47,814 - DEBUG : Reloading debugging
2021-07-27 10:35:47,816 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:35:47,816 - DEBUG : Reloaded debugging
2021-07-27 10:35:47,852 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:35:47,860 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:35:47,873 - INFO : This product is licensed to 
2021-07-27 10:35:47,873 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:35:47,880 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:35:47,880 - DEBUG : Binding Python functions to Excel
2021-07-27 10:35:47,880 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:35:47,880 - DEBUG :     - pyxll_version
2021-07-27 10:35:47,880 - DEBUG :     - python_version
2021-07-27 10:35:47,881 - DEBUG :     - win32api_is_installed
2021-07-27 10:35:47,881 - DEBUG :     - win32com_is_installed
2021-07-27 10:35:47,881 - DEBUG :     - numpy_is_installed
2021-07-27 10:35:47,881 - DEBUG :     - pyxll_logfile
2021-07-27 10:35:47,881 - DEBUG :     - get_formula
2021-07-27 10:35:47,881 - DEBUG :     - get_array_formula
2021-07-27 10:35:47,881 - DEBUG :     - get_last_error
2021-07-27 10:35:47,881 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:35:47,881 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:35:47,882 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:35:47,882 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:35:47,882 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:35:47,882 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:35:47,882 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:35:47,882 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:35:47,882 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:35:47,882 - DEBUG :     - xl_cell_example
2021-07-27 10:35:47,882 - DEBUG :     - recalc_on_open_test
2021-07-27 10:35:47,882 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:35:47,883 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:35:47,883 - DEBUG :     - one_cell_one_sim
2021-07-27 10:35:47,883 - DEBUG :     - one_row_one_sim
2021-07-27 10:35:47,883 - DEBUG : Adding menus to Excel:
2021-07-27 10:35:47,883 - DEBUG :   - PyXLL
2021-07-27 10:35:47,883 - DEBUG :     - Reload PyXLL
2021-07-27 10:35:47,883 - DEBUG :     - Another example menu item
2021-07-27 10:35:47,883 - DEBUG :     - More Examples
2021-07-27 10:35:47,883 - DEBUG :       - Click me
2021-07-27 10:35:47,883 - DEBUG :       - Unicode Test
2021-07-27 10:35:47,883 - DEBUG :     - Open log file
2021-07-27 10:35:47,883 - DEBUG :     - Attach To VS Code
2021-07-27 10:35:47,883 - DEBUG :     - Custom Task Panes
2021-07-27 10:35:47,883 - DEBUG :       - Qt
2021-07-27 10:35:47,883 - DEBUG :       - Tk
2021-07-27 10:35:47,883 - DEBUG :       - Wx
2021-07-27 10:35:47,883 - DEBUG :     - Example Menu Item 1
2021-07-27 10:35:47,883 - DEBUG :     - Show last error
2021-07-27 10:35:47,883 - DEBUG :     - About PyXLL...
2021-07-27 10:35:47,883 - DEBUG :   - PyXLL example menu
2021-07-27 10:35:47,883 - DEBUG :     - Click me
2021-07-27 10:35:47,894 - DEBUG : Finished binding Python functions
2021-07-27 10:35:47,894 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:35:48,669 - DEBUG : pyxll._post_open complete.
2021-07-27 10:35:48,669 - DEBUG : PyXLL initialization complete.
2021-07-27 10:35:48,671 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:35:48,671 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:35:48,673 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:35:48,728 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:36:22,113 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:36:22,115 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:36:22,115 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:36:22,115 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:36:22,116 - DEBUG : -------- PyXLL config --------
2021-07-27 10:36:22,116 - DEBUG : [LOG]
2021-07-27 10:36:22,116 - DEBUG : encoding = utf-8
2021-07-27 10:36:22,116 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:36:22,116 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:36:22,116 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:36:22,116 - DEBUG : verbosity = debug
2021-07-27 10:36:22,116 - DEBUG : 
2021-07-27 10:36:22,116 - DEBUG : [PYTHON]
2021-07-27 10:36:22,116 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:36:22,116 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:36:22,116 - DEBUG : 
2021-07-27 10:36:22,116 - DEBUG : [PYXLL]
2021-07-27 10:36:22,116 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:36:22,116 - DEBUG : developer_mode = 1
2021-07-27 10:36:22,116 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:36:22,116 - DEBUG : modules = 
2021-07-27 10:36:22,116 - DEBUG :     misc
2021-07-27 10:36:22,116 - DEBUG :     worksheetfuncs
2021-07-27 10:36:22,116 - DEBUG :     menus
2021-07-27 10:36:22,116 - DEBUG :     callbacks
2021-07-27 10:36:22,116 - DEBUG :     custom_task_panes
2021-07-27 10:36:22,116 - DEBUG :     test
2021-07-27 10:36:22,116 - DEBUG :     ribbon_functions
2021-07-27 10:36:22,116 - DEBUG :     debugging
2021-07-27 10:36:22,116 - DEBUG :     meta_variables
2021-07-27 10:36:22,116 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:36:22,116 - DEBUG : ------------------------------
2021-07-27 10:36:22,116 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:36:22,116 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:36:22,116 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:36:22,117 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:36:22,119 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:36:22,119 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:36:22,120 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:36:22,152 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:36:22,152 - DEBUG : Reloading misc
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:36:22,168 - DEBUG : Reloaded misc
2021-07-27 10:36:22,168 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:36:22,168 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:36:22,168 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:36:22,168 - DEBUG : Reloading menus
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:36:22,168 - DEBUG : Reloaded menus
2021-07-27 10:36:22,168 - DEBUG : Reloading callbacks
2021-07-27 10:36:22,168 - DEBUG : Reloaded callbacks
2021-07-27 10:36:22,168 - DEBUG : Reloading custom_task_panes
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:36:22,168 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:36:22,168 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:36:22,168 - DEBUG : Reloading test
2021-07-27 10:36:22,183 - DEBUG : Reloaded test
2021-07-27 10:36:22,184 - DEBUG : Reloading meta_variables
2021-07-27 10:36:22,184 - DEBUG : Reloaded meta_variables
2021-07-27 10:36:22,185 - DEBUG : Reloading dependency error_functions
2021-07-27 10:36:22,185 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:36:22,185 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:36:22,185 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:36:22,185 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:36:22,185 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:36:22,185 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:36:22,188 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:36:22,188 - DEBUG : Reloading dependency examples
2021-07-27 10:36:22,188 - DEBUG : Reloaded dependency examples
2021-07-27 10:36:22,188 - DEBUG : Reloading ribbon_functions
2021-07-27 10:36:22,207 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:36:22,207 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:36:22,207 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:36:22,207 - DEBUG : Reloading debugging
2021-07-27 10:36:22,207 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:36:22,207 - DEBUG : Reloaded debugging
2021-07-27 10:36:22,247 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:36:22,254 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:36:22,272 - INFO : This product is licensed to 
2021-07-27 10:36:22,272 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:36:22,275 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:36:22,275 - DEBUG : Binding Python functions to Excel
2021-07-27 10:36:22,275 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:36:22,275 - DEBUG :     - pyxll_version
2021-07-27 10:36:22,275 - DEBUG :     - python_version
2021-07-27 10:36:22,275 - DEBUG :     - win32api_is_installed
2021-07-27 10:36:22,275 - DEBUG :     - win32com_is_installed
2021-07-27 10:36:22,275 - DEBUG :     - numpy_is_installed
2021-07-27 10:36:22,275 - DEBUG :     - pyxll_logfile
2021-07-27 10:36:22,275 - DEBUG :     - get_formula
2021-07-27 10:36:22,275 - DEBUG :     - get_array_formula
2021-07-27 10:36:22,275 - DEBUG :     - get_last_error
2021-07-27 10:36:22,275 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:36:22,275 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:36:22,275 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:36:22,275 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:36:22,275 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:36:22,275 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:36:22,275 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:36:22,278 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:36:22,278 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:36:22,278 - DEBUG :     - xl_cell_example
2021-07-27 10:36:22,278 - DEBUG :     - recalc_on_open_test
2021-07-27 10:36:22,278 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:36:22,278 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:36:22,278 - DEBUG :     - one_cell_one_sim
2021-07-27 10:36:22,278 - DEBUG :     - one_row_one_sim
2021-07-27 10:36:22,281 - DEBUG : Adding menus to Excel:
2021-07-27 10:36:22,281 - DEBUG :   - PyXLL
2021-07-27 10:36:22,281 - DEBUG :     - Reload PyXLL
2021-07-27 10:36:22,281 - DEBUG :     - Another example menu item
2021-07-27 10:36:22,281 - DEBUG :     - More Examples
2021-07-27 10:36:22,281 - DEBUG :       - Click me
2021-07-27 10:36:22,281 - DEBUG :       - Unicode Test
2021-07-27 10:36:22,281 - DEBUG :     - Open log file
2021-07-27 10:36:22,281 - DEBUG :     - Attach To VS Code
2021-07-27 10:36:22,281 - DEBUG :     - Custom Task Panes
2021-07-27 10:36:22,281 - DEBUG :       - Qt
2021-07-27 10:36:22,281 - DEBUG :       - Tk
2021-07-27 10:36:22,281 - DEBUG :       - Wx
2021-07-27 10:36:22,281 - DEBUG :     - Example Menu Item 1
2021-07-27 10:36:22,281 - DEBUG :     - Show last error
2021-07-27 10:36:22,281 - DEBUG :     - About PyXLL...
2021-07-27 10:36:22,281 - DEBUG :   - PyXLL example menu
2021-07-27 10:36:22,281 - DEBUG :     - Click me
2021-07-27 10:36:22,289 - DEBUG : Finished binding Python functions
2021-07-27 10:36:22,290 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:36:23,150 - DEBUG : pyxll._post_open complete.
2021-07-27 10:36:23,150 - DEBUG : PyXLL initialization complete.
2021-07-27 10:36:23,154 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:36:23,154 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:36:23,155 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:36:23,214 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:37:34,249 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:37:34,249 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:37:34,249 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:37:34,249 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:37:34,249 - DEBUG : -------- PyXLL config --------
2021-07-27 10:37:34,249 - DEBUG : [LOG]
2021-07-27 10:37:34,249 - DEBUG : encoding = utf-8
2021-07-27 10:37:34,249 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:37:34,249 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:37:34,249 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:37:34,249 - DEBUG : verbosity = debug
2021-07-27 10:37:34,249 - DEBUG : 
2021-07-27 10:37:34,249 - DEBUG : [PYTHON]
2021-07-27 10:37:34,249 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:37:34,249 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:37:34,249 - DEBUG : 
2021-07-27 10:37:34,249 - DEBUG : [PYXLL]
2021-07-27 10:37:34,249 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:37:34,249 - DEBUG : developer_mode = 1
2021-07-27 10:37:34,249 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:37:34,249 - DEBUG : modules = 
2021-07-27 10:37:34,249 - DEBUG :     misc
2021-07-27 10:37:34,249 - DEBUG :     worksheetfuncs
2021-07-27 10:37:34,252 - DEBUG :     menus
2021-07-27 10:37:34,252 - DEBUG :     callbacks
2021-07-27 10:37:34,252 - DEBUG :     custom_task_panes
2021-07-27 10:37:34,252 - DEBUG :     test
2021-07-27 10:37:34,252 - DEBUG :     ribbon_functions
2021-07-27 10:37:34,252 - DEBUG :     debugging
2021-07-27 10:37:34,252 - DEBUG :     meta_variables
2021-07-27 10:37:34,252 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:37:34,252 - DEBUG : ------------------------------
2021-07-27 10:37:34,252 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:37:34,252 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:37:34,252 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:37:34,253 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:37:34,255 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:37:34,256 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:37:34,256 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:37:34,312 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:37:34,312 - DEBUG : Reloading misc
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:37:34,312 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:37:34,312 - DEBUG : Reloaded misc
2021-07-27 10:37:34,312 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:37:34,320 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:37:34,320 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:37:34,320 - DEBUG : Reloading menus
2021-07-27 10:37:34,326 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:37:34,326 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:37:34,326 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:37:34,326 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:37:34,326 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:37:34,327 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:37:34,327 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:37:34,327 - DEBUG : Reloaded menus
2021-07-27 10:37:34,327 - DEBUG : Reloading callbacks
2021-07-27 10:37:34,328 - DEBUG : Reloaded callbacks
2021-07-27 10:37:34,328 - DEBUG : Reloading custom_task_panes
2021-07-27 10:37:34,329 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:37:34,329 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:37:34,329 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:37:34,329 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:37:34,329 - DEBUG : Reloading test
2021-07-27 10:37:34,329 - DEBUG : Reloaded test
2021-07-27 10:37:34,329 - DEBUG : Reloading meta_variables
2021-07-27 10:37:34,329 - DEBUG : Reloaded meta_variables
2021-07-27 10:37:34,329 - DEBUG : Reloading dependency error_functions
2021-07-27 10:37:34,329 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:37:34,329 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:37:34,329 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:37:34,329 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:37:34,334 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:37:34,334 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:37:34,335 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:37:34,335 - DEBUG : Reloading dependency examples
2021-07-27 10:37:34,335 - DEBUG : Reloaded dependency examples
2021-07-27 10:37:34,335 - DEBUG : Reloading ribbon_functions
2021-07-27 10:37:34,353 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:37:34,353 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:37:34,353 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:37:34,353 - DEBUG : Reloading debugging
2021-07-27 10:37:34,353 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:37:34,353 - DEBUG : Reloaded debugging
2021-07-27 10:37:34,397 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:37:34,405 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:37:34,422 - INFO : This product is licensed to 
2021-07-27 10:37:34,422 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:37:34,423 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:37:34,424 - DEBUG : Binding Python functions to Excel
2021-07-27 10:37:34,424 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:37:34,424 - DEBUG :     - pyxll_version
2021-07-27 10:37:34,424 - DEBUG :     - python_version
2021-07-27 10:37:34,424 - DEBUG :     - win32api_is_installed
2021-07-27 10:37:34,424 - DEBUG :     - win32com_is_installed
2021-07-27 10:37:34,424 - DEBUG :     - numpy_is_installed
2021-07-27 10:37:34,425 - DEBUG :     - pyxll_logfile
2021-07-27 10:37:34,425 - DEBUG :     - get_formula
2021-07-27 10:37:34,425 - DEBUG :     - get_array_formula
2021-07-27 10:37:34,425 - DEBUG :     - get_last_error
2021-07-27 10:37:34,425 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:37:34,425 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:37:34,425 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:37:34,425 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:37:34,426 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:37:34,426 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:37:34,426 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:37:34,426 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:37:34,426 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:37:34,426 - DEBUG :     - xl_cell_example
2021-07-27 10:37:34,426 - DEBUG :     - recalc_on_open_test
2021-07-27 10:37:34,426 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:37:34,426 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:37:34,426 - DEBUG :     - one_cell_one_sim
2021-07-27 10:37:34,426 - DEBUG :     - one_row_one_sim
2021-07-27 10:37:34,429 - DEBUG : Adding menus to Excel:
2021-07-27 10:37:34,429 - DEBUG :   - PyXLL
2021-07-27 10:37:34,429 - DEBUG :     - Reload PyXLL
2021-07-27 10:37:34,429 - DEBUG :     - Another example menu item
2021-07-27 10:37:34,429 - DEBUG :     - More Examples
2021-07-27 10:37:34,429 - DEBUG :       - Click me
2021-07-27 10:37:34,429 - DEBUG :       - Unicode Test
2021-07-27 10:37:34,429 - DEBUG :     - Open log file
2021-07-27 10:37:34,429 - DEBUG :     - Attach To VS Code
2021-07-27 10:37:34,429 - DEBUG :     - Custom Task Panes
2021-07-27 10:37:34,429 - DEBUG :       - Qt
2021-07-27 10:37:34,429 - DEBUG :       - Tk
2021-07-27 10:37:34,429 - DEBUG :       - Wx
2021-07-27 10:37:34,429 - DEBUG :     - Example Menu Item 1
2021-07-27 10:37:34,429 - DEBUG :     - Show last error
2021-07-27 10:37:34,429 - DEBUG :     - About PyXLL...
2021-07-27 10:37:34,429 - DEBUG :   - PyXLL example menu
2021-07-27 10:37:34,429 - DEBUG :     - Click me
2021-07-27 10:37:34,439 - DEBUG : Finished binding Python functions
2021-07-27 10:37:34,439 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:37:35,173 - DEBUG : pyxll._post_open complete.
2021-07-27 10:37:35,173 - DEBUG : PyXLL initialization complete.
2021-07-27 10:37:35,176 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:37:35,176 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:37:35,177 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:37:35,272 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:40:11,722 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:40:11,725 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:40:11,725 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:40:11,725 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:40:11,725 - DEBUG : -------- PyXLL config --------
2021-07-27 10:40:11,725 - DEBUG : [LOG]
2021-07-27 10:40:11,725 - DEBUG : encoding = utf-8
2021-07-27 10:40:11,725 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:40:11,725 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:40:11,725 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:40:11,725 - DEBUG : verbosity = debug
2021-07-27 10:40:11,725 - DEBUG : 
2021-07-27 10:40:11,725 - DEBUG : [PYTHON]
2021-07-27 10:40:11,725 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:40:11,725 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:40:11,725 - DEBUG : 
2021-07-27 10:40:11,725 - DEBUG : [PYXLL]
2021-07-27 10:40:11,725 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:40:11,725 - DEBUG : developer_mode = 1
2021-07-27 10:40:11,725 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:40:11,725 - DEBUG : modules = 
2021-07-27 10:40:11,725 - DEBUG :     misc
2021-07-27 10:40:11,725 - DEBUG :     worksheetfuncs
2021-07-27 10:40:11,725 - DEBUG :     menus
2021-07-27 10:40:11,725 - DEBUG :     callbacks
2021-07-27 10:40:11,725 - DEBUG :     custom_task_panes
2021-07-27 10:40:11,725 - DEBUG :     test
2021-07-27 10:40:11,725 - DEBUG :     ribbon_functions
2021-07-27 10:40:11,725 - DEBUG :     debugging
2021-07-27 10:40:11,725 - DEBUG :     meta_variables
2021-07-27 10:40:11,725 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:40:11,725 - DEBUG : ------------------------------
2021-07-27 10:40:11,726 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:40:11,726 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:40:11,726 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:40:11,727 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:40:11,729 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:40:11,730 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:40:11,730 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:40:11,787 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:40:11,787 - DEBUG : Reloading misc
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:40:11,787 - DEBUG : Reloaded misc
2021-07-27 10:40:11,787 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:40:11,787 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:40:11,787 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:40:11,787 - DEBUG : Reloading menus
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:40:11,787 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:40:11,787 - DEBUG : Reloaded menus
2021-07-27 10:40:11,787 - DEBUG : Reloading callbacks
2021-07-27 10:40:11,787 - DEBUG : Reloaded callbacks
2021-07-27 10:40:11,787 - DEBUG : Reloading custom_task_panes
2021-07-27 10:40:11,803 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:40:11,803 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:40:11,803 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:40:11,803 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:40:11,803 - DEBUG : Reloading test
2021-07-27 10:40:11,803 - DEBUG : Reloaded test
2021-07-27 10:40:11,803 - DEBUG : Reloading meta_variables
2021-07-27 10:40:11,815 - DEBUG : Reloaded meta_variables
2021-07-27 10:40:11,815 - DEBUG : Reloading dependency error_functions
2021-07-27 10:40:11,816 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:40:11,816 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:40:11,816 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:40:11,816 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:40:11,816 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:40:11,816 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:40:11,816 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:40:11,816 - DEBUG : Reloading dependency examples
2021-07-27 10:40:11,816 - DEBUG : Reloaded dependency examples
2021-07-27 10:40:11,816 - DEBUG : Reloading ribbon_functions
2021-07-27 10:40:11,816 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:40:11,816 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:40:11,816 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:40:11,816 - DEBUG : Reloading debugging
2021-07-27 10:40:11,816 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:40:11,816 - DEBUG : Reloaded debugging
2021-07-27 10:40:11,859 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:40:11,874 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:40:11,888 - INFO : This product is licensed to 
2021-07-27 10:40:11,888 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:40:11,899 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:40:11,899 - DEBUG : Binding Python functions to Excel
2021-07-27 10:40:11,899 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:40:11,900 - DEBUG :     - pyxll_version
2021-07-27 10:40:11,900 - DEBUG :     - python_version
2021-07-27 10:40:11,900 - DEBUG :     - win32api_is_installed
2021-07-27 10:40:11,900 - DEBUG :     - win32com_is_installed
2021-07-27 10:40:11,900 - DEBUG :     - numpy_is_installed
2021-07-27 10:40:11,900 - DEBUG :     - pyxll_logfile
2021-07-27 10:40:11,900 - DEBUG :     - get_formula
2021-07-27 10:40:11,900 - DEBUG :     - get_array_formula
2021-07-27 10:40:11,900 - DEBUG :     - get_last_error
2021-07-27 10:40:11,901 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:40:11,901 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:40:11,901 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:40:11,901 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:40:11,901 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:40:11,901 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:40:11,901 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:40:11,901 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:40:11,902 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:40:11,902 - DEBUG :     - xl_cell_example
2021-07-27 10:40:11,902 - DEBUG :     - recalc_on_open_test
2021-07-27 10:40:11,902 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:40:11,902 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:40:11,902 - DEBUG :     - one_cell_one_sim
2021-07-27 10:40:11,902 - DEBUG :     - one_row_one_sim
2021-07-27 10:40:11,905 - DEBUG : Adding menus to Excel:
2021-07-27 10:40:11,905 - DEBUG :   - PyXLL
2021-07-27 10:40:11,905 - DEBUG :     - Reload PyXLL
2021-07-27 10:40:11,905 - DEBUG :     - Another example menu item
2021-07-27 10:40:11,905 - DEBUG :     - More Examples
2021-07-27 10:40:11,905 - DEBUG :       - Click me
2021-07-27 10:40:11,905 - DEBUG :       - Unicode Test
2021-07-27 10:40:11,905 - DEBUG :     - Open log file
2021-07-27 10:40:11,905 - DEBUG :     - Attach To VS Code
2021-07-27 10:40:11,905 - DEBUG :     - Custom Task Panes
2021-07-27 10:40:11,905 - DEBUG :       - Qt
2021-07-27 10:40:11,905 - DEBUG :       - Tk
2021-07-27 10:40:11,905 - DEBUG :       - Wx
2021-07-27 10:40:11,905 - DEBUG :     - Example Menu Item 1
2021-07-27 10:40:11,905 - DEBUG :     - Show last error
2021-07-27 10:40:11,905 - DEBUG :     - About PyXLL...
2021-07-27 10:40:11,905 - DEBUG :   - PyXLL example menu
2021-07-27 10:40:11,905 - DEBUG :     - Click me
2021-07-27 10:40:11,912 - DEBUG : Finished binding Python functions
2021-07-27 10:40:11,912 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:40:12,712 - DEBUG : pyxll._post_open complete.
2021-07-27 10:40:12,712 - DEBUG : PyXLL initialization complete.
2021-07-27 10:40:12,714 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:40:12,714 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:40:12,715 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:40:12,771 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:42:37,852 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:42:37,852 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:42:37,852 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:42:37,855 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:42:37,855 - DEBUG : -------- PyXLL config --------
2021-07-27 10:42:37,855 - DEBUG : [LOG]
2021-07-27 10:42:37,855 - DEBUG : encoding = utf-8
2021-07-27 10:42:37,855 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:42:37,855 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:42:37,855 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:42:37,855 - DEBUG : verbosity = debug
2021-07-27 10:42:37,855 - DEBUG : 
2021-07-27 10:42:37,855 - DEBUG : [PYTHON]
2021-07-27 10:42:37,855 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:42:37,855 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:42:37,855 - DEBUG : 
2021-07-27 10:42:37,855 - DEBUG : [PYXLL]
2021-07-27 10:42:37,855 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:42:37,855 - DEBUG : developer_mode = 1
2021-07-27 10:42:37,855 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:42:37,855 - DEBUG : modules = 
2021-07-27 10:42:37,855 - DEBUG :     misc
2021-07-27 10:42:37,855 - DEBUG :     worksheetfuncs
2021-07-27 10:42:37,855 - DEBUG :     menus
2021-07-27 10:42:37,855 - DEBUG :     callbacks
2021-07-27 10:42:37,855 - DEBUG :     custom_task_panes
2021-07-27 10:42:37,855 - DEBUG :     test
2021-07-27 10:42:37,855 - DEBUG :     ribbon_functions
2021-07-27 10:42:37,855 - DEBUG :     debugging
2021-07-27 10:42:37,855 - DEBUG :     meta_variables
2021-07-27 10:42:37,855 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:42:37,855 - DEBUG : ------------------------------
2021-07-27 10:42:37,855 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:42:37,856 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:42:37,856 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:42:37,857 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:42:37,859 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:42:37,860 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:42:37,860 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:42:37,915 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:42:37,915 - DEBUG : Reloading misc
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:42:37,915 - DEBUG : Reloaded misc
2021-07-27 10:42:37,915 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:42:37,915 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:42:37,915 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:42:37,915 - DEBUG : Reloading menus
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:42:37,915 - DEBUG : Reloaded menus
2021-07-27 10:42:37,915 - DEBUG : Reloading callbacks
2021-07-27 10:42:37,915 - DEBUG : Reloaded callbacks
2021-07-27 10:42:37,915 - DEBUG : Reloading custom_task_panes
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:42:37,915 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:42:37,930 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:42:37,930 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:42:37,930 - DEBUG : Reloading test
2021-07-27 10:42:37,930 - DEBUG : Reloaded test
2021-07-27 10:42:37,930 - DEBUG : Reloading meta_variables
2021-07-27 10:42:37,941 - DEBUG : Reloaded meta_variables
2021-07-27 10:42:37,941 - DEBUG : Reloading dependency error_functions
2021-07-27 10:42:37,942 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:42:37,942 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:42:37,943 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:42:37,943 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:42:37,943 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:42:37,943 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:42:37,943 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:42:37,943 - DEBUG : Reloading dependency examples
2021-07-27 10:42:37,943 - DEBUG : Reloaded dependency examples
2021-07-27 10:42:37,943 - DEBUG : Reloading ribbon_functions
2021-07-27 10:42:37,943 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:42:37,943 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:42:37,943 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:42:37,943 - DEBUG : Reloading debugging
2021-07-27 10:42:37,943 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:42:37,943 - DEBUG : Reloaded debugging
2021-07-27 10:42:37,989 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:42:37,996 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:42:38,012 - INFO : This product is licensed to 
2021-07-27 10:42:38,012 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:42:38,020 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:42:38,021 - DEBUG : Binding Python functions to Excel
2021-07-27 10:42:38,021 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:42:38,021 - DEBUG :     - pyxll_version
2021-07-27 10:42:38,021 - DEBUG :     - python_version
2021-07-27 10:42:38,021 - DEBUG :     - win32api_is_installed
2021-07-27 10:42:38,021 - DEBUG :     - win32com_is_installed
2021-07-27 10:42:38,021 - DEBUG :     - numpy_is_installed
2021-07-27 10:42:38,021 - DEBUG :     - pyxll_logfile
2021-07-27 10:42:38,021 - DEBUG :     - get_formula
2021-07-27 10:42:38,021 - DEBUG :     - get_array_formula
2021-07-27 10:42:38,021 - DEBUG :     - get_last_error
2021-07-27 10:42:38,021 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:42:38,021 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:42:38,021 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:42:38,021 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:42:38,021 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:42:38,021 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:42:38,021 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:42:38,021 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:42:38,021 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:42:38,021 - DEBUG :     - xl_cell_example
2021-07-27 10:42:38,021 - DEBUG :     - recalc_on_open_test
2021-07-27 10:42:38,021 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:42:38,021 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:42:38,021 - DEBUG :     - one_cell_one_sim
2021-07-27 10:42:38,021 - DEBUG :     - one_row_one_sim
2021-07-27 10:42:38,027 - DEBUG : Adding menus to Excel:
2021-07-27 10:42:38,027 - DEBUG :   - PyXLL
2021-07-27 10:42:38,027 - DEBUG :     - Reload PyXLL
2021-07-27 10:42:38,027 - DEBUG :     - Another example menu item
2021-07-27 10:42:38,027 - DEBUG :     - More Examples
2021-07-27 10:42:38,027 - DEBUG :       - Click me
2021-07-27 10:42:38,027 - DEBUG :       - Unicode Test
2021-07-27 10:42:38,027 - DEBUG :     - Open log file
2021-07-27 10:42:38,027 - DEBUG :     - Attach To VS Code
2021-07-27 10:42:38,027 - DEBUG :     - Custom Task Panes
2021-07-27 10:42:38,027 - DEBUG :       - Qt
2021-07-27 10:42:38,027 - DEBUG :       - Tk
2021-07-27 10:42:38,027 - DEBUG :       - Wx
2021-07-27 10:42:38,027 - DEBUG :     - Example Menu Item 1
2021-07-27 10:42:38,027 - DEBUG :     - Show last error
2021-07-27 10:42:38,027 - DEBUG :     - About PyXLL...
2021-07-27 10:42:38,027 - DEBUG :   - PyXLL example menu
2021-07-27 10:42:38,027 - DEBUG :     - Click me
2021-07-27 10:42:38,033 - DEBUG : Finished binding Python functions
2021-07-27 10:42:38,033 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:42:38,940 - DEBUG : pyxll._post_open complete.
2021-07-27 10:42:38,940 - DEBUG : PyXLL initialization complete.
2021-07-27 10:42:38,943 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:42:38,943 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:42:38,944 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:42:39,001 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:42:41,173 - ERROR : Error calling ribbon function 'ribbon_functions.distribution_info'
2021-07-27 10:42:44,861 - ERROR : Traceback (most recent call last):
2021-07-27 10:42:44,861 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 312, in distribution_info
2021-07-27 10:42:44,862 - ERROR :     distr_id = cell_info["distribution_id"]
2021-07-27 10:42:44,863 - ERROR : TypeError: 'NoneType' object is not subscriptable
2021-07-27 10:44:00,198 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:44:00,199 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:44:00,199 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:44:00,199 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:44:00,199 - DEBUG : -------- PyXLL config --------
2021-07-27 10:44:00,199 - DEBUG : [LOG]
2021-07-27 10:44:00,199 - DEBUG : encoding = utf-8
2021-07-27 10:44:00,199 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:44:00,199 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:44:00,199 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:44:00,199 - DEBUG : verbosity = debug
2021-07-27 10:44:00,199 - DEBUG : 
2021-07-27 10:44:00,199 - DEBUG : [PYTHON]
2021-07-27 10:44:00,199 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:44:00,199 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:44:00,199 - DEBUG : 
2021-07-27 10:44:00,199 - DEBUG : [PYXLL]
2021-07-27 10:44:00,199 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:44:00,199 - DEBUG : developer_mode = 1
2021-07-27 10:44:00,199 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:44:00,199 - DEBUG : modules = 
2021-07-27 10:44:00,199 - DEBUG :     misc
2021-07-27 10:44:00,199 - DEBUG :     worksheetfuncs
2021-07-27 10:44:00,199 - DEBUG :     menus
2021-07-27 10:44:00,199 - DEBUG :     callbacks
2021-07-27 10:44:00,202 - DEBUG :     custom_task_panes
2021-07-27 10:44:00,202 - DEBUG :     test
2021-07-27 10:44:00,202 - DEBUG :     ribbon_functions
2021-07-27 10:44:00,202 - DEBUG :     debugging
2021-07-27 10:44:00,202 - DEBUG :     meta_variables
2021-07-27 10:44:00,202 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:44:00,202 - DEBUG : ------------------------------
2021-07-27 10:44:00,202 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:44:00,202 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:44:00,202 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:44:00,203 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:44:00,206 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:44:00,207 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:44:00,208 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:44:00,261 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:44:00,268 - DEBUG : Reloading misc
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:44:00,269 - DEBUG : Reloaded misc
2021-07-27 10:44:00,269 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:44:00,269 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:44:00,276 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:44:00,276 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:44:00,277 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:44:00,277 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:44:00,277 - DEBUG : Reloading menus
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:44:00,277 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:44:00,277 - DEBUG : Reloaded menus
2021-07-27 10:44:00,277 - DEBUG : Reloading callbacks
2021-07-27 10:44:00,277 - DEBUG : Reloaded callbacks
2021-07-27 10:44:00,284 - DEBUG : Reloading custom_task_panes
2021-07-27 10:44:00,284 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:44:00,285 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:44:00,285 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:44:00,285 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:44:00,285 - DEBUG : Reloading test
2021-07-27 10:44:00,285 - DEBUG : Reloaded test
2021-07-27 10:44:00,285 - DEBUG : Reloading meta_variables
2021-07-27 10:44:00,299 - DEBUG : Reloaded meta_variables
2021-07-27 10:44:00,299 - DEBUG : Reloading dependency error_functions
2021-07-27 10:44:00,300 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:44:00,300 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:44:00,301 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:44:00,301 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:44:00,302 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:44:00,302 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:44:00,309 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:44:00,309 - DEBUG : Reloading dependency examples
2021-07-27 10:44:00,310 - DEBUG : Reloaded dependency examples
2021-07-27 10:44:00,310 - DEBUG : Reloading ribbon_functions
2021-07-27 10:44:00,310 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:44:00,310 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:44:00,310 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:44:00,310 - DEBUG : Reloading debugging
2021-07-27 10:44:00,310 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:44:00,310 - DEBUG : Reloaded debugging
2021-07-27 10:44:00,354 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:44:00,362 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:44:00,379 - INFO : This product is licensed to 
2021-07-27 10:44:00,379 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:44:00,382 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:44:00,382 - DEBUG : Binding Python functions to Excel
2021-07-27 10:44:00,382 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:44:00,382 - DEBUG :     - pyxll_version
2021-07-27 10:44:00,382 - DEBUG :     - python_version
2021-07-27 10:44:00,383 - DEBUG :     - win32api_is_installed
2021-07-27 10:44:00,383 - DEBUG :     - win32com_is_installed
2021-07-27 10:44:00,383 - DEBUG :     - numpy_is_installed
2021-07-27 10:44:00,383 - DEBUG :     - pyxll_logfile
2021-07-27 10:44:00,383 - DEBUG :     - get_formula
2021-07-27 10:44:00,383 - DEBUG :     - get_array_formula
2021-07-27 10:44:00,383 - DEBUG :     - get_last_error
2021-07-27 10:44:00,383 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:44:00,384 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:44:00,384 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:44:00,384 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:44:00,384 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:44:00,384 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:44:00,384 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:44:00,384 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:44:00,384 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:44:00,384 - DEBUG :     - xl_cell_example
2021-07-27 10:44:00,384 - DEBUG :     - recalc_on_open_test
2021-07-27 10:44:00,384 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:44:00,384 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:44:00,384 - DEBUG :     - one_cell_one_sim
2021-07-27 10:44:00,385 - DEBUG :     - one_row_one_sim
2021-07-27 10:44:00,388 - DEBUG : Adding menus to Excel:
2021-07-27 10:44:00,388 - DEBUG :   - PyXLL
2021-07-27 10:44:00,388 - DEBUG :     - Reload PyXLL
2021-07-27 10:44:00,388 - DEBUG :     - Another example menu item
2021-07-27 10:44:00,388 - DEBUG :     - More Examples
2021-07-27 10:44:00,388 - DEBUG :       - Click me
2021-07-27 10:44:00,388 - DEBUG :       - Unicode Test
2021-07-27 10:44:00,388 - DEBUG :     - Open log file
2021-07-27 10:44:00,388 - DEBUG :     - Attach To VS Code
2021-07-27 10:44:00,388 - DEBUG :     - Custom Task Panes
2021-07-27 10:44:00,388 - DEBUG :       - Qt
2021-07-27 10:44:00,388 - DEBUG :       - Tk
2021-07-27 10:44:00,388 - DEBUG :       - Wx
2021-07-27 10:44:00,388 - DEBUG :     - Example Menu Item 1
2021-07-27 10:44:00,388 - DEBUG :     - Show last error
2021-07-27 10:44:00,388 - DEBUG :     - About PyXLL...
2021-07-27 10:44:00,388 - DEBUG :   - PyXLL example menu
2021-07-27 10:44:00,388 - DEBUG :     - Click me
2021-07-27 10:44:00,396 - DEBUG : Finished binding Python functions
2021-07-27 10:44:00,396 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:44:01,311 - DEBUG : pyxll._post_open complete.
2021-07-27 10:44:01,312 - DEBUG : PyXLL initialization complete.
2021-07-27 10:44:01,323 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:44:01,323 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:44:01,325 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:44:01,380 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 10:44:03,766 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 10:44:03,768 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 10:44:03,768 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 10:44:03,768 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 10:44:03,768 - DEBUG : -------- PyXLL config --------
2021-07-27 10:44:03,768 - DEBUG : [LOG]
2021-07-27 10:44:03,768 - DEBUG : encoding = utf-8
2021-07-27 10:44:03,768 - DEBUG : file = pyxll.20210727.log
2021-07-27 10:44:03,768 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 10:44:03,768 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 10:44:03,768 - DEBUG : verbosity = debug
2021-07-27 10:44:03,768 - DEBUG : 
2021-07-27 10:44:03,768 - DEBUG : [PYTHON]
2021-07-27 10:44:03,768 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 10:44:03,768 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 10:44:03,768 - DEBUG : 
2021-07-27 10:44:03,768 - DEBUG : [PYXLL]
2021-07-27 10:44:03,768 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 10:44:03,768 - DEBUG : developer_mode = 1
2021-07-27 10:44:03,768 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 10:44:03,768 - DEBUG : modules = 
2021-07-27 10:44:03,768 - DEBUG :     misc
2021-07-27 10:44:03,768 - DEBUG :     worksheetfuncs
2021-07-27 10:44:03,768 - DEBUG :     menus
2021-07-27 10:44:03,768 - DEBUG :     callbacks
2021-07-27 10:44:03,768 - DEBUG :     custom_task_panes
2021-07-27 10:44:03,769 - DEBUG :     test
2021-07-27 10:44:03,769 - DEBUG :     ribbon_functions
2021-07-27 10:44:03,769 - DEBUG :     debugging
2021-07-27 10:44:03,769 - DEBUG :     meta_variables
2021-07-27 10:44:03,769 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 10:44:03,769 - DEBUG : ------------------------------
2021-07-27 10:44:03,769 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 10:44:03,769 - DEBUG : Initializing PyXLL Python module.
2021-07-27 10:44:03,769 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 10:44:03,770 - DEBUG : PyXLL Python module initialized.
2021-07-27 10:44:03,772 - DEBUG : Functions will not be cancellable by default.
2021-07-27 10:44:03,773 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 10:44:03,773 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 10:44:03,831 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 10:44:03,831 - DEBUG : Reloading misc
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 10:44:03,832 - DEBUG : Reloaded misc
2021-07-27 10:44:03,832 - DEBUG : Reloading worksheetfuncs
2021-07-27 10:44:03,832 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 10:44:03,838 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 10:44:03,838 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 10:44:03,839 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 10:44:03,839 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 10:44:03,840 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 10:44:03,840 - DEBUG : Reloaded worksheetfuncs
2021-07-27 10:44:03,840 - DEBUG : Reloading menus
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 10:44:03,840 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 10:44:03,840 - DEBUG : Reloaded menus
2021-07-27 10:44:03,840 - DEBUG : Reloading callbacks
2021-07-27 10:44:03,846 - DEBUG : Reloaded callbacks
2021-07-27 10:44:03,846 - DEBUG : Reloading custom_task_panes
2021-07-27 10:44:03,847 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 10:44:03,847 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 10:44:03,847 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 10:44:03,847 - DEBUG : Reloaded custom_task_panes
2021-07-27 10:44:03,848 - DEBUG : Reloading test
2021-07-27 10:44:03,848 - DEBUG : Reloaded test
2021-07-27 10:44:03,848 - DEBUG : Reloading meta_variables
2021-07-27 10:44:03,848 - DEBUG : Reloaded meta_variables
2021-07-27 10:44:03,848 - DEBUG : Reloading dependency error_functions
2021-07-27 10:44:03,848 - DEBUG : Reloaded dependency error_functions
2021-07-27 10:44:03,848 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 10:44:03,848 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 10:44:03,848 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 10:44:03,848 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 10:44:03,848 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 10:44:03,848 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 10:44:03,848 - DEBUG : Reloading dependency examples
2021-07-27 10:44:03,855 - DEBUG : Reloaded dependency examples
2021-07-27 10:44:03,855 - DEBUG : Reloading ribbon_functions
2021-07-27 10:44:03,855 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001C600B1B760>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001C600B6F220>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001C600B84220>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001C600C11B50>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001C600BB8E50>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001C600C04310>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001C600BA4820>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001C600C04A30>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001C600BF9FD0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001C600BE2CA0>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001C600BE22B0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001C600BD5580>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001C600B62580>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001C600BD0C40>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 10:44:03,855 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 10:44:03,855 - DEBUG : Reloaded ribbon_functions
2021-07-27 10:44:03,855 - DEBUG : Reloading debugging
2021-07-27 10:44:03,855 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 10:44:03,855 - DEBUG : Reloaded debugging
2021-07-27 10:44:03,894 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 10:44:03,900 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 10:44:03,917 - INFO : This product is licensed to 
2021-07-27 10:44:03,917 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 10:44:03,919 - DEBUG : Calling pyxll._post_open.
2021-07-27 10:44:03,919 - DEBUG : Binding Python functions to Excel
2021-07-27 10:44:03,919 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 10:44:03,919 - DEBUG :     - pyxll_version
2021-07-27 10:44:03,919 - DEBUG :     - python_version
2021-07-27 10:44:03,920 - DEBUG :     - win32api_is_installed
2021-07-27 10:44:03,920 - DEBUG :     - win32com_is_installed
2021-07-27 10:44:03,920 - DEBUG :     - numpy_is_installed
2021-07-27 10:44:03,920 - DEBUG :     - pyxll_logfile
2021-07-27 10:44:03,920 - DEBUG :     - get_formula
2021-07-27 10:44:03,920 - DEBUG :     - get_array_formula
2021-07-27 10:44:03,920 - DEBUG :     - get_last_error
2021-07-27 10:44:03,920 - DEBUG :     - basic_pyxll_function_1
2021-07-27 10:44:03,920 - DEBUG :     - basic_pyxll_function_2
2021-07-27 10:44:03,921 - DEBUG :     - basic_pyxll_function_3
2021-07-27 10:44:03,921 - DEBUG :     - var_pyxll_function_1
2021-07-27 10:44:03,921 - DEBUG :     - var_pyxll_function_2
2021-07-27 10:44:03,921 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 10:44:03,921 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 10:44:03,921 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 10:44:03,921 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 10:44:03,921 - DEBUG :     - xl_cell_example
2021-07-27 10:44:03,921 - DEBUG :     - recalc_on_open_test
2021-07-27 10:44:03,921 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 10:44:03,921 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 10:44:03,921 - DEBUG :     - one_cell_one_sim
2021-07-27 10:44:03,921 - DEBUG :     - one_row_one_sim
2021-07-27 10:44:03,925 - DEBUG : Adding menus to Excel:
2021-07-27 10:44:03,925 - DEBUG :   - PyXLL
2021-07-27 10:44:03,925 - DEBUG :     - Reload PyXLL
2021-07-27 10:44:03,925 - DEBUG :     - Another example menu item
2021-07-27 10:44:03,925 - DEBUG :     - More Examples
2021-07-27 10:44:03,925 - DEBUG :       - Click me
2021-07-27 10:44:03,925 - DEBUG :       - Unicode Test
2021-07-27 10:44:03,925 - DEBUG :     - Open log file
2021-07-27 10:44:03,925 - DEBUG :     - Attach To VS Code
2021-07-27 10:44:03,925 - DEBUG :     - Custom Task Panes
2021-07-27 10:44:03,925 - DEBUG :       - Qt
2021-07-27 10:44:03,925 - DEBUG :       - Tk
2021-07-27 10:44:03,925 - DEBUG :       - Wx
2021-07-27 10:44:03,925 - DEBUG :     - Example Menu Item 1
2021-07-27 10:44:03,925 - DEBUG :     - Show last error
2021-07-27 10:44:03,925 - DEBUG :     - About PyXLL...
2021-07-27 10:44:03,925 - DEBUG :   - PyXLL example menu
2021-07-27 10:44:03,925 - DEBUG :     - Click me
2021-07-27 10:44:03,932 - DEBUG : Finished binding Python functions
2021-07-27 10:44:03,932 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 10:44:04,735 - DEBUG : pyxll._post_open complete.
2021-07-27 10:44:04,741 - DEBUG : PyXLL initialization complete.
2021-07-27 10:44:04,743 - DEBUG : Loading PyXLL COM Addin
2021-07-27 10:44:04,743 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 10:44:04,744 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 10:44:04,799 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 13:23:25,077 - ERROR : Error calling ribbon function 'ribbon_functions.cell_value_simulate'
2021-07-27 13:23:26,347 - ERROR : Traceback (most recent call last):
2021-07-27 13:23:26,351 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 525, in cell_value_simulate
2021-07-27 13:23:26,354 - ERROR :     single_simulation(control=control, address=address, id_location=id_location)
2021-07-27 13:23:26,354 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 545, in single_simulation
2021-07-27 13:23:26,355 - ERROR :     xl.ActiveSheet.Range(address).Value = block_input_simulation(control=control, range_data=address,screen_freezing=screen_freeze_disabled, id_location=id_location)
2021-07-27 13:23:26,356 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 609, in block_input_simulation
2021-07-27 13:23:26,357 - ERROR :     if type(data[0]) == str:
2021-07-27 13:23:26,358 - ERROR : TypeError: 'NoneType' object is not subscriptable
2021-07-27 13:28:09,958 - DEBUG : Closing PyXLL Python module.
2021-07-27 13:28:09,963 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 13:28:09,964 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 13:28:09,965 - DEBUG : PyXLL Python module closed.
2021-07-27 13:28:12,610 - DEBUG : 
Tue Jul 27 13:28:12 2021
---------- PyXLL Stopped ----------
2021-07-27 13:28:17,525 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 13:28:17,525 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 13:28:17,525 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 13:28:17,525 - DEBUG : -------- PyXLL config --------
2021-07-27 13:28:17,525 - DEBUG : [LOG]
2021-07-27 13:28:17,525 - DEBUG : encoding = utf-8
2021-07-27 13:28:17,525 - DEBUG : file = pyxll.20210727.log
2021-07-27 13:28:17,525 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 13:28:17,525 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 13:28:17,525 - DEBUG : verbosity = debug
2021-07-27 13:28:17,525 - DEBUG : 
2021-07-27 13:28:17,525 - DEBUG : [PYTHON]
2021-07-27 13:28:17,525 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 13:28:17,525 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 13:28:17,525 - DEBUG : 
2021-07-27 13:28:17,525 - DEBUG : [PYXLL]
2021-07-27 13:28:17,525 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 13:28:17,525 - DEBUG : developer_mode = 1
2021-07-27 13:28:17,525 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 13:28:17,525 - DEBUG : modules = 
2021-07-27 13:28:17,525 - DEBUG :     misc
2021-07-27 13:28:17,525 - DEBUG :     worksheetfuncs
2021-07-27 13:28:17,525 - DEBUG :     menus
2021-07-27 13:28:17,525 - DEBUG :     callbacks
2021-07-27 13:28:17,525 - DEBUG :     custom_task_panes
2021-07-27 13:28:17,525 - DEBUG :     test
2021-07-27 13:28:17,525 - DEBUG :     ribbon_functions
2021-07-27 13:28:17,525 - DEBUG :     debugging
2021-07-27 13:28:17,525 - DEBUG :     meta_variables
2021-07-27 13:28:17,525 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 13:28:17,525 - DEBUG : ------------------------------
2021-07-27 13:28:17,526 - DEBUG : Attempting to load python38.dll
2021-07-27 13:28:17,528 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-27 13:28:17,530 - DEBUG : Checking Py_IsInitialized...
2021-07-27 13:28:17,530 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-27 13:28:17,664 - DEBUG : Calling Py_Initialize...
2021-07-27 13:28:17,839 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-27 13:28:17,839 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-27 13:28:17,840 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 13:28:17,840 - DEBUG : Python is initialized.
2021-07-27 13:28:17,840 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-27 13:28:17,843 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-27 13:28:17,843 - DEBUG : Looking for module 'site'...
2021-07-27 13:28:17,872 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-27 13:28:17,876 - DEBUG : Importing pyxll module
2021-07-27 13:28:17,877 - DEBUG :   Python version is 3.8.0.final.0
2021-07-27 13:28:17,877 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-27 13:28:17,877 - DEBUG :   Detected Python3
2021-07-27 13:28:17,930 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-27 13:28:17,935 - DEBUG : pyxll module imported
2021-07-27 13:28:17,936 - DEBUG : Initializing PyXLL Python module.
2021-07-27 13:28:17,936 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 13:28:17,936 - DEBUG : PyXLL Python module initialized.
2021-07-27 13:28:17,939 - DEBUG : Functions will not be cancellable by default.
2021-07-27 13:28:17,939 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 13:28:18,205 - DEBUG : Importing misc
2021-07-27 13:28:18,206 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 13:28:18,207 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 13:28:18,207 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 13:28:18,207 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 13:28:18,208 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 13:28:18,208 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 13:28:18,209 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 13:28:18,209 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 13:28:18,209 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 13:28:18,209 - DEBUG : Imported misc
2021-07-27 13:28:18,209 - DEBUG : Importing worksheetfuncs
2021-07-27 13:28:18,211 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 13:28:18,211 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 13:28:18,212 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 13:28:18,212 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 13:28:18,212 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 13:28:18,213 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 13:28:18,213 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 13:28:18,213 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 13:28:18,214 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 13:28:18,214 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 13:28:18,214 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 13:28:18,214 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 13:28:18,214 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 13:28:18,214 - DEBUG : Imported worksheetfuncs
2021-07-27 13:28:18,215 - DEBUG : Importing menus
2021-07-27 13:28:18,223 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 13:28:18,223 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 13:28:18,223 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 13:28:18,223 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 13:28:18,223 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 13:28:18,224 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 13:28:18,224 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 13:28:18,224 - DEBUG : Imported menus
2021-07-27 13:28:18,224 - DEBUG : Importing callbacks
2021-07-27 13:28:18,225 - DEBUG : Imported callbacks
2021-07-27 13:28:18,225 - DEBUG : Importing custom_task_panes
2021-07-27 13:28:18,226 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 13:28:18,227 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 13:28:18,227 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 13:28:18,227 - DEBUG : Imported custom_task_panes
2021-07-27 13:28:18,227 - DEBUG : Importing test
2021-07-27 13:28:18,228 - DEBUG : Imported test
2021-07-27 13:28:18,228 - DEBUG : Importing ribbon_functions
2021-07-27 13:28:19,249 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-27 13:28:19,273 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-27 13:28:19,273 - DEBUG : matplotlib version 3.4.2
2021-07-27 13:28:19,273 - DEBUG : interactive is False
2021-07-27 13:28:19,273 - DEBUG : platform is win32
2021-07-27 13:28:19,273 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_a20000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_a20000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-27 13:28:19,318 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-27 13:28:19,324 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-27 13:28:19,491 - DEBUG : Loaded backend agg version unknown.
2021-07-27 13:28:19,492 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000128FA10FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000128FA16DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000128FA17DB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000128FA211310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000128FA1C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000128FA1F8D00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000128FA1A7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000128FA2058E0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000128FA1F86D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000128FA1E4490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000128FA1D2CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000128FA1D6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000128FA160FA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000128FA1D63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000128FA10FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000128FA16DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000128FA17DB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000128FA211310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000128FA1C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000128FA1F8D00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000128FA1A7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000128FA2058E0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000128FA1F86D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000128FA1E4490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000128FA1D2CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000128FA1D6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000128FA160FA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000128FA1D63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 13:28:19,492 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 13:28:19,492 - DEBUG : Imported ribbon_functions
2021-07-27 13:28:19,492 - DEBUG : Importing debugging
2021-07-27 13:28:19,948 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 13:28:19,948 - DEBUG : Imported debugging
2021-07-27 13:28:19,948 - DEBUG : Importing meta_variables
2021-07-27 13:28:19,948 - DEBUG : Imported meta_variables
2021-07-27 13:28:19,977 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 13:28:19,987 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 13:28:19,999 - INFO : This product is licensed to 
2021-07-27 13:28:19,999 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 13:28:20,000 - DEBUG : Calling pyxll._post_open.
2021-07-27 13:28:20,000 - DEBUG : Binding Python functions to Excel
2021-07-27 13:28:20,000 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 13:28:20,001 - DEBUG :     - pyxll_version
2021-07-27 13:28:20,001 - DEBUG :     - python_version
2021-07-27 13:28:20,001 - DEBUG :     - win32api_is_installed
2021-07-27 13:28:20,001 - DEBUG :     - win32com_is_installed
2021-07-27 13:28:20,001 - DEBUG :     - numpy_is_installed
2021-07-27 13:28:20,001 - DEBUG :     - pyxll_logfile
2021-07-27 13:28:20,001 - DEBUG :     - get_formula
2021-07-27 13:28:20,001 - DEBUG :     - get_array_formula
2021-07-27 13:28:20,001 - DEBUG :     - get_last_error
2021-07-27 13:28:20,001 - DEBUG :     - basic_pyxll_function_1
2021-07-27 13:28:20,001 - DEBUG :     - basic_pyxll_function_2
2021-07-27 13:28:20,001 - DEBUG :     - basic_pyxll_function_3
2021-07-27 13:28:20,001 - DEBUG :     - var_pyxll_function_1
2021-07-27 13:28:20,001 - DEBUG :     - var_pyxll_function_2
2021-07-27 13:28:20,001 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 13:28:20,001 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 13:28:20,001 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 13:28:20,001 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 13:28:20,001 - DEBUG :     - xl_cell_example
2021-07-27 13:28:20,001 - DEBUG :     - recalc_on_open_test
2021-07-27 13:28:20,001 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 13:28:20,001 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 13:28:20,002 - DEBUG :     - one_cell_one_sim
2021-07-27 13:28:20,002 - DEBUG :     - one_row_one_sim
2021-07-27 13:28:20,012 - DEBUG : Adding menus to Excel:
2021-07-27 13:28:20,012 - DEBUG :   - PyXLL
2021-07-27 13:28:20,012 - DEBUG :     - Reload PyXLL
2021-07-27 13:28:20,012 - DEBUG :     - Another example menu item
2021-07-27 13:28:20,012 - DEBUG :     - More Examples
2021-07-27 13:28:20,012 - DEBUG :       - Click me
2021-07-27 13:28:20,012 - DEBUG :       - Unicode Test
2021-07-27 13:28:20,012 - DEBUG :     - Open log file
2021-07-27 13:28:20,012 - DEBUG :     - Attach To VS Code
2021-07-27 13:28:20,012 - DEBUG :     - Custom Task Panes
2021-07-27 13:28:20,012 - DEBUG :       - Qt
2021-07-27 13:28:20,012 - DEBUG :       - Tk
2021-07-27 13:28:20,012 - DEBUG :       - Wx
2021-07-27 13:28:20,012 - DEBUG :     - Example Menu Item 1
2021-07-27 13:28:20,012 - DEBUG :     - Show last error
2021-07-27 13:28:20,012 - DEBUG :     - About PyXLL...
2021-07-27 13:28:20,012 - DEBUG :   - PyXLL example menu
2021-07-27 13:28:20,012 - DEBUG :     - Click me
2021-07-27 13:28:20,041 - DEBUG : Finished binding Python functions
2021-07-27 13:28:20,041 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-27 13:28:20,041 - DEBUG : pyxll._post_open complete.
2021-07-27 13:28:20,043 - DEBUG : PyXLL initialization complete.
2021-07-27 13:28:22,851 - DEBUG : Loading PyXLL COM Addin
2021-07-27 13:28:22,851 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 13:28:22,864 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 13:28:22,883 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 13:28:51,462 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,462 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,478 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,479 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,490 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,491 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,492 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,494 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,495 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 13:28:51,498 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,499 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,500 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,501 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,506 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,507 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,508 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,514 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-27 13:28:51,515 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,516 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-27 13:28:51,522 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-27 13:28:51,523 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-27 13:28:51,523 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,523 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-27 13:28:51,523 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-27 13:28:51,523 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-27 13:28:51,523 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-27 13:33:27,825 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 13:33:27,826 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 13:33:27,826 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 13:33:27,826 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 13:33:27,826 - DEBUG : -------- PyXLL config --------
2021-07-27 13:33:27,826 - DEBUG : [LOG]
2021-07-27 13:33:27,826 - DEBUG : encoding = utf-8
2021-07-27 13:33:27,826 - DEBUG : file = pyxll.20210727.log
2021-07-27 13:33:27,826 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 13:33:27,826 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 13:33:27,826 - DEBUG : verbosity = debug
2021-07-27 13:33:27,826 - DEBUG : 
2021-07-27 13:33:27,826 - DEBUG : [PYTHON]
2021-07-27 13:33:27,826 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 13:33:27,826 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 13:33:27,826 - DEBUG : 
2021-07-27 13:33:27,826 - DEBUG : [PYXLL]
2021-07-27 13:33:27,826 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 13:33:27,826 - DEBUG : developer_mode = 1
2021-07-27 13:33:27,826 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 13:33:27,826 - DEBUG : modules = 
2021-07-27 13:33:27,826 - DEBUG :     misc
2021-07-27 13:33:27,826 - DEBUG :     worksheetfuncs
2021-07-27 13:33:27,826 - DEBUG :     menus
2021-07-27 13:33:27,826 - DEBUG :     callbacks
2021-07-27 13:33:27,826 - DEBUG :     custom_task_panes
2021-07-27 13:33:27,826 - DEBUG :     test
2021-07-27 13:33:27,826 - DEBUG :     ribbon_functions
2021-07-27 13:33:27,826 - DEBUG :     debugging
2021-07-27 13:33:27,826 - DEBUG :     meta_variables
2021-07-27 13:33:27,826 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 13:33:27,826 - DEBUG : ------------------------------
2021-07-27 13:33:27,826 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 13:33:27,826 - DEBUG : Initializing PyXLL Python module.
2021-07-27 13:33:27,826 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 13:33:27,827 - DEBUG : PyXLL Python module initialized.
2021-07-27 13:33:27,828 - DEBUG : Functions will not be cancellable by default.
2021-07-27 13:33:27,828 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 13:33:27,828 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 13:33:27,860 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 13:33:27,860 - DEBUG : Reloading misc
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 13:33:27,861 - DEBUG : Reloaded misc
2021-07-27 13:33:27,861 - DEBUG : Reloading worksheetfuncs
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 13:33:27,861 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 13:33:27,861 - DEBUG : Reloaded worksheetfuncs
2021-07-27 13:33:27,861 - DEBUG : Reloading menus
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 13:33:27,861 - DEBUG : Reloaded menus
2021-07-27 13:33:27,861 - DEBUG : Reloading callbacks
2021-07-27 13:33:27,861 - DEBUG : Reloaded callbacks
2021-07-27 13:33:27,861 - DEBUG : Reloading custom_task_panes
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 13:33:27,861 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 13:33:27,861 - DEBUG : Reloaded custom_task_panes
2021-07-27 13:33:27,861 - DEBUG : Reloading test
2021-07-27 13:33:27,861 - DEBUG : Reloaded test
2021-07-27 13:33:27,861 - DEBUG : Reloading meta_variables
2021-07-27 13:33:27,861 - DEBUG : Reloaded meta_variables
2021-07-27 13:33:27,861 - DEBUG : Reloading dependency error_functions
2021-07-27 13:33:27,861 - DEBUG : Reloaded dependency error_functions
2021-07-27 13:33:27,861 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 13:33:27,861 - ERROR : Error reloading 'tkinter_frames'
Traceback (most recent call last):
  File "build/x64/py38/res/release/pyxll.py", line 835, in _open
  File "build/x64/py38/res/release/pyxll.py", line 8047, in reload
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\imp.py", line 314, in reload
    return importlib.reload(module)
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\importlib\__init__.py", line 169, in reload
    _bootstrap._exec(spec, module)
  File "<frozen importlib._bootstrap>", line 604, in _exec
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83
    self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection) = self.entry_value.get() + "," + self.distribution_id
    ^
SyntaxError: cannot assign to function call
2021-07-27 13:33:27,879 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 13:33:27,880 - ERROR : Error reloading 'examples.tkinter_frames'
Traceback (most recent call last):
  File "build/x64/py38/res/release/pyxll.py", line 835, in _open
  File "build/x64/py38/res/release/pyxll.py", line 8047, in reload
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\imp.py", line 314, in reload
    return importlib.reload(module)
  File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\importlib\__init__.py", line 169, in reload
    _bootstrap._exec(spec, module)
  File "<frozen importlib._bootstrap>", line 604, in _exec
  File "<frozen importlib._bootstrap_external>", line 779, in exec_module
  File "<frozen importlib._bootstrap_external>", line 916, in get_code
  File "<frozen importlib._bootstrap_external>", line 846, in source_to_code
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83
    self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection) = self.entry_value.get() + "," + self.distribution_id
    ^
SyntaxError: cannot assign to function call
2021-07-27 13:33:27,880 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 13:33:27,880 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 13:33:27,880 - DEBUG : Reloading dependency examples
2021-07-27 13:33:27,880 - DEBUG : Reloaded dependency examples
2021-07-27 13:33:27,880 - ERROR : Not reloading ribbon_functions because of previous failure to reload tkinter_frames
2021-07-27 13:33:27,880 - DEBUG : Reloading debugging
2021-07-27 13:33:27,880 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 13:33:27,880 - DEBUG : Reloaded debugging
2021-07-27 13:33:32,367 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 13:33:32,370 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 13:33:32,384 - INFO : This product is licensed to 
2021-07-27 13:33:32,384 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 13:33:32,386 - DEBUG : Calling pyxll._post_open.
2021-07-27 13:33:32,386 - DEBUG : Binding Python functions to Excel
2021-07-27 13:33:32,386 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 13:33:32,386 - DEBUG :     - one_cell_one_sim
2021-07-27 13:33:32,386 - DEBUG :     - one_row_one_sim
2021-07-27 13:33:32,387 - DEBUG :     - pyxll_version
2021-07-27 13:33:32,387 - DEBUG :     - python_version
2021-07-27 13:33:32,387 - DEBUG :     - win32api_is_installed
2021-07-27 13:33:32,387 - DEBUG :     - win32com_is_installed
2021-07-27 13:33:32,387 - DEBUG :     - numpy_is_installed
2021-07-27 13:33:32,387 - DEBUG :     - pyxll_logfile
2021-07-27 13:33:32,387 - DEBUG :     - get_formula
2021-07-27 13:33:32,387 - DEBUG :     - get_array_formula
2021-07-27 13:33:32,387 - DEBUG :     - get_last_error
2021-07-27 13:33:32,387 - DEBUG :     - basic_pyxll_function_1
2021-07-27 13:33:32,387 - DEBUG :     - basic_pyxll_function_2
2021-07-27 13:33:32,387 - DEBUG :     - basic_pyxll_function_3
2021-07-27 13:33:32,387 - DEBUG :     - var_pyxll_function_1
2021-07-27 13:33:32,387 - DEBUG :     - var_pyxll_function_2
2021-07-27 13:33:32,387 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 13:33:32,387 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 13:33:32,387 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 13:33:32,388 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 13:33:32,388 - DEBUG :     - xl_cell_example
2021-07-27 13:33:32,388 - DEBUG :     - recalc_on_open_test
2021-07-27 13:33:32,388 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 13:33:32,388 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 13:33:32,391 - DEBUG : Adding menus to Excel:
2021-07-27 13:33:32,391 - DEBUG :   - PyXLL
2021-07-27 13:33:32,391 - DEBUG :     - Reload PyXLL
2021-07-27 13:33:32,391 - DEBUG :     - Another example menu item
2021-07-27 13:33:32,391 - DEBUG :     - More Examples
2021-07-27 13:33:32,391 - DEBUG :       - Click me
2021-07-27 13:33:32,391 - DEBUG :       - Unicode Test
2021-07-27 13:33:32,391 - DEBUG :     - Open log file
2021-07-27 13:33:32,391 - DEBUG :     - Attach To VS Code
2021-07-27 13:33:32,391 - DEBUG :     - Custom Task Panes
2021-07-27 13:33:32,391 - DEBUG :       - Qt
2021-07-27 13:33:32,391 - DEBUG :       - Tk
2021-07-27 13:33:32,391 - DEBUG :       - Wx
2021-07-27 13:33:32,391 - DEBUG :     - Example Menu Item 1
2021-07-27 13:33:32,391 - DEBUG :     - Show last error
2021-07-27 13:33:32,391 - DEBUG :     - About PyXLL...
2021-07-27 13:33:32,391 - DEBUG :   - PyXLL example menu
2021-07-27 13:33:32,391 - DEBUG :     - Click me
2021-07-27 13:33:32,397 - DEBUG : Finished binding Python functions
2021-07-27 13:33:32,397 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 13:33:32,397 - ERROR : Error loading 'tkinter_frames' : cannot assign to function call (tkinter_frames.py, line 83)
2021-07-27 13:33:32,397 - ERROR : Error loading 'examples.tkinter_frames' : cannot assign to function call (tkinter_frames.py, line 83)
2021-07-27 13:33:32,397 - DEBUG : pyxll._post_open complete.
2021-07-27 13:33:32,398 - DEBUG : PyXLL initialization complete.
2021-07-27 13:33:32,401 - DEBUG : Loading PyXLL COM Addin
2021-07-27 13:33:32,401 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 13:33:32,402 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 13:33:32,458 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 13:33:46,313 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-27 13:33:46,315 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-27 13:33:46,315 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-27 13:33:46,315 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-27 13:33:46,315 - DEBUG : -------- PyXLL config --------
2021-07-27 13:33:46,315 - DEBUG : [LOG]
2021-07-27 13:33:46,315 - DEBUG : encoding = utf-8
2021-07-27 13:33:46,315 - DEBUG : file = pyxll.20210727.log
2021-07-27 13:33:46,315 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-27 13:33:46,315 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-27 13:33:46,315 - DEBUG : verbosity = debug
2021-07-27 13:33:46,315 - DEBUG : 
2021-07-27 13:33:46,315 - DEBUG : [PYTHON]
2021-07-27 13:33:46,315 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-27 13:33:46,315 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-27 13:33:46,315 - DEBUG : 
2021-07-27 13:33:46,315 - DEBUG : [PYXLL]
2021-07-27 13:33:46,315 - DEBUG : clear_object_cache_on_reload = 1
2021-07-27 13:33:46,315 - DEBUG : developer_mode = 1
2021-07-27 13:33:46,315 - DEBUG : error_handler = pyxll.error_handler
2021-07-27 13:33:46,315 - DEBUG : modules = 
2021-07-27 13:33:46,315 - DEBUG :     misc
2021-07-27 13:33:46,315 - DEBUG :     worksheetfuncs
2021-07-27 13:33:46,315 - DEBUG :     menus
2021-07-27 13:33:46,315 - DEBUG :     callbacks
2021-07-27 13:33:46,315 - DEBUG :     custom_task_panes
2021-07-27 13:33:46,315 - DEBUG :     test
2021-07-27 13:33:46,315 - DEBUG :     ribbon_functions
2021-07-27 13:33:46,315 - DEBUG :     debugging
2021-07-27 13:33:46,315 - DEBUG :     meta_variables
2021-07-27 13:33:46,315 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-27 13:33:46,315 - DEBUG : ------------------------------
2021-07-27 13:33:46,315 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-27 13:33:46,315 - DEBUG : Initializing PyXLL Python module.
2021-07-27 13:33:46,315 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-27 13:33:46,316 - DEBUG : PyXLL Python module initialized.
2021-07-27 13:33:46,316 - DEBUG : Functions will not be cancellable by default.
2021-07-27 13:33:46,316 - DEBUG : Error handler set to pyxll.error_handler
2021-07-27 13:33:46,316 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-27 13:33:46,338 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging
2021-07-27 13:33:46,338 - DEBUG : Reloading misc
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-27 13:33:46,338 - DEBUG : Reloaded misc
2021-07-27 13:33:46,338 - DEBUG : Reloading worksheetfuncs
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-27 13:33:46,338 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-27 13:33:46,354 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-27 13:33:46,355 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-27 13:33:46,355 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-27 13:33:46,355 - DEBUG : Reloaded worksheetfuncs
2021-07-27 13:33:46,355 - DEBUG : Reloading menus
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-27 13:33:46,355 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-27 13:33:46,355 - DEBUG : Reloaded menus
2021-07-27 13:33:46,355 - DEBUG : Reloading callbacks
2021-07-27 13:33:46,355 - DEBUG : Reloaded callbacks
2021-07-27 13:33:46,355 - DEBUG : Reloading custom_task_panes
2021-07-27 13:33:46,357 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-27 13:33:46,357 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-27 13:33:46,357 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-27 13:33:46,357 - DEBUG : Reloaded custom_task_panes
2021-07-27 13:33:46,357 - DEBUG : Reloading test
2021-07-27 13:33:46,358 - DEBUG : Reloaded test
2021-07-27 13:33:46,358 - DEBUG : Reloading meta_variables
2021-07-27 13:33:46,358 - DEBUG : Reloaded meta_variables
2021-07-27 13:33:46,358 - DEBUG : Reloading dependency error_functions
2021-07-27 13:33:46,358 - DEBUG : Reloaded dependency error_functions
2021-07-27 13:33:46,358 - DEBUG : Reloading dependency tkinter_frames
2021-07-27 13:33:46,362 - DEBUG : Reloaded dependency tkinter_frames
2021-07-27 13:33:46,363 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-27 13:33:46,369 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-27 13:33:46,369 - DEBUG : Reloading dependency examples.meta_variables
2021-07-27 13:33:46,370 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-27 13:33:46,370 - DEBUG : Reloading dependency examples
2021-07-27 13:33:46,370 - DEBUG : Reloaded dependency examples
2021-07-27 13:33:46,370 - DEBUG : Reloading ribbon_functions
2021-07-27 13:33:46,370 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000128FA10FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000128FA16DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000128FA17DB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000128FA211310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000128FA1C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000128FA1F8D00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000128FA1A7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000128FA2058E0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000128FA1F86D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000128FA1E4490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000128FA1D2CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000128FA1D6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000128FA160FA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000128FA1D63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000128FA10FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000128FA16DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000128FA17DB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000128FA211310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000128FA1C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000128FA1F8D00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000128FA1A7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000128FA2058E0>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000128FA1F86D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000128FA1E4490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000128FA1D2CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000128FA1D6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000128FA160FA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000128FA1D63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-27 13:33:46,370 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-27 13:33:46,370 - DEBUG : Reloaded ribbon_functions
2021-07-27 13:33:46,370 - DEBUG : Reloading debugging
2021-07-27 13:33:46,370 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-27 13:33:46,370 - DEBUG : Reloaded debugging
2021-07-27 13:33:46,404 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-27 13:33:46,408 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Developer Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchyl"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-27 13:33:46,423 - INFO : This product is licensed to 
2021-07-27 13:33:46,423 - INFO : The license will expire on 2021-08-21 (25 days left)
2021-07-27 13:33:46,425 - DEBUG : Calling pyxll._post_open.
2021-07-27 13:33:46,425 - DEBUG : Binding Python functions to Excel
2021-07-27 13:33:46,425 - DEBUG : Adding worksheet functions to Excel:
2021-07-27 13:33:46,425 - DEBUG :     - pyxll_version
2021-07-27 13:33:46,425 - DEBUG :     - python_version
2021-07-27 13:33:46,425 - DEBUG :     - win32api_is_installed
2021-07-27 13:33:46,425 - DEBUG :     - win32com_is_installed
2021-07-27 13:33:46,425 - DEBUG :     - numpy_is_installed
2021-07-27 13:33:46,425 - DEBUG :     - pyxll_logfile
2021-07-27 13:33:46,425 - DEBUG :     - get_formula
2021-07-27 13:33:46,425 - DEBUG :     - get_array_formula
2021-07-27 13:33:46,425 - DEBUG :     - get_last_error
2021-07-27 13:33:46,425 - DEBUG :     - basic_pyxll_function_1
2021-07-27 13:33:46,425 - DEBUG :     - basic_pyxll_function_2
2021-07-27 13:33:46,425 - DEBUG :     - basic_pyxll_function_3
2021-07-27 13:33:46,426 - DEBUG :     - var_pyxll_function_1
2021-07-27 13:33:46,426 - DEBUG :     - var_pyxll_function_2
2021-07-27 13:33:46,426 - DEBUG :     - datetime_pyxll_function_1
2021-07-27 13:33:46,426 - DEBUG :     - datetime_pyxll_function_2
2021-07-27 13:33:46,426 - DEBUG :     - datetime_pyxll_function_3
2021-07-27 13:33:46,426 - DEBUG :     - datetime_pyxll_function_4
2021-07-27 13:33:46,426 - DEBUG :     - xl_cell_example
2021-07-27 13:33:46,426 - DEBUG :     - recalc_on_open_test
2021-07-27 13:33:46,426 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-27 13:33:46,426 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-27 13:33:46,426 - DEBUG :     - one_cell_one_sim
2021-07-27 13:33:46,426 - DEBUG :     - one_row_one_sim
2021-07-27 13:33:46,429 - DEBUG : Adding menus to Excel:
2021-07-27 13:33:46,429 - DEBUG :   - PyXLL
2021-07-27 13:33:46,429 - DEBUG :     - Reload PyXLL
2021-07-27 13:33:46,429 - DEBUG :     - Another example menu item
2021-07-27 13:33:46,429 - DEBUG :     - More Examples
2021-07-27 13:33:46,429 - DEBUG :       - Click me
2021-07-27 13:33:46,429 - DEBUG :       - Unicode Test
2021-07-27 13:33:46,429 - DEBUG :     - Open log file
2021-07-27 13:33:46,429 - DEBUG :     - Attach To VS Code
2021-07-27 13:33:46,429 - DEBUG :     - Custom Task Panes
2021-07-27 13:33:46,429 - DEBUG :       - Qt
2021-07-27 13:33:46,429 - DEBUG :       - Tk
2021-07-27 13:33:46,429 - DEBUG :       - Wx
2021-07-27 13:33:46,429 - DEBUG :     - Example Menu Item 1
2021-07-27 13:33:46,429 - DEBUG :     - Show last error
2021-07-27 13:33:46,429 - DEBUG :     - About PyXLL...
2021-07-27 13:33:46,429 - DEBUG :   - PyXLL example menu
2021-07-27 13:33:46,429 - DEBUG :     - Click me
2021-07-27 13:33:46,436 - DEBUG : Finished binding Python functions
2021-07-27 13:33:46,436 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-27 13:33:47,371 - DEBUG : pyxll._post_open complete.
2021-07-27 13:33:47,372 - DEBUG : PyXLL initialization complete.
2021-07-27 13:33:47,375 - DEBUG : Loading PyXLL COM Addin
2021-07-27 13:33:47,375 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-27 13:33:47,377 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-27 13:33:47,427 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-27 13:34:10,744 - DEBUG : Closing PyXLL Python module.
2021-07-27 13:34:10,744 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-27 13:34:10,744 - INFO : callbacks.on_close: PyXLL is closing
2021-07-27 13:34:10,744 - DEBUG : PyXLL Python module closed.
2021-07-27 13:34:14,128 - DEBUG : 
Tue Jul 27 13:34:14 2021
---------- PyXLL Stopped ----------
