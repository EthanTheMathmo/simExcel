2021-07-28 09:37:52,234 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 09:37:52,234 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 09:37:52,235 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 09:37:52,235 - DEBUG : -------- PyXLL config --------
2021-07-28 09:37:52,235 - DEBUG : [LOG]
2021-07-28 09:37:52,235 - DEBUG : encoding = utf-8
2021-07-28 09:37:52,235 - DEBUG : file = pyxll.20210728.log
2021-07-28 09:37:52,235 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 09:37:52,235 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 09:37:52,235 - DEBUG : verbosity = debug
2021-07-28 09:37:52,235 - DEBUG : 
2021-07-28 09:37:52,235 - DEBUG : [PYTHON]
2021-07-28 09:37:52,235 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 09:37:52,235 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 09:37:52,235 - DEBUG : 
2021-07-28 09:37:52,235 - DEBUG : [PYXLL]
2021-07-28 09:37:52,235 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 09:37:52,235 - DEBUG : developer_mode = 1
2021-07-28 09:37:52,235 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 09:37:52,235 - DEBUG : modules = 
2021-07-28 09:37:52,235 - DEBUG :     misc
2021-07-28 09:37:52,235 - DEBUG :     worksheetfuncs
2021-07-28 09:37:52,235 - DEBUG :     menus
2021-07-28 09:37:52,235 - DEBUG :     callbacks
2021-07-28 09:37:52,235 - DEBUG :     custom_task_panes
2021-07-28 09:37:52,235 - DEBUG :     test
2021-07-28 09:37:52,235 - DEBUG :     ribbon_functions
2021-07-28 09:37:52,235 - DEBUG :     debugging
2021-07-28 09:37:52,235 - DEBUG :     meta_variables
2021-07-28 09:37:52,235 - DEBUG :     selectiontools
2021-07-28 09:37:52,235 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 09:37:52,235 - DEBUG : ------------------------------
2021-07-28 09:37:52,237 - DEBUG : 
Wed Jul 28 09:37:52 2021
---------- PyXLL Stopped ----------
2021-07-28 09:37:52,270 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 09:37:52,270 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 09:37:52,271 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 09:37:52,271 - DEBUG : -------- PyXLL config --------
2021-07-28 09:37:52,271 - DEBUG : [LOG]
2021-07-28 09:37:52,271 - DEBUG : encoding = utf-8
2021-07-28 09:37:52,271 - DEBUG : file = pyxll.20210728.log
2021-07-28 09:37:52,271 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 09:37:52,271 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 09:37:52,271 - DEBUG : verbosity = debug
2021-07-28 09:37:52,271 - DEBUG : 
2021-07-28 09:37:52,271 - DEBUG : [PYTHON]
2021-07-28 09:37:52,271 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 09:37:52,271 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 09:37:52,271 - DEBUG : 
2021-07-28 09:37:52,271 - DEBUG : [PYXLL]
2021-07-28 09:37:52,271 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 09:37:52,271 - DEBUG : developer_mode = 1
2021-07-28 09:37:52,271 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 09:37:52,271 - DEBUG : modules = 
2021-07-28 09:37:52,271 - DEBUG :     misc
2021-07-28 09:37:52,271 - DEBUG :     worksheetfuncs
2021-07-28 09:37:52,271 - DEBUG :     menus
2021-07-28 09:37:52,271 - DEBUG :     callbacks
2021-07-28 09:37:52,271 - DEBUG :     custom_task_panes
2021-07-28 09:37:52,271 - DEBUG :     test
2021-07-28 09:37:52,271 - DEBUG :     ribbon_functions
2021-07-28 09:37:52,271 - DEBUG :     debugging
2021-07-28 09:37:52,271 - DEBUG :     meta_variables
2021-07-28 09:37:52,271 - DEBUG :     selectiontools
2021-07-28 09:37:52,271 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 09:37:52,271 - DEBUG : ------------------------------
2021-07-28 09:37:52,273 - DEBUG : 
Wed Jul 28 09:37:52 2021
---------- PyXLL Stopped ----------
2021-07-28 09:37:55,246 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 09:37:55,247 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 09:37:55,247 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 09:37:55,247 - DEBUG : -------- PyXLL config --------
2021-07-28 09:37:55,247 - DEBUG : [LOG]
2021-07-28 09:37:55,247 - DEBUG : encoding = utf-8
2021-07-28 09:37:55,247 - DEBUG : file = pyxll.20210728.log
2021-07-28 09:37:55,247 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 09:37:55,247 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 09:37:55,247 - DEBUG : verbosity = debug
2021-07-28 09:37:55,247 - DEBUG : 
2021-07-28 09:37:55,247 - DEBUG : [PYTHON]
2021-07-28 09:37:55,247 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 09:37:55,247 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 09:37:55,247 - DEBUG : 
2021-07-28 09:37:55,247 - DEBUG : [PYXLL]
2021-07-28 09:37:55,247 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 09:37:55,247 - DEBUG : developer_mode = 1
2021-07-28 09:37:55,247 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 09:37:55,247 - DEBUG : modules = 
2021-07-28 09:37:55,247 - DEBUG :     misc
2021-07-28 09:37:55,247 - DEBUG :     worksheetfuncs
2021-07-28 09:37:55,247 - DEBUG :     menus
2021-07-28 09:37:55,247 - DEBUG :     callbacks
2021-07-28 09:37:55,247 - DEBUG :     custom_task_panes
2021-07-28 09:37:55,247 - DEBUG :     test
2021-07-28 09:37:55,247 - DEBUG :     ribbon_functions
2021-07-28 09:37:55,247 - DEBUG :     debugging
2021-07-28 09:37:55,247 - DEBUG :     meta_variables
2021-07-28 09:37:55,247 - DEBUG :     selectiontools
2021-07-28 09:37:55,247 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 09:37:55,247 - DEBUG : ------------------------------
2021-07-28 09:37:55,249 - DEBUG : Attempting to load python38.dll
2021-07-28 09:37:55,258 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 09:37:55,261 - DEBUG : Checking Py_IsInitialized...
2021-07-28 09:37:55,261 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 09:37:55,469 - DEBUG : Calling Py_Initialize...
2021-07-28 09:37:55,858 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 09:37:55,859 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 09:37:55,866 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 09:37:55,866 - DEBUG : Python is initialized.
2021-07-28 09:37:55,867 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 09:37:55,870 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 09:37:55,870 - DEBUG : Looking for module 'site'...
2021-07-28 09:37:56,301 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 09:37:56,308 - DEBUG : Importing pyxll module
2021-07-28 09:37:56,308 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 09:37:56,308 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 09:37:56,308 - DEBUG :   Detected Python3
2021-07-28 09:37:56,990 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 09:37:56,998 - DEBUG : pyxll module imported
2021-07-28 09:37:56,998 - DEBUG : Initializing PyXLL Python module.
2021-07-28 09:37:56,998 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 09:37:56,998 - DEBUG : PyXLL Python module initialized.
2021-07-28 09:37:57,010 - DEBUG : Functions will not be cancellable by default.
2021-07-28 09:37:57,010 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 09:37:58,660 - DEBUG : Importing misc
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 09:37:58,676 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 09:37:58,676 - DEBUG : Imported misc
2021-07-28 09:37:58,676 - DEBUG : Importing worksheetfuncs
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 09:37:58,697 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 09:37:58,704 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 09:37:58,704 - DEBUG : Imported worksheetfuncs
2021-07-28 09:37:58,704 - DEBUG : Importing menus
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 09:37:58,811 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 09:37:58,811 - DEBUG : Imported menus
2021-07-28 09:37:58,811 - DEBUG : Importing callbacks
2021-07-28 09:37:58,827 - DEBUG : Imported callbacks
2021-07-28 09:37:58,827 - DEBUG : Importing custom_task_panes
2021-07-28 09:37:58,843 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 09:37:58,843 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 09:37:58,843 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 09:37:58,843 - DEBUG : Imported custom_task_panes
2021-07-28 09:37:58,843 - DEBUG : Importing test
2021-07-28 09:37:58,853 - DEBUG : Imported test
2021-07-28 09:37:58,853 - DEBUG : Importing ribbon_functions
2021-07-28 10:04:42,726 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:04:42,726 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:04:42,727 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:04:42,727 - DEBUG : -------- PyXLL config --------
2021-07-28 10:04:42,727 - DEBUG : [LOG]
2021-07-28 10:04:42,727 - DEBUG : encoding = utf-8
2021-07-28 10:04:42,727 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:04:42,727 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:04:42,727 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:04:42,727 - DEBUG : verbosity = debug
2021-07-28 10:04:42,727 - DEBUG : 
2021-07-28 10:04:42,727 - DEBUG : [PYTHON]
2021-07-28 10:04:42,727 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:04:42,727 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:04:42,727 - DEBUG : 
2021-07-28 10:04:42,727 - DEBUG : [PYXLL]
2021-07-28 10:04:42,727 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:04:42,727 - DEBUG : developer_mode = 1
2021-07-28 10:04:42,727 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:04:42,727 - DEBUG : modules = 
2021-07-28 10:04:42,727 - DEBUG :     misc
2021-07-28 10:04:42,727 - DEBUG :     worksheetfuncs
2021-07-28 10:04:42,727 - DEBUG :     menus
2021-07-28 10:04:42,727 - DEBUG :     callbacks
2021-07-28 10:04:42,727 - DEBUG :     custom_task_panes
2021-07-28 10:04:42,727 - DEBUG :     test
2021-07-28 10:04:42,727 - DEBUG :     ribbon_functions
2021-07-28 10:04:42,727 - DEBUG :     debugging
2021-07-28 10:04:42,727 - DEBUG :     meta_variables
2021-07-28 10:04:42,727 - DEBUG :     selectiontools
2021-07-28 10:04:42,727 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:04:42,727 - DEBUG : ------------------------------
2021-07-28 10:04:42,731 - DEBUG : 
Wed Jul 28 10:04:42 2021
---------- PyXLL Stopped ----------
2021-07-28 10:04:42,768 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:04:42,768 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:04:42,768 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:04:42,768 - DEBUG : -------- PyXLL config --------
2021-07-28 10:04:42,768 - DEBUG : [LOG]
2021-07-28 10:04:42,768 - DEBUG : encoding = utf-8
2021-07-28 10:04:42,768 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:04:42,768 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:04:42,768 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:04:42,768 - DEBUG : verbosity = debug
2021-07-28 10:04:42,768 - DEBUG : 
2021-07-28 10:04:42,768 - DEBUG : [PYTHON]
2021-07-28 10:04:42,768 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:04:42,768 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:04:42,768 - DEBUG : 
2021-07-28 10:04:42,768 - DEBUG : [PYXLL]
2021-07-28 10:04:42,768 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:04:42,768 - DEBUG : developer_mode = 1
2021-07-28 10:04:42,768 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:04:42,768 - DEBUG : modules = 
2021-07-28 10:04:42,768 - DEBUG :     misc
2021-07-28 10:04:42,768 - DEBUG :     worksheetfuncs
2021-07-28 10:04:42,768 - DEBUG :     menus
2021-07-28 10:04:42,768 - DEBUG :     callbacks
2021-07-28 10:04:42,768 - DEBUG :     custom_task_panes
2021-07-28 10:04:42,768 - DEBUG :     test
2021-07-28 10:04:42,768 - DEBUG :     ribbon_functions
2021-07-28 10:04:42,768 - DEBUG :     debugging
2021-07-28 10:04:42,768 - DEBUG :     meta_variables
2021-07-28 10:04:42,768 - DEBUG :     selectiontools
2021-07-28 10:04:42,768 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:04:42,768 - DEBUG : ------------------------------
2021-07-28 10:04:42,770 - DEBUG : 
Wed Jul 28 10:04:42 2021
---------- PyXLL Stopped ----------
2021-07-28 10:04:44,364 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:04:44,364 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:04:44,364 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:04:44,365 - DEBUG : -------- PyXLL config --------
2021-07-28 10:04:44,365 - DEBUG : [LOG]
2021-07-28 10:04:44,365 - DEBUG : encoding = utf-8
2021-07-28 10:04:44,365 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:04:44,365 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:04:44,365 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:04:44,365 - DEBUG : verbosity = debug
2021-07-28 10:04:44,365 - DEBUG : 
2021-07-28 10:04:44,365 - DEBUG : [PYTHON]
2021-07-28 10:04:44,365 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:04:44,365 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:04:44,365 - DEBUG : 
2021-07-28 10:04:44,365 - DEBUG : [PYXLL]
2021-07-28 10:04:44,365 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:04:44,365 - DEBUG : developer_mode = 1
2021-07-28 10:04:44,365 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:04:44,365 - DEBUG : modules = 
2021-07-28 10:04:44,365 - DEBUG :     misc
2021-07-28 10:04:44,365 - DEBUG :     worksheetfuncs
2021-07-28 10:04:44,365 - DEBUG :     menus
2021-07-28 10:04:44,365 - DEBUG :     callbacks
2021-07-28 10:04:44,365 - DEBUG :     custom_task_panes
2021-07-28 10:04:44,365 - DEBUG :     test
2021-07-28 10:04:44,365 - DEBUG :     ribbon_functions
2021-07-28 10:04:44,365 - DEBUG :     debugging
2021-07-28 10:04:44,365 - DEBUG :     meta_variables
2021-07-28 10:04:44,365 - DEBUG :     selectiontools
2021-07-28 10:04:44,365 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:04:44,365 - DEBUG : ------------------------------
2021-07-28 10:04:44,365 - DEBUG : Attempting to load python38.dll
2021-07-28 10:04:44,391 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 10:04:44,394 - DEBUG : Checking Py_IsInitialized...
2021-07-28 10:04:44,394 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 10:04:44,618 - DEBUG : Calling Py_Initialize...
2021-07-28 10:04:45,063 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 10:04:45,063 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 10:04:45,072 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:04:45,073 - DEBUG : Python is initialized.
2021-07-28 10:04:45,074 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 10:04:45,081 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 10:04:45,081 - DEBUG : Looking for module 'site'...
2021-07-28 10:04:45,684 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 10:04:45,693 - DEBUG : Importing pyxll module
2021-07-28 10:04:45,693 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 10:04:45,693 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 10:04:45,693 - DEBUG :   Detected Python3
2021-07-28 10:04:46,599 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 10:04:46,615 - DEBUG : pyxll module imported
2021-07-28 10:04:46,615 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:04:46,615 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:04:46,615 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:04:46,634 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:04:46,634 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:04:48,655 - DEBUG : Importing misc
2021-07-28 10:04:48,667 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:04:48,667 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:04:48,667 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:04:48,667 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:04:48,683 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:04:48,683 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:04:48,683 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:04:48,683 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:04:48,683 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:04:48,683 - DEBUG : Imported misc
2021-07-28 10:04:48,683 - DEBUG : Importing worksheetfuncs
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:04:48,705 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:04:48,705 - DEBUG : Imported worksheetfuncs
2021-07-28 10:04:48,705 - DEBUG : Importing menus
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:04:48,835 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:04:48,835 - DEBUG : Imported menus
2021-07-28 10:04:48,835 - DEBUG : Importing callbacks
2021-07-28 10:04:48,841 - DEBUG : Imported callbacks
2021-07-28 10:04:48,841 - DEBUG : Importing custom_task_panes
2021-07-28 10:04:48,856 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:04:48,856 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:04:48,856 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:04:48,856 - DEBUG : Imported custom_task_panes
2021-07-28 10:04:48,856 - DEBUG : Importing test
2021-07-28 10:04:48,876 - DEBUG : Imported test
2021-07-28 10:04:48,876 - DEBUG : Importing ribbon_functions
2021-07-28 10:05:02,215 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 10:05:02,514 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:05:02,514 - DEBUG : matplotlib version 3.4.2
2021-07-28 10:05:02,514 - DEBUG : interactive is False
2021-07-28 10:05:02,514 - DEBUG : platform is win32
2021-07-28 10:05:02,514 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_580000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_580000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 10:05:02,830 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:05:02,831 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 10:05:04,472 - DEBUG : Loaded backend agg version unknown.
2021-07-28 10:05:04,472 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000014069E20FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000014069E6DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000014069E70B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014069F102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014069EC2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014069EFAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014069EA7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014069F038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014069EFA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000014069EE2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000014069ED4CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000014069ED6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000014069E2BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000014069ED63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000014069E20FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000014069E6DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000014069E70B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014069F102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014069EC2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014069EFAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014069EA7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014069F038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014069EFA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000014069EE2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000014069ED4CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000014069ED6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000014069E2BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000014069ED63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:05:04,472 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:05:04,472 - DEBUG : Imported ribbon_functions
2021-07-28 10:05:04,472 - DEBUG : Importing debugging
2021-07-28 10:05:07,089 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:05:07,089 - DEBUG : Imported debugging
2021-07-28 10:05:07,089 - DEBUG : Importing meta_variables
2021-07-28 10:05:07,089 - DEBUG : Imported meta_variables
2021-07-28 10:05:07,097 - DEBUG : Importing selectiontools
2021-07-28 10:05:07,105 - DEBUG : Imported selectiontools
2021-07-28 10:05:07,193 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:05:07,218 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:05:07,274 - INFO : This product is licensed to 
2021-07-28 10:05:07,274 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:05:07,275 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:05:07,275 - DEBUG : Binding Python functions to Excel
2021-07-28 10:05:07,275 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:05:07,275 - DEBUG :     - pyxll_version
2021-07-28 10:05:07,275 - DEBUG :     - python_version
2021-07-28 10:05:07,275 - DEBUG :     - win32api_is_installed
2021-07-28 10:05:07,275 - DEBUG :     - win32com_is_installed
2021-07-28 10:05:07,275 - DEBUG :     - numpy_is_installed
2021-07-28 10:05:07,275 - DEBUG :     - pyxll_logfile
2021-07-28 10:05:07,275 - DEBUG :     - get_formula
2021-07-28 10:05:07,275 - DEBUG :     - get_array_formula
2021-07-28 10:05:07,275 - DEBUG :     - get_last_error
2021-07-28 10:05:07,275 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:05:07,275 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:05:07,275 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:05:07,275 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:05:07,275 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:05:07,275 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:05:07,275 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:05:07,275 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:05:07,275 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:05:07,275 - DEBUG :     - xl_cell_example
2021-07-28 10:05:07,275 - DEBUG :     - recalc_on_open_test
2021-07-28 10:05:07,275 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:05:07,275 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:05:07,275 - DEBUG :     - one_cell_one_sim
2021-07-28 10:05:07,275 - DEBUG :     - one_row_one_sim
2021-07-28 10:05:07,298 - DEBUG : Adding menus to Excel:
2021-07-28 10:05:07,298 - DEBUG :   - PyXLL
2021-07-28 10:05:07,298 - DEBUG :     - Reload PyXLL
2021-07-28 10:05:07,298 - DEBUG :     - Another example menu item
2021-07-28 10:05:07,298 - DEBUG :     - More Examples
2021-07-28 10:05:07,298 - DEBUG :       - Click me
2021-07-28 10:05:07,298 - DEBUG :       - Unicode Test
2021-07-28 10:05:07,298 - DEBUG :     - Open log file
2021-07-28 10:05:07,298 - DEBUG :     - Attach To VS Code
2021-07-28 10:05:07,298 - DEBUG :     - Custom Task Panes
2021-07-28 10:05:07,298 - DEBUG :       - Qt
2021-07-28 10:05:07,298 - DEBUG :       - Tk
2021-07-28 10:05:07,298 - DEBUG :       - Wx
2021-07-28 10:05:07,298 - DEBUG :     - Example Menu Item 1
2021-07-28 10:05:07,298 - DEBUG :     - Show last error
2021-07-28 10:05:07,298 - DEBUG :     - About PyXLL...
2021-07-28 10:05:07,298 - DEBUG :   - PyXLL example menu
2021-07-28 10:05:07,298 - DEBUG :     - Click me
2021-07-28 10:05:07,373 - DEBUG : Finished binding Python functions
2021-07-28 10:05:07,374 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 10:05:07,374 - DEBUG : pyxll._post_open complete.
2021-07-28 10:05:07,376 - DEBUG : PyXLL initialization complete.
2021-07-28 10:05:07,410 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:05:07,410 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:05:07,418 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:05:07,437 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:05:14,777 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 10:05:14,779 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:05:14,779 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:05:14,779 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:05:14,779 - DEBUG : -------- PyXLL config --------
2021-07-28 10:05:14,779 - DEBUG : [LOG]
2021-07-28 10:05:14,779 - DEBUG : encoding = utf-8
2021-07-28 10:05:14,779 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:05:14,779 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:05:14,779 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:05:14,779 - DEBUG : verbosity = debug
2021-07-28 10:05:14,779 - DEBUG : 
2021-07-28 10:05:14,779 - DEBUG : [PYTHON]
2021-07-28 10:05:14,779 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:05:14,779 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:05:14,779 - DEBUG : 
2021-07-28 10:05:14,779 - DEBUG : [PYXLL]
2021-07-28 10:05:14,779 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:05:14,780 - DEBUG : developer_mode = 1
2021-07-28 10:05:14,780 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:05:14,780 - DEBUG : modules = 
2021-07-28 10:05:14,780 - DEBUG :     misc
2021-07-28 10:05:14,780 - DEBUG :     worksheetfuncs
2021-07-28 10:05:14,780 - DEBUG :     menus
2021-07-28 10:05:14,780 - DEBUG :     callbacks
2021-07-28 10:05:14,780 - DEBUG :     custom_task_panes
2021-07-28 10:05:14,780 - DEBUG :     test
2021-07-28 10:05:14,780 - DEBUG :     ribbon_functions
2021-07-28 10:05:14,780 - DEBUG :     debugging
2021-07-28 10:05:14,780 - DEBUG :     meta_variables
2021-07-28 10:05:14,780 - DEBUG :     selectiontools
2021-07-28 10:05:14,780 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:05:14,780 - DEBUG : ------------------------------
2021-07-28 10:05:14,780 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:05:14,780 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:05:14,780 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:05:14,781 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:05:14,790 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:05:14,790 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:05:14,790 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 10:05:14,898 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 10:05:14,898 - DEBUG : Reloading misc
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:05:14,898 - DEBUG : Reloaded misc
2021-07-28 10:05:14,898 - DEBUG : Reloading worksheetfuncs
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:05:14,898 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:05:14,898 - DEBUG : Reloaded worksheetfuncs
2021-07-28 10:05:14,898 - DEBUG : Reloading menus
2021-07-28 10:05:14,912 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:05:14,912 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:05:14,912 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:05:14,912 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:05:14,912 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:05:14,912 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:05:14,913 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:05:14,913 - DEBUG : Reloaded menus
2021-07-28 10:05:14,913 - DEBUG : Reloading callbacks
2021-07-28 10:05:14,913 - DEBUG : Reloaded callbacks
2021-07-28 10:05:14,913 - DEBUG : Reloading custom_task_panes
2021-07-28 10:05:14,913 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:05:14,913 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:05:14,913 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:05:14,913 - DEBUG : Reloaded custom_task_panes
2021-07-28 10:05:14,913 - DEBUG : Reloading test
2021-07-28 10:05:14,913 - DEBUG : Reloaded test
2021-07-28 10:05:14,913 - DEBUG : Reloading meta_variables
2021-07-28 10:05:14,913 - DEBUG : Reloaded meta_variables
2021-07-28 10:05:14,913 - DEBUG : Reloading dependency error_functions
2021-07-28 10:05:14,913 - DEBUG : Reloaded dependency error_functions
2021-07-28 10:05:14,913 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 10:05:14,913 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 10:05:14,913 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 10:05:14,913 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 10:05:14,913 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 10:05:14,913 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 10:05:14,913 - DEBUG : Reloading dependency examples
2021-07-28 10:05:14,913 - DEBUG : Reloaded dependency examples
2021-07-28 10:05:14,913 - DEBUG : Reloading ribbon_functions
2021-07-28 10:05:14,913 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000014069E20FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000014069E6DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000014069E70B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014069F102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014069EC2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014069EFAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014069EA7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014069F038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014069EFA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000014069EE2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000014069ED4CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000014069ED6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000014069E2BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000014069ED63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000014069E20FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000014069E6DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000014069E70B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000014069F102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000014069EC2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000014069EFAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000014069EA7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000014069F038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000014069EFA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000014069EE2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000014069ED4CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000014069ED6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000014069E2BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000014069ED63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:05:14,913 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:05:14,913 - DEBUG : Reloaded ribbon_functions
2021-07-28 10:05:14,913 - DEBUG : Reloading debugging
2021-07-28 10:05:14,913 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:05:14,913 - DEBUG : Reloaded debugging
2021-07-28 10:05:14,913 - DEBUG : Reloading selectiontools
2021-07-28 10:05:14,913 - DEBUG : Reloaded selectiontools
2021-07-28 10:05:14,959 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:05:14,959 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:05:14,981 - INFO : This product is licensed to 
2021-07-28 10:05:14,981 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:05:14,988 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:05:14,988 - DEBUG : Binding Python functions to Excel
2021-07-28 10:05:14,988 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:05:14,989 - DEBUG :     - pyxll_version
2021-07-28 10:05:14,989 - DEBUG :     - python_version
2021-07-28 10:05:14,989 - DEBUG :     - win32api_is_installed
2021-07-28 10:05:14,989 - DEBUG :     - win32com_is_installed
2021-07-28 10:05:14,989 - DEBUG :     - numpy_is_installed
2021-07-28 10:05:14,989 - DEBUG :     - pyxll_logfile
2021-07-28 10:05:14,989 - DEBUG :     - get_formula
2021-07-28 10:05:14,989 - DEBUG :     - get_array_formula
2021-07-28 10:05:14,989 - DEBUG :     - get_last_error
2021-07-28 10:05:14,989 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:05:14,989 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:05:14,989 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:05:14,989 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:05:14,989 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:05:14,989 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:05:14,989 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:05:14,990 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:05:14,990 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:05:14,990 - DEBUG :     - xl_cell_example
2021-07-28 10:05:14,990 - DEBUG :     - recalc_on_open_test
2021-07-28 10:05:14,990 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:05:14,990 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:05:14,990 - DEBUG :     - one_cell_one_sim
2021-07-28 10:05:14,990 - DEBUG :     - one_row_one_sim
2021-07-28 10:05:15,000 - DEBUG : Adding menus to Excel:
2021-07-28 10:05:15,000 - DEBUG :   - PyXLL
2021-07-28 10:05:15,000 - DEBUG :     - Reload PyXLL
2021-07-28 10:05:15,000 - DEBUG :     - Another example menu item
2021-07-28 10:05:15,000 - DEBUG :     - More Examples
2021-07-28 10:05:15,000 - DEBUG :       - Click me
2021-07-28 10:05:15,000 - DEBUG :       - Unicode Test
2021-07-28 10:05:15,000 - DEBUG :     - Open log file
2021-07-28 10:05:15,000 - DEBUG :     - Attach To VS Code
2021-07-28 10:05:15,000 - DEBUG :     - Custom Task Panes
2021-07-28 10:05:15,000 - DEBUG :       - Qt
2021-07-28 10:05:15,000 - DEBUG :       - Tk
2021-07-28 10:05:15,000 - DEBUG :       - Wx
2021-07-28 10:05:15,000 - DEBUG :     - Example Menu Item 1
2021-07-28 10:05:15,000 - DEBUG :     - Show last error
2021-07-28 10:05:15,000 - DEBUG :     - About PyXLL...
2021-07-28 10:05:15,000 - DEBUG :   - PyXLL example menu
2021-07-28 10:05:15,000 - DEBUG :     - Click me
2021-07-28 10:05:15,000 - DEBUG : Finished binding Python functions
2021-07-28 10:05:15,000 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 10:05:16,046 - DEBUG : pyxll._post_open complete.
2021-07-28 10:05:16,047 - DEBUG : PyXLL initialization complete.
2021-07-28 10:05:16,049 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:05:16,049 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:05:16,052 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:05:16,162 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:07:38,568 - DEBUG : Closing PyXLL Python module.
2021-07-28 10:07:38,568 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 10:07:38,568 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 10:07:38,568 - DEBUG : PyXLL Python module closed.
2021-07-28 10:07:39,808 - DEBUG : 
Wed Jul 28 10:07:39 2021
---------- PyXLL Stopped ----------
2021-07-28 10:08:37,598 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:08:37,598 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:08:37,598 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:08:37,598 - DEBUG : -------- PyXLL config --------
2021-07-28 10:08:37,598 - DEBUG : [LOG]
2021-07-28 10:08:37,598 - DEBUG : encoding = utf-8
2021-07-28 10:08:37,598 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:08:37,598 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:08:37,598 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:08:37,599 - DEBUG : verbosity = debug
2021-07-28 10:08:37,599 - DEBUG : 
2021-07-28 10:08:37,599 - DEBUG : [PYTHON]
2021-07-28 10:08:37,599 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:08:37,599 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:08:37,599 - DEBUG : 
2021-07-28 10:08:37,599 - DEBUG : [PYXLL]
2021-07-28 10:08:37,599 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:08:37,599 - DEBUG : developer_mode = 1
2021-07-28 10:08:37,599 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:08:37,599 - DEBUG : modules = 
2021-07-28 10:08:37,599 - DEBUG :     misc
2021-07-28 10:08:37,599 - DEBUG :     worksheetfuncs
2021-07-28 10:08:37,599 - DEBUG :     menus
2021-07-28 10:08:37,599 - DEBUG :     callbacks
2021-07-28 10:08:37,599 - DEBUG :     custom_task_panes
2021-07-28 10:08:37,599 - DEBUG :     test
2021-07-28 10:08:37,599 - DEBUG :     ribbon_functions
2021-07-28 10:08:37,599 - DEBUG :     debugging
2021-07-28 10:08:37,599 - DEBUG :     meta_variables
2021-07-28 10:08:37,599 - DEBUG :     selectiontools
2021-07-28 10:08:37,599 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:08:37,599 - DEBUG : ------------------------------
2021-07-28 10:08:37,600 - DEBUG : Attempting to load python38.dll
2021-07-28 10:08:37,605 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 10:08:37,606 - DEBUG : Checking Py_IsInitialized...
2021-07-28 10:08:37,606 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 10:08:37,800 - DEBUG : Calling Py_Initialize...
2021-07-28 10:08:37,933 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 10:08:37,933 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 10:08:37,934 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:08:37,934 - DEBUG : Python is initialized.
2021-07-28 10:08:37,934 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 10:08:37,935 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 10:08:37,935 - DEBUG : Looking for module 'site'...
2021-07-28 10:08:37,963 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 10:08:37,963 - DEBUG : Importing pyxll module
2021-07-28 10:08:37,963 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 10:08:37,963 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 10:08:37,963 - DEBUG :   Detected Python3
2021-07-28 10:08:38,001 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 10:08:38,001 - DEBUG : pyxll module imported
2021-07-28 10:08:38,001 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:08:38,001 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:08:38,001 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:08:38,007 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:08:38,007 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:08:38,257 - DEBUG : Importing misc
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:08:38,258 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:08:38,258 - DEBUG : Imported misc
2021-07-28 10:08:38,258 - DEBUG : Importing worksheetfuncs
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:08:38,261 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:08:38,263 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:08:38,263 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:08:38,263 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:08:38,263 - DEBUG : Imported worksheetfuncs
2021-07-28 10:08:38,263 - DEBUG : Importing menus
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:08:38,268 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:08:38,268 - DEBUG : Imported menus
2021-07-28 10:08:38,268 - DEBUG : Importing callbacks
2021-07-28 10:08:38,269 - DEBUG : Imported callbacks
2021-07-28 10:08:38,269 - DEBUG : Importing custom_task_panes
2021-07-28 10:08:38,269 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:08:38,270 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:08:38,270 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:08:38,270 - DEBUG : Imported custom_task_panes
2021-07-28 10:08:38,270 - DEBUG : Importing test
2021-07-28 10:08:38,271 - DEBUG : Imported test
2021-07-28 10:08:38,271 - DEBUG : Importing ribbon_functions
2021-07-28 10:08:40,019 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 10:08:40,047 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:08:40,053 - DEBUG : matplotlib version 3.4.2
2021-07-28 10:08:40,053 - DEBUG : interactive is False
2021-07-28 10:08:40,053 - DEBUG : platform is win32
2021-07-28 10:08:40,053 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_680000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_680000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 10:08:40,135 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:08:40,152 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 10:08:40,471 - DEBUG : Loaded backend agg version unknown.
2021-07-28 10:08:40,476 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000018F72920FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000018F72970C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000018F72976B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000018F72A102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000018F729C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000018F729FAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000018F729A9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000018F72A028E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000018F729FA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000018F729E1490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000018F729DAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000018F729D2F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000018F7292FFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000018F729D23A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000018F72920FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000018F72970C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000018F72976B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000018F72A102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000018F729C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000018F729FAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000018F729A9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000018F72A028E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000018F729FA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000018F729E1490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000018F729DAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000018F729D2F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000018F7292FFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000018F729D23A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:08:40,476 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:08:40,476 - DEBUG : Imported ribbon_functions
2021-07-28 10:08:40,476 - DEBUG : Importing debugging
2021-07-28 10:08:41,085 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:08:41,085 - DEBUG : Imported debugging
2021-07-28 10:08:41,085 - DEBUG : Importing meta_variables
2021-07-28 10:08:41,085 - DEBUG : Imported meta_variables
2021-07-28 10:08:41,085 - DEBUG : Importing selectiontools
2021-07-28 10:08:41,085 - DEBUG : Imported selectiontools
2021-07-28 10:08:41,119 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:08:41,128 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:08:41,146 - INFO : This product is licensed to 
2021-07-28 10:08:41,146 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:08:41,147 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:08:41,147 - DEBUG : Binding Python functions to Excel
2021-07-28 10:08:41,147 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:08:41,147 - DEBUG :     - pyxll_version
2021-07-28 10:08:41,147 - DEBUG :     - python_version
2021-07-28 10:08:41,147 - DEBUG :     - win32api_is_installed
2021-07-28 10:08:41,147 - DEBUG :     - win32com_is_installed
2021-07-28 10:08:41,147 - DEBUG :     - numpy_is_installed
2021-07-28 10:08:41,148 - DEBUG :     - pyxll_logfile
2021-07-28 10:08:41,148 - DEBUG :     - get_formula
2021-07-28 10:08:41,148 - DEBUG :     - get_array_formula
2021-07-28 10:08:41,148 - DEBUG :     - get_last_error
2021-07-28 10:08:41,148 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:08:41,148 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:08:41,148 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:08:41,148 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:08:41,148 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:08:41,148 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:08:41,148 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:08:41,148 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:08:41,148 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:08:41,148 - DEBUG :     - xl_cell_example
2021-07-28 10:08:41,148 - DEBUG :     - recalc_on_open_test
2021-07-28 10:08:41,148 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:08:41,148 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:08:41,148 - DEBUG :     - one_cell_one_sim
2021-07-28 10:08:41,148 - DEBUG :     - one_row_one_sim
2021-07-28 10:08:41,167 - DEBUG : Adding menus to Excel:
2021-07-28 10:08:41,167 - DEBUG :   - PyXLL
2021-07-28 10:08:41,167 - DEBUG :     - Reload PyXLL
2021-07-28 10:08:41,167 - DEBUG :     - Another example menu item
2021-07-28 10:08:41,167 - DEBUG :     - More Examples
2021-07-28 10:08:41,167 - DEBUG :       - Click me
2021-07-28 10:08:41,167 - DEBUG :       - Unicode Test
2021-07-28 10:08:41,167 - DEBUG :     - Open log file
2021-07-28 10:08:41,167 - DEBUG :     - Attach To VS Code
2021-07-28 10:08:41,167 - DEBUG :     - Custom Task Panes
2021-07-28 10:08:41,167 - DEBUG :       - Qt
2021-07-28 10:08:41,167 - DEBUG :       - Tk
2021-07-28 10:08:41,167 - DEBUG :       - Wx
2021-07-28 10:08:41,167 - DEBUG :     - Example Menu Item 1
2021-07-28 10:08:41,167 - DEBUG :     - Show last error
2021-07-28 10:08:41,167 - DEBUG :     - About PyXLL...
2021-07-28 10:08:41,167 - DEBUG :   - PyXLL example menu
2021-07-28 10:08:41,167 - DEBUG :     - Click me
2021-07-28 10:08:41,232 - DEBUG : Finished binding Python functions
2021-07-28 10:08:41,232 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 10:08:41,232 - DEBUG : pyxll._post_open complete.
2021-07-28 10:08:41,247 - DEBUG : PyXLL initialization complete.
2021-07-28 10:08:47,371 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:08:47,371 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:08:47,398 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:08:47,446 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:23:37,659 - DEBUG : Closing PyXLL Python module.
2021-07-28 10:23:37,659 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 10:23:37,660 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 10:23:37,660 - DEBUG : PyXLL Python module closed.
2021-07-28 10:23:40,733 - DEBUG : 
Wed Jul 28 10:23:40 2021
---------- PyXLL Stopped ----------
2021-07-28 10:23:49,066 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:23:49,067 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:23:49,067 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:23:49,067 - DEBUG : -------- PyXLL config --------
2021-07-28 10:23:49,067 - DEBUG : [LOG]
2021-07-28 10:23:49,067 - DEBUG : encoding = utf-8
2021-07-28 10:23:49,067 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:23:49,067 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:23:49,067 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:23:49,067 - DEBUG : verbosity = debug
2021-07-28 10:23:49,067 - DEBUG : 
2021-07-28 10:23:49,067 - DEBUG : [PYTHON]
2021-07-28 10:23:49,067 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:23:49,067 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:23:49,067 - DEBUG : 
2021-07-28 10:23:49,067 - DEBUG : [PYXLL]
2021-07-28 10:23:49,067 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:23:49,067 - DEBUG : developer_mode = 1
2021-07-28 10:23:49,067 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:23:49,067 - DEBUG : modules = 
2021-07-28 10:23:49,067 - DEBUG :     misc
2021-07-28 10:23:49,067 - DEBUG :     worksheetfuncs
2021-07-28 10:23:49,067 - DEBUG :     menus
2021-07-28 10:23:49,067 - DEBUG :     callbacks
2021-07-28 10:23:49,067 - DEBUG :     custom_task_panes
2021-07-28 10:23:49,067 - DEBUG :     test
2021-07-28 10:23:49,067 - DEBUG :     ribbon_functions
2021-07-28 10:23:49,067 - DEBUG :     debugging
2021-07-28 10:23:49,067 - DEBUG :     meta_variables
2021-07-28 10:23:49,067 - DEBUG :     selectiontools
2021-07-28 10:23:49,067 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:23:49,067 - DEBUG : ------------------------------
2021-07-28 10:23:49,068 - DEBUG : Attempting to load python38.dll
2021-07-28 10:23:49,069 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 10:23:49,070 - DEBUG : Checking Py_IsInitialized...
2021-07-28 10:23:49,070 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 10:23:49,205 - DEBUG : Calling Py_Initialize...
2021-07-28 10:23:49,389 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 10:23:49,390 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 10:23:49,390 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:23:49,390 - DEBUG : Python is initialized.
2021-07-28 10:23:49,390 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 10:23:49,391 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 10:23:49,391 - DEBUG : Looking for module 'site'...
2021-07-28 10:23:49,420 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 10:23:49,420 - DEBUG : Importing pyxll module
2021-07-28 10:23:49,420 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 10:23:49,420 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 10:23:49,420 - DEBUG :   Detected Python3
2021-07-28 10:23:49,458 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 10:23:49,461 - DEBUG : pyxll module imported
2021-07-28 10:23:49,461 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:23:49,461 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:23:49,461 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:23:49,464 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:23:49,464 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:23:49,755 - DEBUG : Importing misc
2021-07-28 10:23:49,756 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:23:49,756 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:23:49,756 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:23:49,757 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:23:49,757 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:23:49,757 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:23:49,757 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:23:49,757 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:23:49,757 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:23:49,757 - DEBUG : Imported misc
2021-07-28 10:23:49,758 - DEBUG : Importing worksheetfuncs
2021-07-28 10:23:49,759 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:23:49,759 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:23:49,759 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:23:49,759 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:23:49,759 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:23:49,760 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:23:49,760 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:23:49,760 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:23:49,761 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:23:49,761 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:23:49,761 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:23:49,761 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:23:49,761 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:23:49,761 - DEBUG : Imported worksheetfuncs
2021-07-28 10:23:49,762 - DEBUG : Importing menus
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:23:49,767 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:23:49,767 - DEBUG : Imported menus
2021-07-28 10:23:49,767 - DEBUG : Importing callbacks
2021-07-28 10:23:49,768 - DEBUG : Imported callbacks
2021-07-28 10:23:49,768 - DEBUG : Importing custom_task_panes
2021-07-28 10:23:49,768 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:23:49,769 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:23:49,769 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:23:49,769 - DEBUG : Imported custom_task_panes
2021-07-28 10:23:49,769 - DEBUG : Importing test
2021-07-28 10:23:49,770 - DEBUG : Imported test
2021-07-28 10:23:49,770 - DEBUG : Importing ribbon_functions
2021-07-28 10:23:51,549 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 10:23:51,587 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:23:51,598 - DEBUG : matplotlib version 3.4.2
2021-07-28 10:23:51,599 - DEBUG : interactive is False
2021-07-28 10:23:51,599 - DEBUG : platform is win32
2021-07-28 10:23:51,599 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_8c0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_8c0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 10:23:51,664 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:23:51,670 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 10:23:51,895 - DEBUG : Loaded backend agg version unknown.
2021-07-28 10:23:51,898 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:23:51,899 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:23:51,899 - DEBUG : Imported ribbon_functions
2021-07-28 10:23:51,900 - DEBUG : Importing debugging
2021-07-28 10:23:52,402 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:23:52,402 - DEBUG : Imported debugging
2021-07-28 10:23:52,402 - DEBUG : Importing meta_variables
2021-07-28 10:23:52,402 - DEBUG : Imported meta_variables
2021-07-28 10:23:52,402 - DEBUG : Importing selectiontools
2021-07-28 10:23:52,403 - DEBUG : Imported selectiontools
2021-07-28 10:23:52,439 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:23:52,439 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:23:52,462 - INFO : This product is licensed to 
2021-07-28 10:23:52,462 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:23:52,464 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:23:52,464 - DEBUG : Binding Python functions to Excel
2021-07-28 10:23:52,464 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:23:52,464 - DEBUG :     - pyxll_version
2021-07-28 10:23:52,464 - DEBUG :     - python_version
2021-07-28 10:23:52,464 - DEBUG :     - win32api_is_installed
2021-07-28 10:23:52,464 - DEBUG :     - win32com_is_installed
2021-07-28 10:23:52,464 - DEBUG :     - numpy_is_installed
2021-07-28 10:23:52,464 - DEBUG :     - pyxll_logfile
2021-07-28 10:23:52,464 - DEBUG :     - get_formula
2021-07-28 10:23:52,465 - DEBUG :     - get_array_formula
2021-07-28 10:23:52,465 - DEBUG :     - get_last_error
2021-07-28 10:23:52,465 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:23:52,465 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:23:52,465 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:23:52,465 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:23:52,465 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:23:52,465 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:23:52,465 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:23:52,465 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:23:52,465 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:23:52,466 - DEBUG :     - xl_cell_example
2021-07-28 10:23:52,466 - DEBUG :     - recalc_on_open_test
2021-07-28 10:23:52,466 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:23:52,466 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:23:52,466 - DEBUG :     - one_cell_one_sim
2021-07-28 10:23:52,466 - DEBUG :     - one_row_one_sim
2021-07-28 10:23:52,483 - DEBUG : Adding menus to Excel:
2021-07-28 10:23:52,483 - DEBUG :   - PyXLL
2021-07-28 10:23:52,483 - DEBUG :     - Reload PyXLL
2021-07-28 10:23:52,483 - DEBUG :     - Another example menu item
2021-07-28 10:23:52,483 - DEBUG :     - More Examples
2021-07-28 10:23:52,483 - DEBUG :       - Click me
2021-07-28 10:23:52,483 - DEBUG :       - Unicode Test
2021-07-28 10:23:52,483 - DEBUG :     - Open log file
2021-07-28 10:23:52,483 - DEBUG :     - Attach To VS Code
2021-07-28 10:23:52,483 - DEBUG :     - Custom Task Panes
2021-07-28 10:23:52,483 - DEBUG :       - Qt
2021-07-28 10:23:52,483 - DEBUG :       - Tk
2021-07-28 10:23:52,483 - DEBUG :       - Wx
2021-07-28 10:23:52,483 - DEBUG :     - Example Menu Item 1
2021-07-28 10:23:52,483 - DEBUG :     - Show last error
2021-07-28 10:23:52,483 - DEBUG :     - About PyXLL...
2021-07-28 10:23:52,483 - DEBUG :   - PyXLL example menu
2021-07-28 10:23:52,483 - DEBUG :     - Click me
2021-07-28 10:23:52,558 - DEBUG : Finished binding Python functions
2021-07-28 10:23:52,558 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 10:23:52,558 - DEBUG : pyxll._post_open complete.
2021-07-28 10:23:52,570 - DEBUG : PyXLL initialization complete.
2021-07-28 10:23:53,013 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:23:53,013 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:23:53,014 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:23:53,015 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:23:53,016 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:23:53,016 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 10:23:53,073 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 10:23:53,073 - DEBUG : Reloading misc
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:23:53,073 - DEBUG : Reloaded misc
2021-07-28 10:23:53,073 - DEBUG : Reloading worksheetfuncs
2021-07-28 10:23:53,073 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:23:53,083 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:23:53,083 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:23:53,084 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:23:53,084 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:23:53,084 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:23:53,085 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:23:53,085 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:23:53,086 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:23:53,086 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:23:53,086 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:23:53,086 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:23:53,086 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:23:53,086 - DEBUG : Reloaded worksheetfuncs
2021-07-28 10:23:53,086 - DEBUG : Reloading menus
2021-07-28 10:23:53,089 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:23:53,089 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:23:53,089 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:23:53,089 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:23:53,089 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:23:53,090 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:23:53,090 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:23:53,090 - DEBUG : Reloaded menus
2021-07-28 10:23:53,090 - DEBUG : Reloading callbacks
2021-07-28 10:23:53,091 - DEBUG : Reloaded callbacks
2021-07-28 10:23:53,092 - DEBUG : Reloading custom_task_panes
2021-07-28 10:23:53,093 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:23:53,093 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:23:53,093 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:23:53,093 - DEBUG : Reloaded custom_task_panes
2021-07-28 10:23:53,093 - DEBUG : Reloading test
2021-07-28 10:23:53,093 - DEBUG : Reloaded test
2021-07-28 10:23:53,093 - DEBUG : Reloading meta_variables
2021-07-28 10:23:53,097 - DEBUG : Reloaded meta_variables
2021-07-28 10:23:53,097 - DEBUG : Reloading dependency error_functions
2021-07-28 10:23:53,098 - DEBUG : Reloaded dependency error_functions
2021-07-28 10:23:53,098 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 10:23:53,098 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 10:23:53,098 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 10:23:53,098 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 10:23:53,098 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 10:23:53,103 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 10:23:53,103 - DEBUG : Reloading dependency examples
2021-07-28 10:23:53,105 - DEBUG : Reloaded dependency examples
2021-07-28 10:23:53,106 - DEBUG : Reloading ribbon_functions
2021-07-28 10:23:53,106 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:23:53,106 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:23:53,109 - DEBUG : Reloaded ribbon_functions
2021-07-28 10:23:53,109 - DEBUG : Reloading debugging
2021-07-28 10:23:53,110 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:23:53,110 - DEBUG : Reloaded debugging
2021-07-28 10:23:53,110 - DEBUG : Reloading selectiontools
2021-07-28 10:23:53,112 - DEBUG : Reloaded selectiontools
2021-07-28 10:23:53,195 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:23:53,202 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:23:53,222 - INFO : This product is licensed to 
2021-07-28 10:23:53,222 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:23:53,224 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:23:53,224 - DEBUG : Binding Python functions to Excel
2021-07-28 10:23:53,225 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:23:53,225 - DEBUG :     - pyxll_version
2021-07-28 10:23:53,225 - DEBUG :     - python_version
2021-07-28 10:23:53,225 - DEBUG :     - win32api_is_installed
2021-07-28 10:23:53,225 - DEBUG :     - win32com_is_installed
2021-07-28 10:23:53,225 - DEBUG :     - numpy_is_installed
2021-07-28 10:23:53,225 - DEBUG :     - pyxll_logfile
2021-07-28 10:23:53,225 - DEBUG :     - get_formula
2021-07-28 10:23:53,225 - DEBUG :     - get_array_formula
2021-07-28 10:23:53,225 - DEBUG :     - get_last_error
2021-07-28 10:23:53,225 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:23:53,225 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:23:53,225 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:23:53,225 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:23:53,226 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:23:53,226 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:23:53,226 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:23:53,226 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:23:53,226 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:23:53,226 - DEBUG :     - xl_cell_example
2021-07-28 10:23:53,226 - DEBUG :     - recalc_on_open_test
2021-07-28 10:23:53,226 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:23:53,226 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:23:53,226 - DEBUG :     - one_cell_one_sim
2021-07-28 10:23:53,226 - DEBUG :     - one_row_one_sim
2021-07-28 10:23:53,230 - DEBUG : Adding menus to Excel:
2021-07-28 10:23:53,230 - DEBUG :   - PyXLL
2021-07-28 10:23:53,230 - DEBUG :     - Reload PyXLL
2021-07-28 10:23:53,230 - DEBUG :     - Another example menu item
2021-07-28 10:23:53,230 - DEBUG :     - More Examples
2021-07-28 10:23:53,230 - DEBUG :       - Click me
2021-07-28 10:23:53,230 - DEBUG :       - Unicode Test
2021-07-28 10:23:53,230 - DEBUG :     - Open log file
2021-07-28 10:23:53,230 - DEBUG :     - Attach To VS Code
2021-07-28 10:23:53,230 - DEBUG :     - Custom Task Panes
2021-07-28 10:23:53,230 - DEBUG :       - Qt
2021-07-28 10:23:53,230 - DEBUG :       - Tk
2021-07-28 10:23:53,230 - DEBUG :       - Wx
2021-07-28 10:23:53,230 - DEBUG :     - Example Menu Item 1
2021-07-28 10:23:53,230 - DEBUG :     - Show last error
2021-07-28 10:23:53,230 - DEBUG :     - About PyXLL...
2021-07-28 10:23:53,230 - DEBUG :   - PyXLL example menu
2021-07-28 10:23:53,230 - DEBUG :     - Click me
2021-07-28 10:23:53,235 - DEBUG : Finished binding Python functions
2021-07-28 10:23:53,235 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 10:23:54,411 - DEBUG : pyxll._post_open complete.
2021-07-28 10:23:54,420 - DEBUG : PyXLL initialization complete.
2021-07-28 10:23:56,954 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:23:56,954 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:23:56,978 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:23:57,040 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:23:57,048 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:23:57,049 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:23:57,057 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:23:57,069 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:28:42,651 - ERROR : Traceback (most recent call last):
2021-07-28 10:28:42,651 - ERROR :   File "build/x64/py38/res/release/pyxll.py", line 193, in _import
2021-07-28 10:28:42,653 - ERROR :   File "build/x64/py38/res/release/pyxll.py", line 8206, in __import_hook
2021-07-28 10:28:42,654 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 162
2021-07-28 10:28:42,654 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}), first_call=True
2021-07-28 10:28:42,654 - ERROR :                 ^
2021-07-28 10:28:42,654 - ERROR : SyntaxError: cannot assign to function call
2021-07-28 10:28:42,654 - ERROR : Error importing module 'advanced_simulation' for ribbon callback 'advanced_simulation.advanced_simulation_cell_wrapper'.
SyntaxError('cannot assign to function call', ('C:\\Users\\ethan\\Documents\\simExcel\\examples\\advanced_simulation.py', 162, 17, '    hist_data = advanced_simulation_cell(control=control, variable_dict={}), first_call=True\n'))
2021-07-28 10:28:51,316 - ERROR : Traceback (most recent call last):
2021-07-28 10:28:51,316 - ERROR :   File "build/x64/py38/res/release/pyxll.py", line 193, in _import
2021-07-28 10:28:51,317 - ERROR :   File "build/x64/py38/res/release/pyxll.py", line 8206, in __import_hook
2021-07-28 10:28:51,317 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 162
2021-07-28 10:28:51,317 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}), first_call=True
2021-07-28 10:28:51,317 - ERROR :                 ^
2021-07-28 10:28:51,317 - ERROR : SyntaxError: cannot assign to function call
2021-07-28 10:28:51,317 - ERROR : Error importing module 'advanced_simulation' for ribbon callback 'advanced_simulation.advanced_simulation_cell_wrapper'.
SyntaxError('cannot assign to function call', ('C:\\Users\\ethan\\Documents\\simExcel\\examples\\advanced_simulation.py', 162, 17, '    hist_data = advanced_simulation_cell(control=control, variable_dict={}), first_call=True\n'))
2021-07-28 10:36:12,409 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 10:36:12,409 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:36:12,409 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:36:12,409 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:36:12,409 - DEBUG : -------- PyXLL config --------
2021-07-28 10:36:12,409 - DEBUG : [LOG]
2021-07-28 10:36:12,409 - DEBUG : encoding = utf-8
2021-07-28 10:36:12,409 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:36:12,409 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:36:12,409 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:36:12,409 - DEBUG : verbosity = debug
2021-07-28 10:36:12,409 - DEBUG : 
2021-07-28 10:36:12,409 - DEBUG : [PYTHON]
2021-07-28 10:36:12,409 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:36:12,409 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:36:12,409 - DEBUG : 
2021-07-28 10:36:12,409 - DEBUG : [PYXLL]
2021-07-28 10:36:12,409 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:36:12,409 - DEBUG : developer_mode = 1
2021-07-28 10:36:12,409 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:36:12,409 - DEBUG : modules = 
2021-07-28 10:36:12,409 - DEBUG :     misc
2021-07-28 10:36:12,409 - DEBUG :     worksheetfuncs
2021-07-28 10:36:12,409 - DEBUG :     menus
2021-07-28 10:36:12,409 - DEBUG :     callbacks
2021-07-28 10:36:12,409 - DEBUG :     custom_task_panes
2021-07-28 10:36:12,409 - DEBUG :     test
2021-07-28 10:36:12,409 - DEBUG :     ribbon_functions
2021-07-28 10:36:12,409 - DEBUG :     debugging
2021-07-28 10:36:12,409 - DEBUG :     meta_variables
2021-07-28 10:36:12,409 - DEBUG :     selectiontools
2021-07-28 10:36:12,409 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:36:12,409 - DEBUG : ------------------------------
2021-07-28 10:36:12,409 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:36:12,409 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:36:12,409 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:36:12,409 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:36:12,409 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:36:12,409 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:36:12,409 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 10:36:12,508 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 10:36:12,508 - DEBUG : Reloading misc
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:36:12,508 - DEBUG : Reloaded misc
2021-07-28 10:36:12,508 - DEBUG : Reloading worksheetfuncs
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:36:12,508 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:36:12,524 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:36:12,524 - DEBUG : Reloaded worksheetfuncs
2021-07-28 10:36:12,524 - DEBUG : Reloading menus
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:36:12,524 - DEBUG : Reloaded menus
2021-07-28 10:36:12,524 - DEBUG : Reloading callbacks
2021-07-28 10:36:12,524 - DEBUG : Reloaded callbacks
2021-07-28 10:36:12,524 - DEBUG : Reloading custom_task_panes
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:36:12,524 - DEBUG : Reloaded custom_task_panes
2021-07-28 10:36:12,524 - DEBUG : Reloading test
2021-07-28 10:36:12,524 - DEBUG : Reloaded test
2021-07-28 10:36:12,524 - DEBUG : Reloading meta_variables
2021-07-28 10:36:12,524 - DEBUG : Reloaded meta_variables
2021-07-28 10:36:12,524 - DEBUG : Reloading dependency error_functions
2021-07-28 10:36:12,524 - DEBUG : Reloaded dependency error_functions
2021-07-28 10:36:12,524 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 10:36:12,524 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 10:36:12,524 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 10:36:12,524 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 10:36:12,524 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 10:36:12,524 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 10:36:12,524 - DEBUG : Reloading dependency examples
2021-07-28 10:36:12,524 - DEBUG : Reloaded dependency examples
2021-07-28 10:36:12,524 - DEBUG : Reloading ribbon_functions
2021-07-28 10:36:12,524 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:36:12,524 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:36:12,524 - DEBUG : Reloaded ribbon_functions
2021-07-28 10:36:12,524 - DEBUG : Reloading debugging
2021-07-28 10:36:12,524 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:36:12,524 - DEBUG : Reloaded debugging
2021-07-28 10:36:12,524 - DEBUG : Reloading selectiontools
2021-07-28 10:36:12,524 - DEBUG : Reloaded selectiontools
2021-07-28 10:36:12,571 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:36:12,571 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:36:12,591 - INFO : This product is licensed to 
2021-07-28 10:36:12,591 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:36:12,594 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:36:12,594 - DEBUG : Binding Python functions to Excel
2021-07-28 10:36:12,595 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:36:12,595 - DEBUG :     - pyxll_version
2021-07-28 10:36:12,595 - DEBUG :     - python_version
2021-07-28 10:36:12,595 - DEBUG :     - win32api_is_installed
2021-07-28 10:36:12,595 - DEBUG :     - win32com_is_installed
2021-07-28 10:36:12,595 - DEBUG :     - numpy_is_installed
2021-07-28 10:36:12,595 - DEBUG :     - pyxll_logfile
2021-07-28 10:36:12,595 - DEBUG :     - get_formula
2021-07-28 10:36:12,595 - DEBUG :     - get_array_formula
2021-07-28 10:36:12,595 - DEBUG :     - get_last_error
2021-07-28 10:36:12,595 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:36:12,595 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:36:12,595 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:36:12,595 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:36:12,595 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:36:12,595 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:36:12,595 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:36:12,595 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:36:12,595 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:36:12,595 - DEBUG :     - xl_cell_example
2021-07-28 10:36:12,596 - DEBUG :     - recalc_on_open_test
2021-07-28 10:36:12,596 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:36:12,596 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:36:12,596 - DEBUG :     - one_cell_one_sim
2021-07-28 10:36:12,596 - DEBUG :     - one_row_one_sim
2021-07-28 10:36:12,596 - DEBUG : Adding menus to Excel:
2021-07-28 10:36:12,596 - DEBUG :   - PyXLL
2021-07-28 10:36:12,596 - DEBUG :     - Reload PyXLL
2021-07-28 10:36:12,596 - DEBUG :     - Another example menu item
2021-07-28 10:36:12,596 - DEBUG :     - More Examples
2021-07-28 10:36:12,596 - DEBUG :       - Click me
2021-07-28 10:36:12,596 - DEBUG :       - Unicode Test
2021-07-28 10:36:12,596 - DEBUG :     - Open log file
2021-07-28 10:36:12,596 - DEBUG :     - Attach To VS Code
2021-07-28 10:36:12,596 - DEBUG :     - Custom Task Panes
2021-07-28 10:36:12,596 - DEBUG :       - Qt
2021-07-28 10:36:12,596 - DEBUG :       - Tk
2021-07-28 10:36:12,596 - DEBUG :       - Wx
2021-07-28 10:36:12,596 - DEBUG :     - Example Menu Item 1
2021-07-28 10:36:12,596 - DEBUG :     - Show last error
2021-07-28 10:36:12,596 - DEBUG :     - About PyXLL...
2021-07-28 10:36:12,596 - DEBUG :   - PyXLL example menu
2021-07-28 10:36:12,596 - DEBUG :     - Click me
2021-07-28 10:36:12,601 - DEBUG : Finished binding Python functions
2021-07-28 10:36:12,601 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 10:36:13,675 - DEBUG : pyxll._post_open complete.
2021-07-28 10:36:13,676 - DEBUG : PyXLL initialization complete.
2021-07-28 10:36:13,679 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:36:13,679 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:36:13,682 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:36:13,753 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:36:16,786 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 10:36:20,344 - ERROR : Traceback (most recent call last):
2021-07-28 10:36:20,344 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 162, in advanced_simulation_cell_wrapper
2021-07-28 10:36:20,345 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 10:36:20,345 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 150, in advanced_simulation_cell
2021-07-28 10:36:20,346 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 10:36:20,346 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 533, in parse
2021-07-28 10:36:20,347 - ERROR :     self.error_parsing(self.pos, 'unexpected variable')
2021-07-28 10:36:20,347 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 10:36:20,348 - ERROR :     raise Exception(self.errormsg)
2021-07-28 10:36:20,348 - ERROR : Exception: parse error [column 17]: unexpected variable, expression: Sheet1 name___E13+Sheet1 name___E11*Sheet3___E5
2021-07-28 10:53:17,938 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 10:53:17,940 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:53:17,940 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:53:17,940 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:53:17,941 - DEBUG : -------- PyXLL config --------
2021-07-28 10:53:17,941 - DEBUG : [LOG]
2021-07-28 10:53:17,941 - DEBUG : encoding = utf-8
2021-07-28 10:53:17,941 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:53:17,941 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:53:17,941 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:53:17,941 - DEBUG : verbosity = debug
2021-07-28 10:53:17,941 - DEBUG : 
2021-07-28 10:53:17,941 - DEBUG : [PYTHON]
2021-07-28 10:53:17,941 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:53:17,941 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:53:17,941 - DEBUG : 
2021-07-28 10:53:17,941 - DEBUG : [PYXLL]
2021-07-28 10:53:17,941 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:53:17,941 - DEBUG : developer_mode = 1
2021-07-28 10:53:17,941 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:53:17,941 - DEBUG : modules = 
2021-07-28 10:53:17,941 - DEBUG :     misc
2021-07-28 10:53:17,941 - DEBUG :     worksheetfuncs
2021-07-28 10:53:17,941 - DEBUG :     menus
2021-07-28 10:53:17,941 - DEBUG :     callbacks
2021-07-28 10:53:17,941 - DEBUG :     custom_task_panes
2021-07-28 10:53:17,941 - DEBUG :     test
2021-07-28 10:53:17,941 - DEBUG :     ribbon_functions
2021-07-28 10:53:17,941 - DEBUG :     debugging
2021-07-28 10:53:17,941 - DEBUG :     meta_variables
2021-07-28 10:53:17,941 - DEBUG :     selectiontools
2021-07-28 10:53:17,941 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:53:17,941 - DEBUG : ------------------------------
2021-07-28 10:53:17,941 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:53:17,941 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:53:17,941 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:53:17,941 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:53:17,941 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:53:17,941 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:53:17,941 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 10:53:18,017 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 10:53:18,017 - DEBUG : Reloading misc
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:53:18,017 - DEBUG : Reloaded misc
2021-07-28 10:53:18,017 - DEBUG : Reloading worksheetfuncs
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:53:18,017 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:53:18,017 - DEBUG : Reloaded worksheetfuncs
2021-07-28 10:53:18,017 - DEBUG : Reloading menus
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:53:18,017 - DEBUG : Reloaded menus
2021-07-28 10:53:18,017 - DEBUG : Reloading callbacks
2021-07-28 10:53:18,017 - DEBUG : Reloaded callbacks
2021-07-28 10:53:18,017 - DEBUG : Reloading custom_task_panes
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:53:18,017 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:53:18,017 - DEBUG : Reloaded custom_task_panes
2021-07-28 10:53:18,017 - DEBUG : Reloading test
2021-07-28 10:53:18,032 - DEBUG : Reloaded test
2021-07-28 10:53:18,032 - DEBUG : Reloading meta_variables
2021-07-28 10:53:18,033 - DEBUG : Reloaded meta_variables
2021-07-28 10:53:18,033 - DEBUG : Reloading dependency error_functions
2021-07-28 10:53:18,034 - DEBUG : Reloaded dependency error_functions
2021-07-28 10:53:18,034 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 10:53:18,034 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 10:53:18,034 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 10:53:18,034 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 10:53:18,034 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 10:53:18,034 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 10:53:18,034 - DEBUG : Reloading dependency examples
2021-07-28 10:53:18,034 - DEBUG : Reloaded dependency examples
2021-07-28 10:53:18,034 - DEBUG : Reloading ribbon_functions
2021-07-28 10:53:18,034 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:53:18,034 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:53:18,034 - DEBUG : Reloaded ribbon_functions
2021-07-28 10:53:18,034 - DEBUG : Reloading debugging
2021-07-28 10:53:18,034 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:53:18,034 - DEBUG : Reloaded debugging
2021-07-28 10:53:18,034 - DEBUG : Reloading selectiontools
2021-07-28 10:53:18,034 - DEBUG : Reloaded selectiontools
2021-07-28 10:53:18,082 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:53:18,083 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:53:18,105 - INFO : This product is licensed to 
2021-07-28 10:53:18,105 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:53:18,108 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:53:18,108 - DEBUG : Binding Python functions to Excel
2021-07-28 10:53:18,108 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:53:18,108 - DEBUG :     - pyxll_version
2021-07-28 10:53:18,108 - DEBUG :     - python_version
2021-07-28 10:53:18,109 - DEBUG :     - win32api_is_installed
2021-07-28 10:53:18,109 - DEBUG :     - win32com_is_installed
2021-07-28 10:53:18,109 - DEBUG :     - numpy_is_installed
2021-07-28 10:53:18,109 - DEBUG :     - pyxll_logfile
2021-07-28 10:53:18,109 - DEBUG :     - get_formula
2021-07-28 10:53:18,109 - DEBUG :     - get_array_formula
2021-07-28 10:53:18,109 - DEBUG :     - get_last_error
2021-07-28 10:53:18,109 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:53:18,109 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:53:18,109 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:53:18,109 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:53:18,109 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:53:18,109 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:53:18,109 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:53:18,109 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:53:18,109 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:53:18,109 - DEBUG :     - xl_cell_example
2021-07-28 10:53:18,109 - DEBUG :     - recalc_on_open_test
2021-07-28 10:53:18,109 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:53:18,109 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:53:18,109 - DEBUG :     - one_cell_one_sim
2021-07-28 10:53:18,109 - DEBUG :     - one_row_one_sim
2021-07-28 10:53:18,109 - DEBUG : Adding menus to Excel:
2021-07-28 10:53:18,109 - DEBUG :   - PyXLL
2021-07-28 10:53:18,109 - DEBUG :     - Reload PyXLL
2021-07-28 10:53:18,109 - DEBUG :     - Another example menu item
2021-07-28 10:53:18,109 - DEBUG :     - More Examples
2021-07-28 10:53:18,109 - DEBUG :       - Click me
2021-07-28 10:53:18,109 - DEBUG :       - Unicode Test
2021-07-28 10:53:18,109 - DEBUG :     - Open log file
2021-07-28 10:53:18,109 - DEBUG :     - Attach To VS Code
2021-07-28 10:53:18,109 - DEBUG :     - Custom Task Panes
2021-07-28 10:53:18,109 - DEBUG :       - Qt
2021-07-28 10:53:18,109 - DEBUG :       - Tk
2021-07-28 10:53:18,109 - DEBUG :       - Wx
2021-07-28 10:53:18,109 - DEBUG :     - Example Menu Item 1
2021-07-28 10:53:18,109 - DEBUG :     - Show last error
2021-07-28 10:53:18,109 - DEBUG :     - About PyXLL...
2021-07-28 10:53:18,109 - DEBUG :   - PyXLL example menu
2021-07-28 10:53:18,109 - DEBUG :     - Click me
2021-07-28 10:53:18,122 - DEBUG : Finished binding Python functions
2021-07-28 10:53:18,122 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 10:53:18,122 - ERROR : Error calling on reload callback 'callbacks.on_reload'
Traceback (most recent call last):
  File "build/x64/py38/res/release/pyxll.py", line 1007, in _post_open
  File "C:\Users\ethan\Documents\simExcel\examples\callbacks.py", line 52, in on_reload
    xlcAlert("Everything reloaded OK!\n\n(Message from callbacks.py example)")
RuntimeError: error calling xlcAlert (32)
2021-07-28 10:53:18,143 - ERROR : Traceback (most recent call last):
2021-07-28 10:53:18,143 - ERROR :   File "build/x64/py38/res/release/pyxll.py", line 1007, in _post_open
2021-07-28 10:53:18,143 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\callbacks.py", line 52, in on_reload
2021-07-28 10:53:18,143 - ERROR :     xlcAlert("Everything reloaded OK!\n\n(Message from callbacks.py example)")
2021-07-28 10:53:18,143 - ERROR : RuntimeError: error calling xlcAlert (32)
2021-07-28 10:53:18,143 - DEBUG : pyxll._post_open complete.
2021-07-28 10:53:18,143 - DEBUG : PyXLL initialization complete.
2021-07-28 10:53:18,155 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:53:18,155 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:53:18,159 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:53:18,285 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:53:31,276 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 10:53:31,278 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:53:31,278 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:53:31,278 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:53:31,278 - DEBUG : -------- PyXLL config --------
2021-07-28 10:53:31,278 - DEBUG : [LOG]
2021-07-28 10:53:31,278 - DEBUG : encoding = utf-8
2021-07-28 10:53:31,278 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:53:31,278 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:53:31,278 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:53:31,278 - DEBUG : verbosity = debug
2021-07-28 10:53:31,278 - DEBUG : 
2021-07-28 10:53:31,278 - DEBUG : [PYTHON]
2021-07-28 10:53:31,278 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:53:31,278 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:53:31,278 - DEBUG : 
2021-07-28 10:53:31,278 - DEBUG : [PYXLL]
2021-07-28 10:53:31,278 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:53:31,278 - DEBUG : developer_mode = 1
2021-07-28 10:53:31,278 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:53:31,278 - DEBUG : modules = 
2021-07-28 10:53:31,278 - DEBUG :     misc
2021-07-28 10:53:31,278 - DEBUG :     worksheetfuncs
2021-07-28 10:53:31,278 - DEBUG :     menus
2021-07-28 10:53:31,278 - DEBUG :     callbacks
2021-07-28 10:53:31,278 - DEBUG :     custom_task_panes
2021-07-28 10:53:31,278 - DEBUG :     test
2021-07-28 10:53:31,278 - DEBUG :     ribbon_functions
2021-07-28 10:53:31,278 - DEBUG :     debugging
2021-07-28 10:53:31,278 - DEBUG :     meta_variables
2021-07-28 10:53:31,278 - DEBUG :     selectiontools
2021-07-28 10:53:31,278 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:53:31,278 - DEBUG : ------------------------------
2021-07-28 10:53:31,278 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:53:31,278 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:53:31,278 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:53:31,279 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:53:31,280 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:53:31,281 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:53:31,281 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 10:53:31,335 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 10:53:31,335 - DEBUG : Reloading misc
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:53:31,335 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:53:31,335 - DEBUG : Reloaded misc
2021-07-28 10:53:31,340 - DEBUG : Reloading worksheetfuncs
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:53:31,341 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:53:31,341 - DEBUG : Reloaded worksheetfuncs
2021-07-28 10:53:31,341 - DEBUG : Reloading menus
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:53:31,341 - DEBUG : Reloaded menus
2021-07-28 10:53:31,341 - DEBUG : Reloading callbacks
2021-07-28 10:53:31,341 - DEBUG : Reloaded callbacks
2021-07-28 10:53:31,341 - DEBUG : Reloading custom_task_panes
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:53:31,341 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:53:31,341 - DEBUG : Reloaded custom_task_panes
2021-07-28 10:53:31,341 - DEBUG : Reloading test
2021-07-28 10:53:31,341 - DEBUG : Reloaded test
2021-07-28 10:53:31,341 - DEBUG : Reloading meta_variables
2021-07-28 10:53:31,350 - DEBUG : Reloaded meta_variables
2021-07-28 10:53:31,350 - DEBUG : Reloading dependency error_functions
2021-07-28 10:53:31,351 - DEBUG : Reloaded dependency error_functions
2021-07-28 10:53:31,351 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 10:53:31,352 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 10:53:31,352 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 10:53:31,353 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 10:53:31,353 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 10:53:31,353 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 10:53:31,353 - DEBUG : Reloading dependency examples
2021-07-28 10:53:31,353 - DEBUG : Reloaded dependency examples
2021-07-28 10:53:31,353 - DEBUG : Reloading ribbon_functions
2021-07-28 10:53:31,353 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001883DB80FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001883DBD0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001883DBCDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001883DC702E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001883DC22580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001883DC5AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001883DC09070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001883DC638E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001883DC5A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001883DC41490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001883DC3AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001883DC36F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001883DB8BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001883DC363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:53:31,358 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:53:31,358 - DEBUG : Reloaded ribbon_functions
2021-07-28 10:53:31,358 - DEBUG : Reloading debugging
2021-07-28 10:53:31,359 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:53:31,359 - DEBUG : Reloaded debugging
2021-07-28 10:53:31,359 - DEBUG : Reloading selectiontools
2021-07-28 10:53:31,359 - DEBUG : Reloaded selectiontools
2021-07-28 10:53:31,399 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:53:31,399 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:53:31,413 - INFO : This product is licensed to 
2021-07-28 10:53:31,413 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:53:31,425 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:53:31,425 - DEBUG : Binding Python functions to Excel
2021-07-28 10:53:31,425 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:53:31,425 - DEBUG :     - pyxll_version
2021-07-28 10:53:31,425 - DEBUG :     - python_version
2021-07-28 10:53:31,425 - DEBUG :     - win32api_is_installed
2021-07-28 10:53:31,425 - DEBUG :     - win32com_is_installed
2021-07-28 10:53:31,425 - DEBUG :     - numpy_is_installed
2021-07-28 10:53:31,425 - DEBUG :     - pyxll_logfile
2021-07-28 10:53:31,425 - DEBUG :     - get_formula
2021-07-28 10:53:31,425 - DEBUG :     - get_array_formula
2021-07-28 10:53:31,425 - DEBUG :     - get_last_error
2021-07-28 10:53:31,425 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:53:31,425 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:53:31,425 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:53:31,425 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:53:31,425 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:53:31,425 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:53:31,425 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:53:31,425 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:53:31,425 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:53:31,425 - DEBUG :     - xl_cell_example
2021-07-28 10:53:31,426 - DEBUG :     - recalc_on_open_test
2021-07-28 10:53:31,426 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:53:31,426 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:53:31,426 - DEBUG :     - one_cell_one_sim
2021-07-28 10:53:31,426 - DEBUG :     - one_row_one_sim
2021-07-28 10:53:31,432 - DEBUG : Adding menus to Excel:
2021-07-28 10:53:31,432 - DEBUG :   - PyXLL
2021-07-28 10:53:31,432 - DEBUG :     - Reload PyXLL
2021-07-28 10:53:31,432 - DEBUG :     - Another example menu item
2021-07-28 10:53:31,432 - DEBUG :     - More Examples
2021-07-28 10:53:31,432 - DEBUG :       - Click me
2021-07-28 10:53:31,432 - DEBUG :       - Unicode Test
2021-07-28 10:53:31,432 - DEBUG :     - Open log file
2021-07-28 10:53:31,432 - DEBUG :     - Attach To VS Code
2021-07-28 10:53:31,432 - DEBUG :     - Custom Task Panes
2021-07-28 10:53:31,432 - DEBUG :       - Qt
2021-07-28 10:53:31,432 - DEBUG :       - Tk
2021-07-28 10:53:31,432 - DEBUG :       - Wx
2021-07-28 10:53:31,432 - DEBUG :     - Example Menu Item 1
2021-07-28 10:53:31,432 - DEBUG :     - Show last error
2021-07-28 10:53:31,432 - DEBUG :     - About PyXLL...
2021-07-28 10:53:31,432 - DEBUG :   - PyXLL example menu
2021-07-28 10:53:31,432 - DEBUG :     - Click me
2021-07-28 10:53:31,441 - DEBUG : Finished binding Python functions
2021-07-28 10:53:31,441 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 10:53:32,333 - DEBUG : pyxll._post_open complete.
2021-07-28 10:53:32,334 - DEBUG : PyXLL initialization complete.
2021-07-28 10:53:32,340 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:53:32,340 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:53:32,343 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:53:32,345 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:53:34,540 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 10:53:39,034 - ERROR : Traceback (most recent call last):
2021-07-28 10:53:39,035 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 162, in advanced_simulation_cell_wrapper
2021-07-28 10:53:39,036 - ERROR :     
2021-07-28 10:53:39,036 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 150, in advanced_simulation_cell
2021-07-28 10:53:39,037 - ERROR :     
2021-07-28 10:53:39,037 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 533, in parse
2021-07-28 10:53:39,037 - ERROR :     self.error_parsing(self.pos, 'unexpected variable')
2021-07-28 10:53:39,037 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 10:53:39,038 - ERROR :     raise Exception(self.errormsg)
2021-07-28 10:53:39,038 - ERROR : Exception: parse error [column 17]: unexpected variable, expression: Sheet1 name___E13+Sheet1 name___E11*Sheet3___E5
2021-07-28 10:53:39,882 - DEBUG : Closing PyXLL Python module.
2021-07-28 10:53:39,882 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 10:53:39,883 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 10:53:39,883 - DEBUG : PyXLL Python module closed.
2021-07-28 10:53:43,682 - DEBUG : 
Wed Jul 28 10:53:43 2021
---------- PyXLL Stopped ----------
2021-07-28 10:53:49,923 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 10:53:49,923 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 10:53:49,925 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 10:53:49,925 - DEBUG : -------- PyXLL config --------
2021-07-28 10:53:49,925 - DEBUG : [LOG]
2021-07-28 10:53:49,925 - DEBUG : encoding = utf-8
2021-07-28 10:53:49,925 - DEBUG : file = pyxll.20210728.log
2021-07-28 10:53:49,925 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 10:53:49,925 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 10:53:49,925 - DEBUG : verbosity = debug
2021-07-28 10:53:49,925 - DEBUG : 
2021-07-28 10:53:49,925 - DEBUG : [PYTHON]
2021-07-28 10:53:49,925 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 10:53:49,925 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 10:53:49,925 - DEBUG : 
2021-07-28 10:53:49,925 - DEBUG : [PYXLL]
2021-07-28 10:53:49,925 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 10:53:49,925 - DEBUG : developer_mode = 1
2021-07-28 10:53:49,925 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 10:53:49,925 - DEBUG : modules = 
2021-07-28 10:53:49,925 - DEBUG :     misc
2021-07-28 10:53:49,926 - DEBUG :     worksheetfuncs
2021-07-28 10:53:49,926 - DEBUG :     menus
2021-07-28 10:53:49,926 - DEBUG :     callbacks
2021-07-28 10:53:49,927 - DEBUG :     custom_task_panes
2021-07-28 10:53:49,927 - DEBUG :     test
2021-07-28 10:53:49,927 - DEBUG :     ribbon_functions
2021-07-28 10:53:49,927 - DEBUG :     debugging
2021-07-28 10:53:49,927 - DEBUG :     meta_variables
2021-07-28 10:53:49,927 - DEBUG :     selectiontools
2021-07-28 10:53:49,927 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 10:53:49,927 - DEBUG : ------------------------------
2021-07-28 10:53:49,929 - DEBUG : Attempting to load python38.dll
2021-07-28 10:53:49,932 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 10:53:49,933 - DEBUG : Checking Py_IsInitialized...
2021-07-28 10:53:49,933 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 10:53:50,134 - DEBUG : Calling Py_Initialize...
2021-07-28 10:53:50,315 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 10:53:50,316 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 10:53:50,316 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 10:53:50,316 - DEBUG : Python is initialized.
2021-07-28 10:53:50,316 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 10:53:50,320 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 10:53:50,320 - DEBUG : Looking for module 'site'...
2021-07-28 10:53:50,351 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 10:53:50,351 - DEBUG : Importing pyxll module
2021-07-28 10:53:50,351 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 10:53:50,351 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 10:53:50,351 - DEBUG :   Detected Python3
2021-07-28 10:53:50,400 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 10:53:50,400 - DEBUG : pyxll module imported
2021-07-28 10:53:50,400 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:53:50,400 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:53:50,400 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:53:50,406 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:53:50,407 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:53:50,644 - DEBUG : Importing misc
2021-07-28 10:53:50,645 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:53:50,646 - DEBUG : Imported misc
2021-07-28 10:53:50,646 - DEBUG : Importing worksheetfuncs
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:53:50,646 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:53:50,646 - DEBUG : Imported worksheetfuncs
2021-07-28 10:53:50,646 - DEBUG : Importing menus
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:53:50,658 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:53:50,658 - DEBUG : Imported menus
2021-07-28 10:53:50,658 - DEBUG : Importing callbacks
2021-07-28 10:53:50,661 - DEBUG : Imported callbacks
2021-07-28 10:53:50,661 - DEBUG : Importing custom_task_panes
2021-07-28 10:53:50,662 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:53:50,662 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:53:50,662 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:53:50,662 - DEBUG : Imported custom_task_panes
2021-07-28 10:53:50,662 - DEBUG : Importing test
2021-07-28 10:53:50,663 - DEBUG : Imported test
2021-07-28 10:53:50,663 - DEBUG : Importing ribbon_functions
2021-07-28 10:53:51,776 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 10:53:51,823 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:53:51,838 - DEBUG : matplotlib version 3.4.2
2021-07-28 10:53:51,838 - DEBUG : interactive is False
2021-07-28 10:53:51,838 - DEBUG : platform is win32
2021-07-28 10:53:51,838 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_d90000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_d90000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 10:53:51,935 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 10:53:51,946 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 10:53:52,197 - DEBUG : Loaded backend agg version unknown.
2021-07-28 10:53:52,200 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000017BC5250FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000017BC529DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000017BC52A7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000017BC53402E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000017BC52F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000017BC532AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000017BC52D8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000017BC53338E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000017BC532A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000017BC5312490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000017BC530ACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000017BC5306F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000017BC525BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000017BC53063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000017BC5250FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000017BC529DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000017BC52A7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000017BC53402E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000017BC52F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000017BC532AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000017BC52D8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000017BC53338E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000017BC532A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000017BC5312490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000017BC530ACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000017BC5306F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000017BC525BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000017BC53063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:53:52,200 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:53:52,200 - DEBUG : Imported ribbon_functions
2021-07-28 10:53:52,200 - DEBUG : Importing debugging
2021-07-28 10:53:52,697 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:53:52,699 - DEBUG : Imported debugging
2021-07-28 10:53:52,699 - DEBUG : Importing meta_variables
2021-07-28 10:53:52,699 - DEBUG : Imported meta_variables
2021-07-28 10:53:52,699 - DEBUG : Importing selectiontools
2021-07-28 10:53:52,699 - DEBUG : Imported selectiontools
2021-07-28 10:53:52,731 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:53:52,740 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:53:52,754 - INFO : This product is licensed to 
2021-07-28 10:53:52,754 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:53:52,755 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:53:52,755 - DEBUG : Binding Python functions to Excel
2021-07-28 10:53:52,756 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:53:52,756 - DEBUG :     - pyxll_version
2021-07-28 10:53:52,756 - DEBUG :     - python_version
2021-07-28 10:53:52,756 - DEBUG :     - win32api_is_installed
2021-07-28 10:53:52,756 - DEBUG :     - win32com_is_installed
2021-07-28 10:53:52,756 - DEBUG :     - numpy_is_installed
2021-07-28 10:53:52,756 - DEBUG :     - pyxll_logfile
2021-07-28 10:53:52,756 - DEBUG :     - get_formula
2021-07-28 10:53:52,756 - DEBUG :     - get_array_formula
2021-07-28 10:53:52,756 - DEBUG :     - get_last_error
2021-07-28 10:53:52,756 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:53:52,756 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:53:52,756 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:53:52,756 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:53:52,756 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:53:52,756 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:53:52,756 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:53:52,756 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:53:52,756 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:53:52,756 - DEBUG :     - xl_cell_example
2021-07-28 10:53:52,757 - DEBUG :     - recalc_on_open_test
2021-07-28 10:53:52,757 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:53:52,757 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:53:52,757 - DEBUG :     - one_cell_one_sim
2021-07-28 10:53:52,757 - DEBUG :     - one_row_one_sim
2021-07-28 10:53:52,768 - DEBUG : Adding menus to Excel:
2021-07-28 10:53:52,768 - DEBUG :   - PyXLL
2021-07-28 10:53:52,768 - DEBUG :     - Reload PyXLL
2021-07-28 10:53:52,768 - DEBUG :     - Another example menu item
2021-07-28 10:53:52,768 - DEBUG :     - More Examples
2021-07-28 10:53:52,768 - DEBUG :       - Click me
2021-07-28 10:53:52,768 - DEBUG :       - Unicode Test
2021-07-28 10:53:52,768 - DEBUG :     - Open log file
2021-07-28 10:53:52,768 - DEBUG :     - Attach To VS Code
2021-07-28 10:53:52,768 - DEBUG :     - Custom Task Panes
2021-07-28 10:53:52,768 - DEBUG :       - Qt
2021-07-28 10:53:52,768 - DEBUG :       - Tk
2021-07-28 10:53:52,768 - DEBUG :       - Wx
2021-07-28 10:53:52,768 - DEBUG :     - Example Menu Item 1
2021-07-28 10:53:52,768 - DEBUG :     - Show last error
2021-07-28 10:53:52,768 - DEBUG :     - About PyXLL...
2021-07-28 10:53:52,768 - DEBUG :   - PyXLL example menu
2021-07-28 10:53:52,768 - DEBUG :     - Click me
2021-07-28 10:53:52,804 - DEBUG : Finished binding Python functions
2021-07-28 10:53:52,804 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 10:53:52,804 - DEBUG : pyxll._post_open complete.
2021-07-28 10:53:52,814 - DEBUG : PyXLL initialization complete.
2021-07-28 10:53:53,122 - DEBUG : Initializing PyXLL Python module.
2021-07-28 10:53:53,122 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 10:53:53,122 - DEBUG : PyXLL Python module initialized.
2021-07-28 10:53:53,123 - DEBUG : Functions will not be cancellable by default.
2021-07-28 10:53:53,124 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 10:53:53,125 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 10:53:53,169 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 10:53:53,169 - DEBUG : Reloading misc
2021-07-28 10:53:53,169 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 10:53:53,169 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 10:53:53,169 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 10:53:53,176 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 10:53:53,176 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 10:53:53,176 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 10:53:53,176 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 10:53:53,177 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 10:53:53,177 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 10:53:53,177 - DEBUG : Reloaded misc
2021-07-28 10:53:53,177 - DEBUG : Reloading worksheetfuncs
2021-07-28 10:53:53,178 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 10:53:53,178 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 10:53:53,178 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 10:53:53,178 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 10:53:53,179 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 10:53:53,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 10:53:53,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 10:53:53,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 10:53:53,180 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 10:53:53,180 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 10:53:53,180 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 10:53:53,180 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 10:53:53,180 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 10:53:53,181 - DEBUG : Reloaded worksheetfuncs
2021-07-28 10:53:53,181 - DEBUG : Reloading menus
2021-07-28 10:53:53,181 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 10:53:53,182 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 10:53:53,182 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 10:53:53,182 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 10:53:53,182 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 10:53:53,182 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 10:53:53,182 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 10:53:53,182 - DEBUG : Reloaded menus
2021-07-28 10:53:53,182 - DEBUG : Reloading callbacks
2021-07-28 10:53:53,183 - DEBUG : Reloaded callbacks
2021-07-28 10:53:53,183 - DEBUG : Reloading custom_task_panes
2021-07-28 10:53:53,184 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 10:53:53,184 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 10:53:53,184 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 10:53:53,184 - DEBUG : Reloaded custom_task_panes
2021-07-28 10:53:53,184 - DEBUG : Reloading test
2021-07-28 10:53:53,184 - DEBUG : Reloaded test
2021-07-28 10:53:53,184 - DEBUG : Reloading meta_variables
2021-07-28 10:53:53,184 - DEBUG : Reloaded meta_variables
2021-07-28 10:53:53,184 - DEBUG : Reloading dependency error_functions
2021-07-28 10:53:53,184 - DEBUG : Reloaded dependency error_functions
2021-07-28 10:53:53,184 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 10:53:53,188 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 10:53:53,188 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 10:53:53,189 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 10:53:53,189 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 10:53:53,189 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 10:53:53,190 - DEBUG : Reloading dependency examples
2021-07-28 10:53:53,191 - DEBUG : Reloaded dependency examples
2021-07-28 10:53:53,191 - DEBUG : Reloading ribbon_functions
2021-07-28 10:53:53,192 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000017BC5250FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000017BC529DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000017BC52A7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000017BC53402E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000017BC52F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000017BC532AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000017BC52D8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000017BC53338E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000017BC532A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000017BC5312490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000017BC530ACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000017BC5306F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000017BC525BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000017BC53063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000017BC5250FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000017BC529DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000017BC52A7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000017BC53402E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000017BC52F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000017BC532AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000017BC52D8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000017BC53338E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000017BC532A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000017BC5312490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000017BC530ACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000017BC5306F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000017BC525BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000017BC53063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 10:53:53,192 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 10:53:53,193 - DEBUG : Reloaded ribbon_functions
2021-07-28 10:53:53,193 - DEBUG : Reloading debugging
2021-07-28 10:53:53,193 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 10:53:53,193 - DEBUG : Reloaded debugging
2021-07-28 10:53:53,194 - DEBUG : Reloading selectiontools
2021-07-28 10:53:53,194 - DEBUG : Reloaded selectiontools
2021-07-28 10:53:53,239 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 10:53:53,239 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 10:53:53,256 - INFO : This product is licensed to 
2021-07-28 10:53:53,256 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 10:53:53,263 - DEBUG : Calling pyxll._post_open.
2021-07-28 10:53:53,263 - DEBUG : Binding Python functions to Excel
2021-07-28 10:53:53,263 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 10:53:53,263 - DEBUG :     - pyxll_version
2021-07-28 10:53:53,263 - DEBUG :     - python_version
2021-07-28 10:53:53,263 - DEBUG :     - win32api_is_installed
2021-07-28 10:53:53,263 - DEBUG :     - win32com_is_installed
2021-07-28 10:53:53,263 - DEBUG :     - numpy_is_installed
2021-07-28 10:53:53,263 - DEBUG :     - pyxll_logfile
2021-07-28 10:53:53,264 - DEBUG :     - get_formula
2021-07-28 10:53:53,264 - DEBUG :     - get_array_formula
2021-07-28 10:53:53,264 - DEBUG :     - get_last_error
2021-07-28 10:53:53,264 - DEBUG :     - basic_pyxll_function_1
2021-07-28 10:53:53,264 - DEBUG :     - basic_pyxll_function_2
2021-07-28 10:53:53,264 - DEBUG :     - basic_pyxll_function_3
2021-07-28 10:53:53,264 - DEBUG :     - var_pyxll_function_1
2021-07-28 10:53:53,264 - DEBUG :     - var_pyxll_function_2
2021-07-28 10:53:53,264 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 10:53:53,264 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 10:53:53,264 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 10:53:53,264 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 10:53:53,264 - DEBUG :     - xl_cell_example
2021-07-28 10:53:53,264 - DEBUG :     - recalc_on_open_test
2021-07-28 10:53:53,264 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 10:53:53,265 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 10:53:53,265 - DEBUG :     - one_cell_one_sim
2021-07-28 10:53:53,265 - DEBUG :     - one_row_one_sim
2021-07-28 10:53:53,269 - DEBUG : Adding menus to Excel:
2021-07-28 10:53:53,269 - DEBUG :   - PyXLL
2021-07-28 10:53:53,269 - DEBUG :     - Reload PyXLL
2021-07-28 10:53:53,269 - DEBUG :     - Another example menu item
2021-07-28 10:53:53,269 - DEBUG :     - More Examples
2021-07-28 10:53:53,269 - DEBUG :       - Click me
2021-07-28 10:53:53,269 - DEBUG :       - Unicode Test
2021-07-28 10:53:53,269 - DEBUG :     - Open log file
2021-07-28 10:53:53,269 - DEBUG :     - Attach To VS Code
2021-07-28 10:53:53,269 - DEBUG :     - Custom Task Panes
2021-07-28 10:53:53,269 - DEBUG :       - Qt
2021-07-28 10:53:53,269 - DEBUG :       - Tk
2021-07-28 10:53:53,269 - DEBUG :       - Wx
2021-07-28 10:53:53,269 - DEBUG :     - Example Menu Item 1
2021-07-28 10:53:53,269 - DEBUG :     - Show last error
2021-07-28 10:53:53,269 - DEBUG :     - About PyXLL...
2021-07-28 10:53:53,269 - DEBUG :   - PyXLL example menu
2021-07-28 10:53:53,269 - DEBUG :     - Click me
2021-07-28 10:53:53,271 - DEBUG : Finished binding Python functions
2021-07-28 10:53:53,271 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 10:53:54,636 - DEBUG : pyxll._post_open complete.
2021-07-28 10:53:54,642 - DEBUG : PyXLL initialization complete.
2021-07-28 10:54:01,083 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:54:01,083 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:54:01,099 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:54:01,139 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:54:01,144 - DEBUG : Loading PyXLL COM Addin
2021-07-28 10:54:01,144 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 10:54:01,147 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 10:54:01,154 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 10:55:07,953 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 10:55:13,289 - ERROR : Traceback (most recent call last):
2021-07-28 10:55:13,290 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 165, in advanced_simulation_cell_wrapper
2021-07-28 10:55:13,291 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 10:55:13,291 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 80, in advanced_simulation_cell
2021-07-28 10:55:13,292 - ERROR :     cell_information = cell_data(control=control, cell_location=curr_cell_address, sheet_name=sheet_name)
2021-07-28 10:55:13,292 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 108, in cell_data
2021-07-28 10:55:13,292 - ERROR :     distrInfoPageName = xl.Worksheets(sheet_name).Range(id_location).Value
2021-07-28 10:55:13,293 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 10:55:13,293 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 10:55:13,293 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 10:55:54,000 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 10:55:54,998 - ERROR : Traceback (most recent call last):
2021-07-28 10:55:54,998 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 165, in advanced_simulation_cell_wrapper
2021-07-28 10:55:54,998 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 10:55:54,998 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 80, in advanced_simulation_cell
2021-07-28 10:55:54,998 - ERROR :     cell_information = cell_data(control=control, cell_location=curr_cell_address, sheet_name=sheet_name)
2021-07-28 10:55:54,998 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 108, in cell_data
2021-07-28 10:55:54,998 - ERROR :     distrInfoPageName = xl.Worksheets(sheet_name).Range(id_location).Value
2021-07-28 10:55:54,998 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 10:55:54,998 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 10:55:54,998 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 11:00:53,339 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 11:42:31,320 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 11:43:17,369 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 11:43:17,381 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,382 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 11:43:17,383 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,385 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,386 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,386 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,389 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,391 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,391 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,392 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,398 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,400 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,401 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,402 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,409 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,409 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 11:43:17,409 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,409 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,409 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 11:43:17,409 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,414 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 11:43:17,416 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,417 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,417 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,417 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,419 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,419 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,419 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,419 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,419 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,424 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,424 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,424 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 11:43:17,424 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,424 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,430 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,431 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,432 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,439 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,441 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,441 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,441 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,441 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,444 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 11:43:17,444 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,444 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,444 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,444 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,448 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,449 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,449 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,451 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,459 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,459 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,461 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,461 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,461 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,466 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,466 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,466 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,469 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,469 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,469 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,469 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,469 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,469 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,474 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,480 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,480 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,481 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,482 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,483 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,490 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 11:43:17,491 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,492 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,499 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,500 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,501 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,501 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,501 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 11:43:17,501 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,501 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,505 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,506 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,506 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,506 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,506 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,506 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,510 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,511 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 11:43:17,516 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,517 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,517 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,517 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,520 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,531 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,532 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,540 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,540 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,541 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 11:43:17,541 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,541 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,541 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,544 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,544 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,544 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,544 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,544 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,548 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,549 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,550 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,550 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,551 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,560 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,566 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,567 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,567 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,567 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 11:43:17,570 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,570 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,571 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,572 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,572 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,572 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,574 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 11:43:17,574 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,574 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,574 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,574 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 11:43:17,580 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,580 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,581 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,581 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,582 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,583 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,583 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,583 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,583 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,583 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,583 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,590 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,599 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,600 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,600 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,601 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,602 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,609 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,609 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,611 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,611 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,611 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 11:43:17,611 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,611 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,616 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,616 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,617 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,618 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,620 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 11:43:17,621 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,621 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,621 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,621 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,621 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,621 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,624 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,630 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,630 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,630 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,631 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,632 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,632 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 11:43:17,633 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,639 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,639 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,640 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,644 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,648 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,649 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,649 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,650 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,651 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,651 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,652 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,659 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,665 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 11:43:17,666 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,669 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,669 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,669 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,671 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,672 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,672 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,672 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,672 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,674 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,679 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,681 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,682 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,682 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,683 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,689 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,690 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,698 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,699 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,699 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,699 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,701 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,701 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,701 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,702 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,709 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,710 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,715 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,715 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,716 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,719 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,719 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,719 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,721 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,722 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,730 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,730 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,730 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,731 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,732 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,732 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,732 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,733 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,739 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,744 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,749 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,750 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,755 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,761 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,764 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,766 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,766 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,767 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,767 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,768 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,768 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,769 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,769 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,770 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,771 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,771 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,771 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,772 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,772 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 11:43:17,773 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,773 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,774 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,775 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 11:43:17,775 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 11:43:17,776 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,776 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,777 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,777 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,777 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,777 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,777 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,777 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 11:43:17,780 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,780 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,781 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,781 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,782 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,783 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 11:43:17,783 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,783 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,784 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,784 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 11:43:17,785 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,789 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,800 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,800 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,801 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,804 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,809 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,810 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,815 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,816 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,816 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,816 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,816 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,820 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,830 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,830 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 11:43:17,831 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 11:43:17,831 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,832 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,832 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,833 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,834 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,834 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,835 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,839 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,850 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,850 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,851 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,860 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,870 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,871 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,872 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,872 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,872 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,874 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,874 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 11:43:17,874 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,874 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,874 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,874 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,880 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,881 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,881 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,882 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,883 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,884 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,884 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,885 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,885 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,886 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,886 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,887 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,887 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,888 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,888 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,889 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,889 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,890 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,890 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,890 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,891 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,891 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,892 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,892 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,893 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,893 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,893 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,893 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,894 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,894 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,895 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,895 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,895 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,896 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,896 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,897 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,898 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,898 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,899 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,899 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,900 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,901 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,901 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,901 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,902 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,902 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,903 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,903 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,904 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,904 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,904 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,905 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,905 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,906 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,906 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,907 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 11:43:17,907 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,908 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,909 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,909 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,910 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,910 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,911 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,912 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,912 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,913 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,913 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,914 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,914 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,916 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,917 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,917 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,918 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,918 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,919 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,919 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,919 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,920 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,921 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,921 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,921 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,921 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 11:43:17,922 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,922 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,922 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,923 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,923 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,924 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,924 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,925 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 11:43:17,925 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,925 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,925 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,927 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,927 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,928 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,928 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,929 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,929 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,929 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 11:43:17,930 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,930 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 11:43:17,930 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,931 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,931 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,931 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,931 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,932 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,932 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,932 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,933 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,934 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,934 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 11:43:17,934 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,935 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,935 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,935 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,935 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,936 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,936 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,936 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,936 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,937 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,937 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,937 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,937 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,938 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,938 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,939 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,939 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,939 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,939 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,939 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,940 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,941 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 11:43:17,941 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 11:43:17,941 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,942 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,942 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,942 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,942 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,943 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,943 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,944 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 11:43:17,944 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,944 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 11:43:17,945 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,945 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,945 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,945 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,945 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,946 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,946 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,947 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,947 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 11:43:17,947 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,948 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,948 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,948 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 11:43:17,949 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,949 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,949 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,950 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,950 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 11:43:17,950 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,950 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,951 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,951 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,951 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 11:43:17,952 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,953 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 11:43:17,953 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,953 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 11:43:17,954 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 11:43:17,954 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 11:43:17,955 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 11:43:17,955 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,955 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 11:43:17,957 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 11:43:17,957 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 11:43:17,957 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 11:50:59,509 - DEBUG : Closing PyXLL Python module.
2021-07-28 11:50:59,510 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 11:50:59,511 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 11:50:59,511 - DEBUG : PyXLL Python module closed.
2021-07-28 11:51:04,273 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 11:51:04,273 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 11:51:04,274 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 11:51:04,274 - DEBUG : -------- PyXLL config --------
2021-07-28 11:51:04,274 - DEBUG : [LOG]
2021-07-28 11:51:04,274 - DEBUG : encoding = utf-8
2021-07-28 11:51:04,274 - DEBUG : file = pyxll.20210728.log
2021-07-28 11:51:04,274 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 11:51:04,274 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 11:51:04,274 - DEBUG : verbosity = debug
2021-07-28 11:51:04,274 - DEBUG : 
2021-07-28 11:51:04,274 - DEBUG : [PYTHON]
2021-07-28 11:51:04,274 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 11:51:04,274 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 11:51:04,274 - DEBUG : 
2021-07-28 11:51:04,274 - DEBUG : [PYXLL]
2021-07-28 11:51:04,274 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 11:51:04,274 - DEBUG : developer_mode = 1
2021-07-28 11:51:04,274 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 11:51:04,274 - DEBUG : modules = 
2021-07-28 11:51:04,274 - DEBUG :     misc
2021-07-28 11:51:04,274 - DEBUG :     worksheetfuncs
2021-07-28 11:51:04,274 - DEBUG :     menus
2021-07-28 11:51:04,274 - DEBUG :     callbacks
2021-07-28 11:51:04,274 - DEBUG :     custom_task_panes
2021-07-28 11:51:04,274 - DEBUG :     test
2021-07-28 11:51:04,274 - DEBUG :     ribbon_functions
2021-07-28 11:51:04,274 - DEBUG :     debugging
2021-07-28 11:51:04,274 - DEBUG :     meta_variables
2021-07-28 11:51:04,274 - DEBUG :     selectiontools
2021-07-28 11:51:04,274 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 11:51:04,274 - DEBUG : ------------------------------
2021-07-28 11:51:04,276 - DEBUG : Attempting to load python38.dll
2021-07-28 11:51:04,277 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 11:51:04,279 - DEBUG : Checking Py_IsInitialized...
2021-07-28 11:51:04,279 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 11:51:04,479 - DEBUG : Calling Py_Initialize...
2021-07-28 11:51:04,650 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 11:51:04,650 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 11:51:04,650 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 11:51:04,650 - DEBUG : Python is initialized.
2021-07-28 11:51:04,652 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 11:51:04,653 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 11:51:04,653 - DEBUG : Looking for module 'site'...
2021-07-28 11:51:04,690 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 11:51:04,690 - DEBUG : Importing pyxll module
2021-07-28 11:51:04,690 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 11:51:04,690 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 11:51:04,690 - DEBUG :   Detected Python3
2021-07-28 11:51:04,748 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 11:51:04,758 - DEBUG : pyxll module imported
2021-07-28 11:51:04,758 - DEBUG : Initializing PyXLL Python module.
2021-07-28 11:51:04,758 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 11:51:04,759 - DEBUG : PyXLL Python module initialized.
2021-07-28 11:51:04,762 - DEBUG : Functions will not be cancellable by default.
2021-07-28 11:51:04,763 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 11:51:05,170 - DEBUG : Importing misc
2021-07-28 11:51:05,175 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 11:51:05,175 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 11:51:05,175 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 11:51:05,175 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 11:51:05,175 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 11:51:05,177 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 11:51:05,178 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 11:51:05,179 - DEBUG : Imported misc
2021-07-28 11:51:05,179 - DEBUG : Importing worksheetfuncs
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 11:51:05,179 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 11:51:05,188 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 11:51:05,188 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 11:51:05,188 - DEBUG : Imported worksheetfuncs
2021-07-28 11:51:05,188 - DEBUG : Importing menus
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 11:51:05,199 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 11:51:05,199 - DEBUG : Imported menus
2021-07-28 11:51:05,199 - DEBUG : Importing callbacks
2021-07-28 11:51:05,199 - DEBUG : Imported callbacks
2021-07-28 11:51:05,199 - DEBUG : Importing custom_task_panes
2021-07-28 11:51:05,206 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 11:51:05,206 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 11:51:05,206 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 11:51:05,206 - DEBUG : Imported custom_task_panes
2021-07-28 11:51:05,206 - DEBUG : Importing test
2021-07-28 11:51:05,208 - DEBUG : Imported test
2021-07-28 11:51:05,208 - DEBUG : Importing ribbon_functions
2021-07-28 11:51:06,863 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 11:51:06,890 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 11:51:06,890 - DEBUG : matplotlib version 3.4.2
2021-07-28 11:51:06,890 - DEBUG : interactive is False
2021-07-28 11:51:06,890 - DEBUG : platform is win32
2021-07-28 11:51:06,890 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_aa0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_aa0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 11:51:06,963 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 11:51:06,970 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 11:51:07,358 - DEBUG : Loaded backend agg version unknown.
2021-07-28 11:51:07,362 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 11:51:07,363 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 11:51:07,363 - DEBUG : Imported ribbon_functions
2021-07-28 11:51:07,363 - DEBUG : Importing debugging
2021-07-28 11:51:07,888 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 11:51:07,888 - DEBUG : Imported debugging
2021-07-28 11:51:07,888 - DEBUG : Importing meta_variables
2021-07-28 11:51:07,888 - DEBUG : Imported meta_variables
2021-07-28 11:51:07,888 - DEBUG : Importing selectiontools
2021-07-28 11:51:07,890 - DEBUG : Imported selectiontools
2021-07-28 11:51:07,928 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 11:51:07,933 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 11:51:07,952 - INFO : This product is licensed to 
2021-07-28 11:51:07,952 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 11:51:07,954 - DEBUG : Calling pyxll._post_open.
2021-07-28 11:51:07,954 - DEBUG : Binding Python functions to Excel
2021-07-28 11:51:07,954 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 11:51:07,954 - DEBUG :     - pyxll_version
2021-07-28 11:51:07,954 - DEBUG :     - python_version
2021-07-28 11:51:07,954 - DEBUG :     - win32api_is_installed
2021-07-28 11:51:07,954 - DEBUG :     - win32com_is_installed
2021-07-28 11:51:07,954 - DEBUG :     - numpy_is_installed
2021-07-28 11:51:07,954 - DEBUG :     - pyxll_logfile
2021-07-28 11:51:07,954 - DEBUG :     - get_formula
2021-07-28 11:51:07,954 - DEBUG :     - get_array_formula
2021-07-28 11:51:07,954 - DEBUG :     - get_last_error
2021-07-28 11:51:07,954 - DEBUG :     - basic_pyxll_function_1
2021-07-28 11:51:07,955 - DEBUG :     - basic_pyxll_function_2
2021-07-28 11:51:07,955 - DEBUG :     - basic_pyxll_function_3
2021-07-28 11:51:07,955 - DEBUG :     - var_pyxll_function_1
2021-07-28 11:51:07,955 - DEBUG :     - var_pyxll_function_2
2021-07-28 11:51:07,955 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 11:51:07,955 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 11:51:07,955 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 11:51:07,955 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 11:51:07,955 - DEBUG :     - xl_cell_example
2021-07-28 11:51:07,955 - DEBUG :     - recalc_on_open_test
2021-07-28 11:51:07,955 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 11:51:07,955 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 11:51:07,955 - DEBUG :     - one_cell_one_sim
2021-07-28 11:51:07,955 - DEBUG :     - one_row_one_sim
2021-07-28 11:51:07,973 - DEBUG : Adding menus to Excel:
2021-07-28 11:51:07,973 - DEBUG :   - PyXLL
2021-07-28 11:51:07,973 - DEBUG :     - Reload PyXLL
2021-07-28 11:51:07,973 - DEBUG :     - Another example menu item
2021-07-28 11:51:07,973 - DEBUG :     - More Examples
2021-07-28 11:51:07,973 - DEBUG :       - Click me
2021-07-28 11:51:07,973 - DEBUG :       - Unicode Test
2021-07-28 11:51:07,973 - DEBUG :     - Open log file
2021-07-28 11:51:07,973 - DEBUG :     - Attach To VS Code
2021-07-28 11:51:07,973 - DEBUG :     - Custom Task Panes
2021-07-28 11:51:07,973 - DEBUG :       - Qt
2021-07-28 11:51:07,973 - DEBUG :       - Tk
2021-07-28 11:51:07,973 - DEBUG :       - Wx
2021-07-28 11:51:07,973 - DEBUG :     - Example Menu Item 1
2021-07-28 11:51:07,973 - DEBUG :     - Show last error
2021-07-28 11:51:07,973 - DEBUG :     - About PyXLL...
2021-07-28 11:51:07,973 - DEBUG :   - PyXLL example menu
2021-07-28 11:51:07,973 - DEBUG :     - Click me
2021-07-28 11:51:08,028 - DEBUG : Finished binding Python functions
2021-07-28 11:51:08,028 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 11:51:08,028 - DEBUG : pyxll._post_open complete.
2021-07-28 11:51:08,041 - DEBUG : PyXLL initialization complete.
2021-07-28 11:51:10,384 - DEBUG : Initializing PyXLL Python module.
2021-07-28 11:51:10,384 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 11:51:10,385 - DEBUG : PyXLL Python module initialized.
2021-07-28 11:51:10,386 - DEBUG : Functions will not be cancellable by default.
2021-07-28 11:51:10,386 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 11:51:10,387 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 11:51:10,428 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 11:51:10,428 - DEBUG : Reloading misc
2021-07-28 11:51:10,429 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 11:51:10,429 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 11:51:10,429 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 11:51:10,429 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 11:51:10,430 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 11:51:10,430 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 11:51:10,430 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 11:51:10,430 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 11:51:10,431 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 11:51:10,431 - DEBUG : Reloaded misc
2021-07-28 11:51:10,431 - DEBUG : Reloading worksheetfuncs
2021-07-28 11:51:10,432 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 11:51:10,432 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 11:51:10,433 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 11:51:10,433 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 11:51:10,433 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 11:51:10,433 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 11:51:10,433 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 11:51:10,434 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 11:51:10,434 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 11:51:10,434 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 11:51:10,434 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 11:51:10,434 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 11:51:10,434 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 11:51:10,435 - DEBUG : Reloaded worksheetfuncs
2021-07-28 11:51:10,435 - DEBUG : Reloading menus
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 11:51:10,435 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 11:51:10,435 - DEBUG : Reloaded menus
2021-07-28 11:51:10,435 - DEBUG : Reloading callbacks
2021-07-28 11:51:10,436 - DEBUG : Reloaded callbacks
2021-07-28 11:51:10,436 - DEBUG : Reloading custom_task_panes
2021-07-28 11:51:10,437 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 11:51:10,437 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 11:51:10,437 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 11:51:10,437 - DEBUG : Reloaded custom_task_panes
2021-07-28 11:51:10,437 - DEBUG : Reloading test
2021-07-28 11:51:10,438 - DEBUG : Reloaded test
2021-07-28 11:51:10,438 - DEBUG : Reloading meta_variables
2021-07-28 11:51:10,439 - DEBUG : Reloaded meta_variables
2021-07-28 11:51:10,439 - DEBUG : Reloading dependency error_functions
2021-07-28 11:51:10,439 - DEBUG : Reloaded dependency error_functions
2021-07-28 11:51:10,440 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 11:51:10,440 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 11:51:10,440 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 11:51:10,441 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 11:51:10,441 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 11:51:10,442 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 11:51:10,442 - DEBUG : Reloading dependency examples
2021-07-28 11:51:10,443 - DEBUG : Reloaded dependency examples
2021-07-28 11:51:10,443 - DEBUG : Reloading ribbon_functions
2021-07-28 11:51:10,444 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 11:51:10,445 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 11:51:10,445 - DEBUG : Reloaded ribbon_functions
2021-07-28 11:51:10,445 - DEBUG : Reloading debugging
2021-07-28 11:51:10,446 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 11:51:10,446 - DEBUG : Reloaded debugging
2021-07-28 11:51:10,446 - DEBUG : Reloading selectiontools
2021-07-28 11:51:10,446 - DEBUG : Reloaded selectiontools
2021-07-28 11:51:10,485 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 11:51:10,488 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 11:51:10,500 - INFO : This product is licensed to 
2021-07-28 11:51:10,500 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 11:51:10,510 - DEBUG : Calling pyxll._post_open.
2021-07-28 11:51:10,510 - DEBUG : Binding Python functions to Excel
2021-07-28 11:51:10,510 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 11:51:10,510 - DEBUG :     - pyxll_version
2021-07-28 11:51:10,510 - DEBUG :     - python_version
2021-07-28 11:51:10,510 - DEBUG :     - win32api_is_installed
2021-07-28 11:51:10,510 - DEBUG :     - win32com_is_installed
2021-07-28 11:51:10,510 - DEBUG :     - numpy_is_installed
2021-07-28 11:51:10,510 - DEBUG :     - pyxll_logfile
2021-07-28 11:51:10,510 - DEBUG :     - get_formula
2021-07-28 11:51:10,510 - DEBUG :     - get_array_formula
2021-07-28 11:51:10,510 - DEBUG :     - get_last_error
2021-07-28 11:51:10,510 - DEBUG :     - basic_pyxll_function_1
2021-07-28 11:51:10,510 - DEBUG :     - basic_pyxll_function_2
2021-07-28 11:51:10,510 - DEBUG :     - basic_pyxll_function_3
2021-07-28 11:51:10,510 - DEBUG :     - var_pyxll_function_1
2021-07-28 11:51:10,510 - DEBUG :     - var_pyxll_function_2
2021-07-28 11:51:10,510 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 11:51:10,510 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 11:51:10,510 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 11:51:10,510 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 11:51:10,510 - DEBUG :     - xl_cell_example
2021-07-28 11:51:10,510 - DEBUG :     - recalc_on_open_test
2021-07-28 11:51:10,510 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 11:51:10,510 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 11:51:10,510 - DEBUG :     - one_cell_one_sim
2021-07-28 11:51:10,510 - DEBUG :     - one_row_one_sim
2021-07-28 11:51:10,516 - DEBUG : Adding menus to Excel:
2021-07-28 11:51:10,516 - DEBUG :   - PyXLL
2021-07-28 11:51:10,516 - DEBUG :     - Reload PyXLL
2021-07-28 11:51:10,516 - DEBUG :     - Another example menu item
2021-07-28 11:51:10,516 - DEBUG :     - More Examples
2021-07-28 11:51:10,516 - DEBUG :       - Click me
2021-07-28 11:51:10,516 - DEBUG :       - Unicode Test
2021-07-28 11:51:10,516 - DEBUG :     - Open log file
2021-07-28 11:51:10,516 - DEBUG :     - Attach To VS Code
2021-07-28 11:51:10,516 - DEBUG :     - Custom Task Panes
2021-07-28 11:51:10,516 - DEBUG :       - Qt
2021-07-28 11:51:10,516 - DEBUG :       - Tk
2021-07-28 11:51:10,516 - DEBUG :       - Wx
2021-07-28 11:51:10,516 - DEBUG :     - Example Menu Item 1
2021-07-28 11:51:10,516 - DEBUG :     - Show last error
2021-07-28 11:51:10,516 - DEBUG :     - About PyXLL...
2021-07-28 11:51:10,516 - DEBUG :   - PyXLL example menu
2021-07-28 11:51:10,516 - DEBUG :     - Click me
2021-07-28 11:51:10,519 - DEBUG : Finished binding Python functions
2021-07-28 11:51:10,519 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 11:54:07,062 - DEBUG : pyxll._post_open complete.
2021-07-28 11:54:07,068 - DEBUG : PyXLL initialization complete.
2021-07-28 11:54:10,202 - DEBUG : Loading PyXLL COM Addin
2021-07-28 11:54:10,202 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 11:54:10,224 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 11:54:10,289 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 11:54:10,299 - DEBUG : Loading PyXLL COM Addin
2021-07-28 11:54:10,299 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 11:54:10,303 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 11:54:10,307 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:13:59,098 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 12:13:59,100 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 12:13:59,100 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 12:13:59,100 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 12:13:59,100 - DEBUG : -------- PyXLL config --------
2021-07-28 12:13:59,100 - DEBUG : [LOG]
2021-07-28 12:13:59,100 - DEBUG : encoding = utf-8
2021-07-28 12:13:59,100 - DEBUG : file = pyxll.20210728.log
2021-07-28 12:13:59,100 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 12:13:59,100 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 12:13:59,100 - DEBUG : verbosity = debug
2021-07-28 12:13:59,100 - DEBUG : 
2021-07-28 12:13:59,100 - DEBUG : [PYTHON]
2021-07-28 12:13:59,100 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 12:13:59,100 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 12:13:59,100 - DEBUG : 
2021-07-28 12:13:59,100 - DEBUG : [PYXLL]
2021-07-28 12:13:59,100 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 12:13:59,100 - DEBUG : developer_mode = 1
2021-07-28 12:13:59,100 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 12:13:59,100 - DEBUG : modules = 
2021-07-28 12:13:59,100 - DEBUG :     misc
2021-07-28 12:13:59,100 - DEBUG :     worksheetfuncs
2021-07-28 12:13:59,100 - DEBUG :     menus
2021-07-28 12:13:59,100 - DEBUG :     callbacks
2021-07-28 12:13:59,100 - DEBUG :     custom_task_panes
2021-07-28 12:13:59,100 - DEBUG :     test
2021-07-28 12:13:59,100 - DEBUG :     ribbon_functions
2021-07-28 12:13:59,100 - DEBUG :     debugging
2021-07-28 12:13:59,100 - DEBUG :     meta_variables
2021-07-28 12:13:59,100 - DEBUG :     selectiontools
2021-07-28 12:13:59,100 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 12:13:59,100 - DEBUG : ------------------------------
2021-07-28 12:13:59,100 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 12:13:59,100 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:13:59,100 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:13:59,100 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:13:59,100 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:13:59,100 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:13:59,100 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 12:13:59,185 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 12:13:59,185 - DEBUG : Reloading misc
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:13:59,185 - DEBUG : Reloaded misc
2021-07-28 12:13:59,185 - DEBUG : Reloading worksheetfuncs
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:13:59,185 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:13:59,201 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:13:59,201 - DEBUG : Reloaded worksheetfuncs
2021-07-28 12:13:59,201 - DEBUG : Reloading menus
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:13:59,201 - DEBUG : Reloaded menus
2021-07-28 12:13:59,201 - DEBUG : Reloading callbacks
2021-07-28 12:13:59,201 - DEBUG : Reloaded callbacks
2021-07-28 12:13:59,201 - DEBUG : Reloading custom_task_panes
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:13:59,201 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:13:59,201 - DEBUG : Reloaded custom_task_panes
2021-07-28 12:13:59,201 - DEBUG : Reloading test
2021-07-28 12:13:59,201 - DEBUG : Reloaded test
2021-07-28 12:13:59,201 - DEBUG : Reloading meta_variables
2021-07-28 12:13:59,201 - DEBUG : Reloaded meta_variables
2021-07-28 12:13:59,201 - DEBUG : Reloading dependency error_functions
2021-07-28 12:13:59,201 - DEBUG : Reloaded dependency error_functions
2021-07-28 12:13:59,201 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 12:13:59,201 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 12:13:59,201 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 12:13:59,201 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 12:13:59,201 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 12:13:59,201 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 12:13:59,201 - DEBUG : Reloading dependency examples
2021-07-28 12:13:59,216 - DEBUG : Reloaded dependency examples
2021-07-28 12:13:59,216 - DEBUG : Reloading ribbon_functions
2021-07-28 12:13:59,216 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:13:59,216 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:13:59,216 - DEBUG : Reloaded ribbon_functions
2021-07-28 12:13:59,216 - DEBUG : Reloading debugging
2021-07-28 12:13:59,216 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:13:59,216 - DEBUG : Reloaded debugging
2021-07-28 12:13:59,216 - DEBUG : Reloading selectiontools
2021-07-28 12:13:59,216 - DEBUG : Reloaded selectiontools
2021-07-28 12:13:59,262 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:13:59,262 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:13:59,278 - INFO : This product is licensed to 
2021-07-28 12:13:59,278 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:13:59,293 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:13:59,293 - DEBUG : Binding Python functions to Excel
2021-07-28 12:13:59,293 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:13:59,293 - DEBUG :     - pyxll_version
2021-07-28 12:13:59,293 - DEBUG :     - python_version
2021-07-28 12:13:59,293 - DEBUG :     - win32api_is_installed
2021-07-28 12:13:59,294 - DEBUG :     - win32com_is_installed
2021-07-28 12:13:59,294 - DEBUG :     - numpy_is_installed
2021-07-28 12:13:59,294 - DEBUG :     - pyxll_logfile
2021-07-28 12:13:59,294 - DEBUG :     - get_formula
2021-07-28 12:13:59,294 - DEBUG :     - get_array_formula
2021-07-28 12:13:59,294 - DEBUG :     - get_last_error
2021-07-28 12:13:59,294 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:13:59,294 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:13:59,294 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:13:59,294 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:13:59,294 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:13:59,294 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:13:59,294 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:13:59,294 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:13:59,295 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:13:59,295 - DEBUG :     - xl_cell_example
2021-07-28 12:13:59,295 - DEBUG :     - recalc_on_open_test
2021-07-28 12:13:59,295 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:13:59,295 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:13:59,295 - DEBUG :     - one_cell_one_sim
2021-07-28 12:13:59,295 - DEBUG :     - one_row_one_sim
2021-07-28 12:13:59,298 - DEBUG : Adding menus to Excel:
2021-07-28 12:13:59,298 - DEBUG :   - PyXLL
2021-07-28 12:13:59,298 - DEBUG :     - Reload PyXLL
2021-07-28 12:13:59,298 - DEBUG :     - Another example menu item
2021-07-28 12:13:59,298 - DEBUG :     - More Examples
2021-07-28 12:13:59,298 - DEBUG :       - Click me
2021-07-28 12:13:59,298 - DEBUG :       - Unicode Test
2021-07-28 12:13:59,298 - DEBUG :     - Open log file
2021-07-28 12:13:59,298 - DEBUG :     - Attach To VS Code
2021-07-28 12:13:59,298 - DEBUG :     - Custom Task Panes
2021-07-28 12:13:59,298 - DEBUG :       - Qt
2021-07-28 12:13:59,298 - DEBUG :       - Tk
2021-07-28 12:13:59,298 - DEBUG :       - Wx
2021-07-28 12:13:59,298 - DEBUG :     - Example Menu Item 1
2021-07-28 12:13:59,298 - DEBUG :     - Show last error
2021-07-28 12:13:59,298 - DEBUG :     - About PyXLL...
2021-07-28 12:13:59,298 - DEBUG :   - PyXLL example menu
2021-07-28 12:13:59,298 - DEBUG :     - Click me
2021-07-28 12:13:59,307 - DEBUG : Finished binding Python functions
2021-07-28 12:13:59,307 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 12:14:00,340 - DEBUG : pyxll._post_open complete.
2021-07-28 12:14:00,341 - DEBUG : PyXLL initialization complete.
2021-07-28 12:14:00,344 - DEBUG : Loading PyXLL COM Addin
2021-07-28 12:14:00,344 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 12:14:00,347 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 12:14:00,473 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:14:37,212 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:14:52,877 - ERROR : Traceback (most recent call last):
2021-07-28 12:14:52,878 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-28 12:14:52,878 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 12:14:52,878 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 155, in advanced_simulation_cell
2021-07-28 12:14:52,879 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 12:14:52,879 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 533, in parse
2021-07-28 12:14:52,880 - ERROR :     self.error_parsing(self.pos, 'unexpected variable')
2021-07-28 12:14:52,880 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 12:14:52,880 - ERROR :     raise Exception(self.errormsg)
2021-07-28 12:14:52,880 - ERROR : Exception: parse error [column 15]: unexpected variable, expression: 'Ab-(('F3490849
2021-07-28 12:45:35,058 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:47:03,142 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 12:47:03,144 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 12:47:03,144 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 12:47:03,144 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 12:47:03,144 - DEBUG : -------- PyXLL config --------
2021-07-28 12:47:03,144 - DEBUG : [LOG]
2021-07-28 12:47:03,144 - DEBUG : encoding = utf-8
2021-07-28 12:47:03,144 - DEBUG : file = pyxll.20210728.log
2021-07-28 12:47:03,144 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 12:47:03,144 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 12:47:03,144 - DEBUG : verbosity = debug
2021-07-28 12:47:03,144 - DEBUG : 
2021-07-28 12:47:03,144 - DEBUG : [PYTHON]
2021-07-28 12:47:03,144 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 12:47:03,144 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 12:47:03,144 - DEBUG : 
2021-07-28 12:47:03,144 - DEBUG : [PYXLL]
2021-07-28 12:47:03,144 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 12:47:03,144 - DEBUG : developer_mode = 1
2021-07-28 12:47:03,144 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 12:47:03,144 - DEBUG : modules = 
2021-07-28 12:47:03,144 - DEBUG :     misc
2021-07-28 12:47:03,144 - DEBUG :     worksheetfuncs
2021-07-28 12:47:03,144 - DEBUG :     menus
2021-07-28 12:47:03,144 - DEBUG :     callbacks
2021-07-28 12:47:03,144 - DEBUG :     custom_task_panes
2021-07-28 12:47:03,144 - DEBUG :     test
2021-07-28 12:47:03,144 - DEBUG :     ribbon_functions
2021-07-28 12:47:03,144 - DEBUG :     debugging
2021-07-28 12:47:03,144 - DEBUG :     meta_variables
2021-07-28 12:47:03,144 - DEBUG :     selectiontools
2021-07-28 12:47:03,144 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 12:47:03,144 - DEBUG : ------------------------------
2021-07-28 12:47:03,144 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 12:47:03,145 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:47:03,145 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:47:03,145 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:47:03,150 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:47:03,154 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:47:03,154 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 12:47:03,248 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 12:47:03,248 - DEBUG : Reloading misc
2021-07-28 12:47:03,256 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:47:03,256 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:47:03,256 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:47:03,256 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:47:03,256 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:47:03,263 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:47:03,264 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:47:03,264 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:47:03,264 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:47:03,264 - DEBUG : Reloaded misc
2021-07-28 12:47:03,264 - DEBUG : Reloading worksheetfuncs
2021-07-28 12:47:03,264 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:47:03,271 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:47:03,271 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:47:03,272 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:47:03,272 - DEBUG : Reloaded worksheetfuncs
2021-07-28 12:47:03,272 - DEBUG : Reloading menus
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:47:03,280 - DEBUG : Reloaded menus
2021-07-28 12:47:03,280 - DEBUG : Reloading callbacks
2021-07-28 12:47:03,280 - DEBUG : Reloaded callbacks
2021-07-28 12:47:03,280 - DEBUG : Reloading custom_task_panes
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:47:03,280 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:47:03,280 - DEBUG : Reloaded custom_task_panes
2021-07-28 12:47:03,287 - DEBUG : Reloading test
2021-07-28 12:47:03,288 - DEBUG : Reloaded test
2021-07-28 12:47:03,288 - DEBUG : Reloading meta_variables
2021-07-28 12:47:03,288 - DEBUG : Reloaded meta_variables
2021-07-28 12:47:03,288 - DEBUG : Reloading dependency error_functions
2021-07-28 12:47:03,288 - DEBUG : Reloaded dependency error_functions
2021-07-28 12:47:03,288 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 12:47:03,288 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 12:47:03,288 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 12:47:03,288 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 12:47:03,288 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 12:47:03,288 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 12:47:03,288 - DEBUG : Reloading dependency examples
2021-07-28 12:47:03,303 - DEBUG : Reloaded dependency examples
2021-07-28 12:47:03,303 - DEBUG : Reloading ribbon_functions
2021-07-28 12:47:03,303 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028658EC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028658F3DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028658F4AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000286590522E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028658FEF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002865903AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028658FE8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000286590438E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002865903A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002865902C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028659019CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028659015F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028658ECBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000286590153A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:47:03,310 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:47:03,310 - DEBUG : Reloaded ribbon_functions
2021-07-28 12:47:03,310 - DEBUG : Reloading debugging
2021-07-28 12:47:03,310 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:47:03,310 - DEBUG : Reloaded debugging
2021-07-28 12:47:03,310 - DEBUG : Reloading selectiontools
2021-07-28 12:47:03,317 - DEBUG : Reloaded selectiontools
2021-07-28 12:47:03,404 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:47:03,419 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:47:03,497 - INFO : This product is licensed to 
2021-07-28 12:47:03,497 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:47:03,508 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:47:03,508 - DEBUG : Binding Python functions to Excel
2021-07-28 12:47:03,509 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:47:03,509 - DEBUG :     - pyxll_version
2021-07-28 12:47:03,509 - DEBUG :     - python_version
2021-07-28 12:47:03,509 - DEBUG :     - win32api_is_installed
2021-07-28 12:47:03,511 - DEBUG :     - win32com_is_installed
2021-07-28 12:47:03,511 - DEBUG :     - numpy_is_installed
2021-07-28 12:47:03,512 - DEBUG :     - pyxll_logfile
2021-07-28 12:47:03,512 - DEBUG :     - get_formula
2021-07-28 12:47:03,512 - DEBUG :     - get_array_formula
2021-07-28 12:47:03,512 - DEBUG :     - get_last_error
2021-07-28 12:47:03,512 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:47:03,512 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:47:03,512 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:47:03,512 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:47:03,512 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:47:03,512 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:47:03,512 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:47:03,512 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:47:03,512 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:47:03,512 - DEBUG :     - xl_cell_example
2021-07-28 12:47:03,519 - DEBUG :     - recalc_on_open_test
2021-07-28 12:47:03,519 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:47:03,520 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:47:03,520 - DEBUG :     - one_cell_one_sim
2021-07-28 12:47:03,520 - DEBUG :     - one_row_one_sim
2021-07-28 12:47:03,537 - DEBUG : Adding menus to Excel:
2021-07-28 12:47:03,537 - DEBUG :   - PyXLL
2021-07-28 12:47:03,537 - DEBUG :     - Reload PyXLL
2021-07-28 12:47:03,537 - DEBUG :     - Another example menu item
2021-07-28 12:47:03,537 - DEBUG :     - More Examples
2021-07-28 12:47:03,537 - DEBUG :       - Click me
2021-07-28 12:47:03,537 - DEBUG :       - Unicode Test
2021-07-28 12:47:03,537 - DEBUG :     - Open log file
2021-07-28 12:47:03,537 - DEBUG :     - Attach To VS Code
2021-07-28 12:47:03,537 - DEBUG :     - Custom Task Panes
2021-07-28 12:47:03,537 - DEBUG :       - Qt
2021-07-28 12:47:03,537 - DEBUG :       - Tk
2021-07-28 12:47:03,537 - DEBUG :       - Wx
2021-07-28 12:47:03,537 - DEBUG :     - Example Menu Item 1
2021-07-28 12:47:03,537 - DEBUG :     - Show last error
2021-07-28 12:47:03,537 - DEBUG :     - About PyXLL...
2021-07-28 12:47:03,537 - DEBUG :   - PyXLL example menu
2021-07-28 12:47:03,537 - DEBUG :     - Click me
2021-07-28 12:47:03,559 - DEBUG : Finished binding Python functions
2021-07-28 12:47:03,559 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 12:47:04,415 - DEBUG : pyxll._post_open complete.
2021-07-28 12:47:04,415 - DEBUG : PyXLL initialization complete.
2021-07-28 12:47:07,487 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:47:09,567 - ERROR : Traceback (most recent call last):
2021-07-28 12:47:09,574 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 167, in advanced_simulation_cell_wrapper
2021-07-28 12:47:09,575 - ERROR :     
2021-07-28 12:47:09,575 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 155, in advanced_simulation_cell
2021-07-28 12:47:09,578 - ERROR :     return "F" + str(int.from_bytes((current_sheet_name+"!"+x).encode(encoding="utf-8"), byteorder = sys.byteorder))
2021-07-28 12:47:09,579 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 533, in parse
2021-07-28 12:47:09,580 - ERROR :     self.error_parsing(self.pos, 'unexpected variable')
2021-07-28 12:47:09,581 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 12:47:09,584 - ERROR :     raise Exception(self.errormsg)
2021-07-28 12:47:09,587 - ERROR : Exception: parse error [column 15]: unexpected variable, expression: 'Ab-(('F3490849
2021-07-28 12:47:09,968 - DEBUG : Closing PyXLL Python module.
2021-07-28 12:47:09,969 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 12:47:09,969 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 12:47:09,969 - DEBUG : PyXLL Python module closed.
2021-07-28 12:47:18,258 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 12:47:18,258 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 12:47:18,258 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 12:47:18,259 - DEBUG : -------- PyXLL config --------
2021-07-28 12:47:18,259 - DEBUG : [LOG]
2021-07-28 12:47:18,259 - DEBUG : encoding = utf-8
2021-07-28 12:47:18,259 - DEBUG : file = pyxll.20210728.log
2021-07-28 12:47:18,259 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 12:47:18,259 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 12:47:18,259 - DEBUG : verbosity = debug
2021-07-28 12:47:18,259 - DEBUG : 
2021-07-28 12:47:18,259 - DEBUG : [PYTHON]
2021-07-28 12:47:18,259 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 12:47:18,259 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 12:47:18,259 - DEBUG : 
2021-07-28 12:47:18,259 - DEBUG : [PYXLL]
2021-07-28 12:47:18,259 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 12:47:18,259 - DEBUG : developer_mode = 1
2021-07-28 12:47:18,259 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 12:47:18,259 - DEBUG : modules = 
2021-07-28 12:47:18,259 - DEBUG :     misc
2021-07-28 12:47:18,259 - DEBUG :     worksheetfuncs
2021-07-28 12:47:18,259 - DEBUG :     menus
2021-07-28 12:47:18,259 - DEBUG :     callbacks
2021-07-28 12:47:18,259 - DEBUG :     custom_task_panes
2021-07-28 12:47:18,259 - DEBUG :     test
2021-07-28 12:47:18,259 - DEBUG :     ribbon_functions
2021-07-28 12:47:18,259 - DEBUG :     debugging
2021-07-28 12:47:18,259 - DEBUG :     meta_variables
2021-07-28 12:47:18,259 - DEBUG :     selectiontools
2021-07-28 12:47:18,259 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 12:47:18,259 - DEBUG : ------------------------------
2021-07-28 12:47:18,260 - DEBUG : Attempting to load python38.dll
2021-07-28 12:47:18,263 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 12:47:18,266 - DEBUG : Checking Py_IsInitialized...
2021-07-28 12:47:18,266 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 12:47:18,474 - DEBUG : Calling Py_Initialize...
2021-07-28 12:47:18,668 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 12:47:18,668 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 12:47:18,668 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 12:47:18,669 - DEBUG : Python is initialized.
2021-07-28 12:47:18,670 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 12:47:18,671 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 12:47:18,671 - DEBUG : Looking for module 'site'...
2021-07-28 12:47:18,705 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 12:47:18,705 - DEBUG : Importing pyxll module
2021-07-28 12:47:18,705 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 12:47:18,705 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 12:47:18,705 - DEBUG :   Detected Python3
2021-07-28 12:47:18,749 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 12:47:18,758 - DEBUG : pyxll module imported
2021-07-28 12:47:18,759 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:47:18,759 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:47:18,759 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:47:18,761 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:47:18,762 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:47:18,987 - DEBUG : Importing misc
2021-07-28 12:47:18,988 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:47:18,988 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:47:18,988 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:47:18,988 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:47:18,989 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:47:18,989 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:47:18,989 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:47:18,990 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:47:18,990 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:47:18,990 - DEBUG : Imported misc
2021-07-28 12:47:18,990 - DEBUG : Importing worksheetfuncs
2021-07-28 12:47:18,991 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:47:18,991 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:47:18,992 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:47:18,992 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:47:18,992 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:47:18,992 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:47:18,992 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:47:18,992 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:47:18,993 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:47:18,993 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:47:18,993 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:47:18,993 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:47:18,993 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:47:18,993 - DEBUG : Imported worksheetfuncs
2021-07-28 12:47:18,994 - DEBUG : Importing menus
2021-07-28 12:47:19,000 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:47:19,000 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:47:19,001 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:47:19,001 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:47:19,001 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:47:19,001 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:47:19,001 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:47:19,001 - DEBUG : Imported menus
2021-07-28 12:47:19,001 - DEBUG : Importing callbacks
2021-07-28 12:47:19,002 - DEBUG : Imported callbacks
2021-07-28 12:47:19,002 - DEBUG : Importing custom_task_panes
2021-07-28 12:47:19,003 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:47:19,003 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:47:19,003 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:47:19,003 - DEBUG : Imported custom_task_panes
2021-07-28 12:47:19,003 - DEBUG : Importing test
2021-07-28 12:47:19,004 - DEBUG : Imported test
2021-07-28 12:47:19,004 - DEBUG : Importing ribbon_functions
2021-07-28 12:47:20,259 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 12:47:20,284 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 12:47:20,284 - DEBUG : matplotlib version 3.4.2
2021-07-28 12:47:20,284 - DEBUG : interactive is False
2021-07-28 12:47:20,284 - DEBUG : platform is win32
2021-07-28 12:47:20,284 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_6f0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_6f0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 12:47:20,342 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 12:47:20,351 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 12:47:20,594 - DEBUG : Loaded backend agg version unknown.
2021-07-28 12:47:20,597 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A409A0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A409EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A409F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000022A40A76310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000022A40A42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000022A40A7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000022A40A27070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A40A7E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000022A40A7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000022A40A62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000022A40A54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000022A40A56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000022A409ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000022A40A563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A409A0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A409EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A409F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000022A40A76310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000022A40A42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000022A40A7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000022A40A27070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A40A7E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000022A40A7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000022A40A62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000022A40A54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000022A40A56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000022A409ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000022A40A563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:47:20,597 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:47:20,597 - DEBUG : Imported ribbon_functions
2021-07-28 12:47:20,597 - DEBUG : Importing debugging
2021-07-28 12:47:21,106 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:47:21,106 - DEBUG : Imported debugging
2021-07-28 12:47:21,106 - DEBUG : Importing meta_variables
2021-07-28 12:47:21,106 - DEBUG : Imported meta_variables
2021-07-28 12:47:21,106 - DEBUG : Importing selectiontools
2021-07-28 12:47:21,106 - DEBUG : Imported selectiontools
2021-07-28 12:47:21,154 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:47:21,159 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:47:21,176 - INFO : This product is licensed to 
2021-07-28 12:47:21,176 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:47:21,178 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:47:21,178 - DEBUG : Binding Python functions to Excel
2021-07-28 12:47:21,178 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:47:21,178 - DEBUG :     - pyxll_version
2021-07-28 12:47:21,178 - DEBUG :     - python_version
2021-07-28 12:47:21,178 - DEBUG :     - win32api_is_installed
2021-07-28 12:47:21,178 - DEBUG :     - win32com_is_installed
2021-07-28 12:47:21,178 - DEBUG :     - numpy_is_installed
2021-07-28 12:47:21,179 - DEBUG :     - pyxll_logfile
2021-07-28 12:47:21,179 - DEBUG :     - get_formula
2021-07-28 12:47:21,179 - DEBUG :     - get_array_formula
2021-07-28 12:47:21,179 - DEBUG :     - get_last_error
2021-07-28 12:47:21,179 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:47:21,179 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:47:21,179 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:47:21,179 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:47:21,179 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:47:21,179 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:47:21,179 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:47:21,179 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:47:21,179 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:47:21,179 - DEBUG :     - xl_cell_example
2021-07-28 12:47:21,179 - DEBUG :     - recalc_on_open_test
2021-07-28 12:47:21,179 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:47:21,179 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:47:21,179 - DEBUG :     - one_cell_one_sim
2021-07-28 12:47:21,180 - DEBUG :     - one_row_one_sim
2021-07-28 12:47:21,193 - DEBUG : Adding menus to Excel:
2021-07-28 12:47:21,193 - DEBUG :   - PyXLL
2021-07-28 12:47:21,193 - DEBUG :     - Reload PyXLL
2021-07-28 12:47:21,193 - DEBUG :     - Another example menu item
2021-07-28 12:47:21,193 - DEBUG :     - More Examples
2021-07-28 12:47:21,193 - DEBUG :       - Click me
2021-07-28 12:47:21,193 - DEBUG :       - Unicode Test
2021-07-28 12:47:21,193 - DEBUG :     - Open log file
2021-07-28 12:47:21,193 - DEBUG :     - Attach To VS Code
2021-07-28 12:47:21,193 - DEBUG :     - Custom Task Panes
2021-07-28 12:47:21,193 - DEBUG :       - Qt
2021-07-28 12:47:21,193 - DEBUG :       - Tk
2021-07-28 12:47:21,193 - DEBUG :       - Wx
2021-07-28 12:47:21,193 - DEBUG :     - Example Menu Item 1
2021-07-28 12:47:21,193 - DEBUG :     - Show last error
2021-07-28 12:47:21,193 - DEBUG :     - About PyXLL...
2021-07-28 12:47:21,193 - DEBUG :   - PyXLL example menu
2021-07-28 12:47:21,193 - DEBUG :     - Click me
2021-07-28 12:47:21,229 - DEBUG : Finished binding Python functions
2021-07-28 12:47:21,230 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 12:47:21,230 - DEBUG : pyxll._post_open complete.
2021-07-28 12:47:21,233 - DEBUG : PyXLL initialization complete.
2021-07-28 12:47:21,515 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:47:21,515 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:47:21,516 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:47:21,517 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:47:21,517 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:47:21,518 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 12:47:21,565 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 12:47:21,565 - DEBUG : Reloading misc
2021-07-28 12:47:21,566 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:47:21,566 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:47:21,567 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:47:21,567 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:47:21,567 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:47:21,567 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:47:21,568 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:47:21,568 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:47:21,568 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:47:21,569 - DEBUG : Reloaded misc
2021-07-28 12:47:21,569 - DEBUG : Reloading worksheetfuncs
2021-07-28 12:47:21,570 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:47:21,570 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:47:21,570 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:47:21,570 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:47:21,571 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:47:21,571 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:47:21,571 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:47:21,571 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:47:21,572 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:47:21,572 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:47:21,572 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:47:21,572 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:47:21,572 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:47:21,572 - DEBUG : Reloaded worksheetfuncs
2021-07-28 12:47:21,572 - DEBUG : Reloading menus
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:47:21,572 - DEBUG : Reloaded menus
2021-07-28 12:47:21,572 - DEBUG : Reloading callbacks
2021-07-28 12:47:21,572 - DEBUG : Reloaded callbacks
2021-07-28 12:47:21,572 - DEBUG : Reloading custom_task_panes
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:47:21,572 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:47:21,572 - DEBUG : Reloaded custom_task_panes
2021-07-28 12:47:21,572 - DEBUG : Reloading test
2021-07-28 12:47:21,576 - DEBUG : Reloaded test
2021-07-28 12:47:21,576 - DEBUG : Reloading meta_variables
2021-07-28 12:47:21,577 - DEBUG : Reloaded meta_variables
2021-07-28 12:47:21,577 - DEBUG : Reloading dependency error_functions
2021-07-28 12:47:21,578 - DEBUG : Reloaded dependency error_functions
2021-07-28 12:47:21,578 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 12:47:21,579 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 12:47:21,579 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 12:47:21,580 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 12:47:21,580 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 12:47:21,580 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 12:47:21,582 - DEBUG : Reloading dependency examples
2021-07-28 12:47:21,583 - DEBUG : Reloaded dependency examples
2021-07-28 12:47:21,583 - DEBUG : Reloading ribbon_functions
2021-07-28 12:47:21,584 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A409A0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A409EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A409F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000022A40A76310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000022A40A42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000022A40A7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000022A40A27070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A40A7E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000022A40A7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000022A40A62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000022A40A54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000022A40A56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000022A409ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000022A40A563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A409A0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A409EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A409F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000022A40A76310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000022A40A42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000022A40A7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000022A40A27070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A40A7E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000022A40A7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000022A40A62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000022A40A54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000022A40A56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000022A409ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000022A40A563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:47:21,585 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:47:21,585 - DEBUG : Reloaded ribbon_functions
2021-07-28 12:47:21,585 - DEBUG : Reloading debugging
2021-07-28 12:47:21,586 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:47:21,586 - DEBUG : Reloaded debugging
2021-07-28 12:47:21,586 - DEBUG : Reloading selectiontools
2021-07-28 12:47:21,587 - DEBUG : Reloaded selectiontools
2021-07-28 12:47:21,652 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:47:21,657 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:47:21,698 - INFO : This product is licensed to 
2021-07-28 12:47:21,698 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:47:21,700 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:47:21,700 - DEBUG : Binding Python functions to Excel
2021-07-28 12:47:21,700 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:47:21,701 - DEBUG :     - pyxll_version
2021-07-28 12:47:21,701 - DEBUG :     - python_version
2021-07-28 12:47:21,701 - DEBUG :     - win32api_is_installed
2021-07-28 12:47:21,701 - DEBUG :     - win32com_is_installed
2021-07-28 12:47:21,701 - DEBUG :     - numpy_is_installed
2021-07-28 12:47:21,701 - DEBUG :     - pyxll_logfile
2021-07-28 12:47:21,701 - DEBUG :     - get_formula
2021-07-28 12:47:21,701 - DEBUG :     - get_array_formula
2021-07-28 12:47:21,701 - DEBUG :     - get_last_error
2021-07-28 12:47:21,701 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:47:21,701 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:47:21,701 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:47:21,701 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:47:21,701 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:47:21,701 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:47:21,701 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:47:21,701 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:47:21,701 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:47:21,701 - DEBUG :     - xl_cell_example
2021-07-28 12:47:21,701 - DEBUG :     - recalc_on_open_test
2021-07-28 12:47:21,701 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:47:21,701 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:47:21,701 - DEBUG :     - one_cell_one_sim
2021-07-28 12:47:21,701 - DEBUG :     - one_row_one_sim
2021-07-28 12:47:21,709 - DEBUG : Adding menus to Excel:
2021-07-28 12:47:21,709 - DEBUG :   - PyXLL
2021-07-28 12:47:21,709 - DEBUG :     - Reload PyXLL
2021-07-28 12:47:21,709 - DEBUG :     - Another example menu item
2021-07-28 12:47:21,709 - DEBUG :     - More Examples
2021-07-28 12:47:21,709 - DEBUG :       - Click me
2021-07-28 12:47:21,709 - DEBUG :       - Unicode Test
2021-07-28 12:47:21,709 - DEBUG :     - Open log file
2021-07-28 12:47:21,709 - DEBUG :     - Attach To VS Code
2021-07-28 12:47:21,709 - DEBUG :     - Custom Task Panes
2021-07-28 12:47:21,709 - DEBUG :       - Qt
2021-07-28 12:47:21,709 - DEBUG :       - Tk
2021-07-28 12:47:21,709 - DEBUG :       - Wx
2021-07-28 12:47:21,709 - DEBUG :     - Example Menu Item 1
2021-07-28 12:47:21,709 - DEBUG :     - Show last error
2021-07-28 12:47:21,710 - DEBUG :     - About PyXLL...
2021-07-28 12:47:21,710 - DEBUG :   - PyXLL example menu
2021-07-28 12:47:21,710 - DEBUG :     - Click me
2021-07-28 12:47:21,716 - DEBUG : Finished binding Python functions
2021-07-28 12:47:21,716 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 12:47:23,020 - DEBUG : pyxll._post_open complete.
2021-07-28 12:47:23,025 - DEBUG : PyXLL initialization complete.
2021-07-28 12:47:25,662 - DEBUG : Loading PyXLL COM Addin
2021-07-28 12:47:25,663 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 12:47:25,686 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 12:47:25,752 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:47:25,762 - DEBUG : Loading PyXLL COM Addin
2021-07-28 12:47:25,762 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 12:47:25,770 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 12:47:25,783 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:47:54,682 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:48:09,406 - ERROR : Traceback (most recent call last):
2021-07-28 12:48:09,406 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 12:48:09,407 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 12:48:09,407 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 158, in advanced_simulation_cell
2021-07-28 12:48:09,407 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 12:48:09,407 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-28 12:48:09,407 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-28 12:48:09,407 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 12:48:09,407 - ERROR :     raise Exception(self.errormsg)
2021-07-28 12:48:09,407 - ERROR : Exception: parse error [column 6]: unknown character, expression: Sheet2!D5
2021-07-28 12:48:45,872 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 12:48:45,873 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 12:48:45,873 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 12:48:45,873 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 12:48:45,873 - DEBUG : -------- PyXLL config --------
2021-07-28 12:48:45,873 - DEBUG : [LOG]
2021-07-28 12:48:45,873 - DEBUG : encoding = utf-8
2021-07-28 12:48:45,873 - DEBUG : file = pyxll.20210728.log
2021-07-28 12:48:45,873 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 12:48:45,873 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 12:48:45,873 - DEBUG : verbosity = debug
2021-07-28 12:48:45,873 - DEBUG : 
2021-07-28 12:48:45,873 - DEBUG : [PYTHON]
2021-07-28 12:48:45,873 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 12:48:45,873 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 12:48:45,873 - DEBUG : 
2021-07-28 12:48:45,873 - DEBUG : [PYXLL]
2021-07-28 12:48:45,873 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 12:48:45,873 - DEBUG : developer_mode = 1
2021-07-28 12:48:45,873 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 12:48:45,873 - DEBUG : modules = 
2021-07-28 12:48:45,873 - DEBUG :     misc
2021-07-28 12:48:45,873 - DEBUG :     worksheetfuncs
2021-07-28 12:48:45,873 - DEBUG :     menus
2021-07-28 12:48:45,873 - DEBUG :     callbacks
2021-07-28 12:48:45,873 - DEBUG :     custom_task_panes
2021-07-28 12:48:45,873 - DEBUG :     test
2021-07-28 12:48:45,873 - DEBUG :     ribbon_functions
2021-07-28 12:48:45,873 - DEBUG :     debugging
2021-07-28 12:48:45,873 - DEBUG :     meta_variables
2021-07-28 12:48:45,873 - DEBUG :     selectiontools
2021-07-28 12:48:45,873 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 12:48:45,873 - DEBUG : ------------------------------
2021-07-28 12:48:45,873 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 12:48:45,873 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:48:45,873 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:48:45,873 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:48:45,873 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:48:45,873 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:48:45,873 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 12:48:45,976 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 12:48:45,976 - DEBUG : Reloading misc
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:48:45,976 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:48:45,983 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:48:45,983 - DEBUG : Reloaded misc
2021-07-28 12:48:45,983 - DEBUG : Reloading worksheetfuncs
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:48:45,984 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:48:45,984 - DEBUG : Reloaded worksheetfuncs
2021-07-28 12:48:45,984 - DEBUG : Reloading menus
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:48:45,984 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:48:45,984 - DEBUG : Reloaded menus
2021-07-28 12:48:45,984 - DEBUG : Reloading callbacks
2021-07-28 12:48:45,991 - DEBUG : Reloaded callbacks
2021-07-28 12:48:45,991 - DEBUG : Reloading custom_task_panes
2021-07-28 12:48:45,992 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:48:45,992 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:48:45,992 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:48:45,992 - DEBUG : Reloaded custom_task_panes
2021-07-28 12:48:45,992 - DEBUG : Reloading test
2021-07-28 12:48:45,992 - DEBUG : Reloaded test
2021-07-28 12:48:45,992 - DEBUG : Reloading meta_variables
2021-07-28 12:48:45,992 - DEBUG : Reloaded meta_variables
2021-07-28 12:48:45,992 - DEBUG : Reloading dependency error_functions
2021-07-28 12:48:45,992 - DEBUG : Reloaded dependency error_functions
2021-07-28 12:48:45,992 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 12:48:45,992 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 12:48:45,992 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 12:48:45,992 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 12:48:45,992 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 12:48:45,992 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 12:48:45,992 - DEBUG : Reloading dependency examples
2021-07-28 12:48:45,999 - DEBUG : Reloaded dependency examples
2021-07-28 12:48:45,999 - DEBUG : Reloading ribbon_functions
2021-07-28 12:48:46,000 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A409A0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A409EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A409F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000022A40A76310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000022A40A42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000022A40A7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000022A40A27070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A40A7E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000022A40A7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000022A40A62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000022A40A54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000022A40A56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000022A409ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000022A40A563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A409A0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A409EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A409F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000022A40A76310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000022A40A42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000022A40A7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000022A40A27070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A40A7E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000022A40A7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000022A40A62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000022A40A54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000022A40A56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000022A409ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000022A40A563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:48:46,000 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:48:46,000 - DEBUG : Reloaded ribbon_functions
2021-07-28 12:48:46,000 - DEBUG : Reloading debugging
2021-07-28 12:48:46,000 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:48:46,000 - DEBUG : Reloaded debugging
2021-07-28 12:48:46,000 - DEBUG : Reloading selectiontools
2021-07-28 12:48:46,002 - DEBUG : Reloaded selectiontools
2021-07-28 12:48:46,031 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:48:46,031 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:48:46,062 - INFO : This product is licensed to 
2021-07-28 12:48:46,062 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:48:46,064 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:48:46,064 - DEBUG : Binding Python functions to Excel
2021-07-28 12:48:46,064 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:48:46,064 - DEBUG :     - pyxll_version
2021-07-28 12:48:46,064 - DEBUG :     - python_version
2021-07-28 12:48:46,064 - DEBUG :     - win32api_is_installed
2021-07-28 12:48:46,064 - DEBUG :     - win32com_is_installed
2021-07-28 12:48:46,064 - DEBUG :     - numpy_is_installed
2021-07-28 12:48:46,064 - DEBUG :     - pyxll_logfile
2021-07-28 12:48:46,064 - DEBUG :     - get_formula
2021-07-28 12:48:46,064 - DEBUG :     - get_array_formula
2021-07-28 12:48:46,064 - DEBUG :     - get_last_error
2021-07-28 12:48:46,064 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:48:46,064 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:48:46,064 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:48:46,064 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:48:46,064 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:48:46,064 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:48:46,064 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:48:46,064 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:48:46,064 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:48:46,064 - DEBUG :     - xl_cell_example
2021-07-28 12:48:46,065 - DEBUG :     - recalc_on_open_test
2021-07-28 12:48:46,065 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:48:46,065 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:48:46,065 - DEBUG :     - one_cell_one_sim
2021-07-28 12:48:46,065 - DEBUG :     - one_row_one_sim
2021-07-28 12:48:46,065 - DEBUG : Adding menus to Excel:
2021-07-28 12:48:46,065 - DEBUG :   - PyXLL
2021-07-28 12:48:46,065 - DEBUG :     - Reload PyXLL
2021-07-28 12:48:46,065 - DEBUG :     - Another example menu item
2021-07-28 12:48:46,065 - DEBUG :     - More Examples
2021-07-28 12:48:46,065 - DEBUG :       - Click me
2021-07-28 12:48:46,065 - DEBUG :       - Unicode Test
2021-07-28 12:48:46,065 - DEBUG :     - Open log file
2021-07-28 12:48:46,065 - DEBUG :     - Attach To VS Code
2021-07-28 12:48:46,065 - DEBUG :     - Custom Task Panes
2021-07-28 12:48:46,065 - DEBUG :       - Qt
2021-07-28 12:48:46,065 - DEBUG :       - Tk
2021-07-28 12:48:46,065 - DEBUG :       - Wx
2021-07-28 12:48:46,065 - DEBUG :     - Example Menu Item 1
2021-07-28 12:48:46,065 - DEBUG :     - Show last error
2021-07-28 12:48:46,065 - DEBUG :     - About PyXLL...
2021-07-28 12:48:46,065 - DEBUG :   - PyXLL example menu
2021-07-28 12:48:46,065 - DEBUG :     - Click me
2021-07-28 12:48:46,065 - DEBUG : Finished binding Python functions
2021-07-28 12:48:46,065 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 12:48:46,904 - DEBUG : pyxll._post_open complete.
2021-07-28 12:48:46,905 - DEBUG : PyXLL initialization complete.
2021-07-28 12:48:46,908 - DEBUG : Loading PyXLL COM Addin
2021-07-28 12:48:46,908 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 12:48:46,910 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 12:48:47,004 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:48:48,975 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:48:50,423 - ERROR : Traceback (most recent call last):
2021-07-28 12:48:50,423 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 12:48:50,424 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 12:48:50,424 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 158, in advanced_simulation_cell
2021-07-28 12:48:50,424 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 12:48:50,424 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-28 12:48:50,424 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-28 12:48:50,424 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 12:48:50,424 - ERROR :     raise Exception(self.errormsg)
2021-07-28 12:48:50,424 - ERROR : Exception: parse error [column 6]: unknown character, expression: Sheet2!D5
2021-07-28 12:48:51,118 - DEBUG : Closing PyXLL Python module.
2021-07-28 12:48:51,119 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 12:48:51,119 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 12:48:51,119 - DEBUG : PyXLL Python module closed.
2021-07-28 12:48:54,611 - DEBUG : 
Wed Jul 28 12:48:54 2021
---------- PyXLL Stopped ----------
2021-07-28 12:48:54,999 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 12:48:54,999 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 12:48:54,999 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 12:48:54,999 - DEBUG : -------- PyXLL config --------
2021-07-28 12:48:54,999 - DEBUG : [LOG]
2021-07-28 12:48:54,999 - DEBUG : encoding = utf-8
2021-07-28 12:48:54,999 - DEBUG : file = pyxll.20210728.log
2021-07-28 12:48:54,999 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 12:48:54,999 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 12:48:54,999 - DEBUG : verbosity = debug
2021-07-28 12:48:54,999 - DEBUG : 
2021-07-28 12:48:54,999 - DEBUG : [PYTHON]
2021-07-28 12:48:54,999 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 12:48:54,999 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 12:48:54,999 - DEBUG : 
2021-07-28 12:48:54,999 - DEBUG : [PYXLL]
2021-07-28 12:48:54,999 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 12:48:54,999 - DEBUG : developer_mode = 1
2021-07-28 12:48:54,999 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 12:48:54,999 - DEBUG : modules = 
2021-07-28 12:48:54,999 - DEBUG :     misc
2021-07-28 12:48:54,999 - DEBUG :     worksheetfuncs
2021-07-28 12:48:54,999 - DEBUG :     menus
2021-07-28 12:48:54,999 - DEBUG :     callbacks
2021-07-28 12:48:54,999 - DEBUG :     custom_task_panes
2021-07-28 12:48:54,999 - DEBUG :     test
2021-07-28 12:48:54,999 - DEBUG :     ribbon_functions
2021-07-28 12:48:54,999 - DEBUG :     debugging
2021-07-28 12:48:54,999 - DEBUG :     meta_variables
2021-07-28 12:48:54,999 - DEBUG :     selectiontools
2021-07-28 12:48:54,999 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 12:48:54,999 - DEBUG : ------------------------------
2021-07-28 12:48:55,000 - DEBUG : Attempting to load python38.dll
2021-07-28 12:48:55,002 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 12:48:55,003 - DEBUG : Checking Py_IsInitialized...
2021-07-28 12:48:55,003 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 12:48:55,158 - DEBUG : Calling Py_Initialize...
2021-07-28 12:48:55,325 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 12:48:55,325 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 12:48:55,325 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 12:48:55,325 - DEBUG : Python is initialized.
2021-07-28 12:48:55,326 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 12:48:55,328 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 12:48:55,328 - DEBUG : Looking for module 'site'...
2021-07-28 12:48:55,356 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 12:48:55,358 - DEBUG : Importing pyxll module
2021-07-28 12:48:55,358 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 12:48:55,358 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 12:48:55,358 - DEBUG :   Detected Python3
2021-07-28 12:48:55,400 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 12:48:55,407 - DEBUG : pyxll module imported
2021-07-28 12:48:55,407 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:48:55,407 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:48:55,407 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:48:55,409 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:48:55,410 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:48:55,651 - DEBUG : Importing misc
2021-07-28 12:48:55,659 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:48:55,659 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:48:55,659 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:48:55,659 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:48:55,659 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:48:55,661 - DEBUG : Imported misc
2021-07-28 12:48:55,661 - DEBUG : Importing worksheetfuncs
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:48:55,661 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:48:55,661 - DEBUG : Imported worksheetfuncs
2021-07-28 12:48:55,661 - DEBUG : Importing menus
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:48:55,674 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:48:55,674 - DEBUG : Imported menus
2021-07-28 12:48:55,674 - DEBUG : Importing callbacks
2021-07-28 12:48:55,674 - DEBUG : Imported callbacks
2021-07-28 12:48:55,674 - DEBUG : Importing custom_task_panes
2021-07-28 12:48:55,679 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:48:55,679 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:48:55,679 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:48:55,679 - DEBUG : Imported custom_task_panes
2021-07-28 12:48:55,679 - DEBUG : Importing test
2021-07-28 12:48:55,681 - DEBUG : Imported test
2021-07-28 12:48:55,681 - DEBUG : Importing ribbon_functions
2021-07-28 12:48:57,223 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 12:48:57,259 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 12:48:57,259 - DEBUG : matplotlib version 3.4.2
2021-07-28 12:48:57,259 - DEBUG : interactive is False
2021-07-28 12:48:57,259 - DEBUG : platform is win32
2021-07-28 12:48:57,259 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_7c0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_7c0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 12:48:57,308 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 12:48:57,308 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 12:48:57,471 - DEBUG : Loaded backend agg version unknown.
2021-07-28 12:48:57,471 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000233B05A1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000233B05EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000233B05F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000233B068E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000233B0642580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000233B067AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000233B0627070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000233B067E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000233B067A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000233B066C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000233B0659CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000233B0656F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000233B05ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000233B06563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000233B05A1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000233B05EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000233B05F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000233B068E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000233B0642580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000233B067AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000233B0627070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000233B067E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000233B067A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000233B066C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000233B0659CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000233B0656F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000233B05ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000233B06563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:48:57,471 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:48:57,471 - DEBUG : Imported ribbon_functions
2021-07-28 12:48:57,471 - DEBUG : Importing debugging
2021-07-28 12:48:58,081 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:48:58,081 - DEBUG : Imported debugging
2021-07-28 12:48:58,081 - DEBUG : Importing meta_variables
2021-07-28 12:48:58,081 - DEBUG : Imported meta_variables
2021-07-28 12:48:58,081 - DEBUG : Importing selectiontools
2021-07-28 12:48:58,081 - DEBUG : Imported selectiontools
2021-07-28 12:48:58,152 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:48:58,163 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:48:58,194 - INFO : This product is licensed to 
2021-07-28 12:48:58,194 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:48:58,197 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:48:58,197 - DEBUG : Binding Python functions to Excel
2021-07-28 12:48:58,197 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:48:58,198 - DEBUG :     - pyxll_version
2021-07-28 12:48:58,198 - DEBUG :     - python_version
2021-07-28 12:48:58,198 - DEBUG :     - win32api_is_installed
2021-07-28 12:48:58,198 - DEBUG :     - win32com_is_installed
2021-07-28 12:48:58,198 - DEBUG :     - numpy_is_installed
2021-07-28 12:48:58,198 - DEBUG :     - pyxll_logfile
2021-07-28 12:48:58,198 - DEBUG :     - get_formula
2021-07-28 12:48:58,198 - DEBUG :     - get_array_formula
2021-07-28 12:48:58,198 - DEBUG :     - get_last_error
2021-07-28 12:48:58,198 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:48:58,198 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:48:58,198 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:48:58,198 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:48:58,198 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:48:58,198 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:48:58,198 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:48:58,198 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:48:58,198 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:48:58,198 - DEBUG :     - xl_cell_example
2021-07-28 12:48:58,198 - DEBUG :     - recalc_on_open_test
2021-07-28 12:48:58,198 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:48:58,198 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:48:58,198 - DEBUG :     - one_cell_one_sim
2021-07-28 12:48:58,198 - DEBUG :     - one_row_one_sim
2021-07-28 12:48:58,224 - DEBUG : Adding menus to Excel:
2021-07-28 12:48:58,224 - DEBUG :   - PyXLL
2021-07-28 12:48:58,224 - DEBUG :     - Reload PyXLL
2021-07-28 12:48:58,224 - DEBUG :     - Another example menu item
2021-07-28 12:48:58,224 - DEBUG :     - More Examples
2021-07-28 12:48:58,224 - DEBUG :       - Click me
2021-07-28 12:48:58,224 - DEBUG :       - Unicode Test
2021-07-28 12:48:58,224 - DEBUG :     - Open log file
2021-07-28 12:48:58,224 - DEBUG :     - Attach To VS Code
2021-07-28 12:48:58,224 - DEBUG :     - Custom Task Panes
2021-07-28 12:48:58,224 - DEBUG :       - Qt
2021-07-28 12:48:58,224 - DEBUG :       - Tk
2021-07-28 12:48:58,224 - DEBUG :       - Wx
2021-07-28 12:48:58,224 - DEBUG :     - Example Menu Item 1
2021-07-28 12:48:58,224 - DEBUG :     - Show last error
2021-07-28 12:48:58,224 - DEBUG :     - About PyXLL...
2021-07-28 12:48:58,224 - DEBUG :   - PyXLL example menu
2021-07-28 12:48:58,224 - DEBUG :     - Click me
2021-07-28 12:48:58,289 - DEBUG : Finished binding Python functions
2021-07-28 12:48:58,289 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 12:48:58,289 - DEBUG : pyxll._post_open complete.
2021-07-28 12:48:58,303 - DEBUG : PyXLL initialization complete.
2021-07-28 12:48:58,631 - DEBUG : Initializing PyXLL Python module.
2021-07-28 12:48:58,631 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 12:48:58,631 - DEBUG : PyXLL Python module initialized.
2021-07-28 12:48:58,632 - DEBUG : Functions will not be cancellable by default.
2021-07-28 12:48:58,633 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 12:48:58,634 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 12:48:58,682 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 12:48:58,683 - DEBUG : Reloading misc
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 12:48:58,684 - DEBUG : Reloaded misc
2021-07-28 12:48:58,684 - DEBUG : Reloading worksheetfuncs
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 12:48:58,684 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 12:48:58,684 - DEBUG : Reloaded worksheetfuncs
2021-07-28 12:48:58,684 - DEBUG : Reloading menus
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 12:48:58,684 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 12:48:58,691 - DEBUG : Reloaded menus
2021-07-28 12:48:58,691 - DEBUG : Reloading callbacks
2021-07-28 12:48:58,691 - DEBUG : Reloaded callbacks
2021-07-28 12:48:58,691 - DEBUG : Reloading custom_task_panes
2021-07-28 12:48:58,692 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 12:48:58,692 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 12:48:58,692 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 12:48:58,692 - DEBUG : Reloaded custom_task_panes
2021-07-28 12:48:58,693 - DEBUG : Reloading test
2021-07-28 12:48:58,693 - DEBUG : Reloaded test
2021-07-28 12:48:58,694 - DEBUG : Reloading meta_variables
2021-07-28 12:48:58,694 - DEBUG : Reloaded meta_variables
2021-07-28 12:48:58,695 - DEBUG : Reloading dependency error_functions
2021-07-28 12:48:58,695 - DEBUG : Reloaded dependency error_functions
2021-07-28 12:48:58,695 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 12:48:58,696 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 12:48:58,696 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 12:48:58,696 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 12:48:58,696 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 12:48:58,696 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 12:48:58,696 - DEBUG : Reloading dependency examples
2021-07-28 12:48:58,699 - DEBUG : Reloaded dependency examples
2021-07-28 12:48:58,699 - DEBUG : Reloading ribbon_functions
2021-07-28 12:48:58,700 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000233B05A1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000233B05EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000233B05F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000233B068E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000233B0642580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000233B067AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000233B0627070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000233B067E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000233B067A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000233B066C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000233B0659CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000233B0656F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000233B05ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000233B06563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000233B05A1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000233B05EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000233B05F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000233B068E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000233B0642580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000233B067AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000233B0627070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000233B067E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000233B067A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000233B066C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000233B0659CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000233B0656F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000233B05ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000233B06563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 12:48:58,700 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 12:48:58,700 - DEBUG : Reloaded ribbon_functions
2021-07-28 12:48:58,700 - DEBUG : Reloading debugging
2021-07-28 12:48:58,700 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 12:48:58,700 - DEBUG : Reloaded debugging
2021-07-28 12:48:58,700 - DEBUG : Reloading selectiontools
2021-07-28 12:48:58,700 - DEBUG : Reloaded selectiontools
2021-07-28 12:48:58,744 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 12:48:58,752 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 12:48:58,770 - INFO : This product is licensed to 
2021-07-28 12:48:58,770 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 12:48:58,772 - DEBUG : Calling pyxll._post_open.
2021-07-28 12:48:58,772 - DEBUG : Binding Python functions to Excel
2021-07-28 12:48:58,772 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 12:48:58,773 - DEBUG :     - pyxll_version
2021-07-28 12:48:58,773 - DEBUG :     - python_version
2021-07-28 12:48:58,773 - DEBUG :     - win32api_is_installed
2021-07-28 12:48:58,773 - DEBUG :     - win32com_is_installed
2021-07-28 12:48:58,773 - DEBUG :     - numpy_is_installed
2021-07-28 12:48:58,773 - DEBUG :     - pyxll_logfile
2021-07-28 12:48:58,773 - DEBUG :     - get_formula
2021-07-28 12:48:58,773 - DEBUG :     - get_array_formula
2021-07-28 12:48:58,773 - DEBUG :     - get_last_error
2021-07-28 12:48:58,774 - DEBUG :     - basic_pyxll_function_1
2021-07-28 12:48:58,774 - DEBUG :     - basic_pyxll_function_2
2021-07-28 12:48:58,774 - DEBUG :     - basic_pyxll_function_3
2021-07-28 12:48:58,774 - DEBUG :     - var_pyxll_function_1
2021-07-28 12:48:58,774 - DEBUG :     - var_pyxll_function_2
2021-07-28 12:48:58,774 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 12:48:58,774 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 12:48:58,774 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 12:48:58,774 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 12:48:58,774 - DEBUG :     - xl_cell_example
2021-07-28 12:48:58,775 - DEBUG :     - recalc_on_open_test
2021-07-28 12:48:58,775 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 12:48:58,775 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 12:48:58,775 - DEBUG :     - one_cell_one_sim
2021-07-28 12:48:58,775 - DEBUG :     - one_row_one_sim
2021-07-28 12:48:58,780 - DEBUG : Adding menus to Excel:
2021-07-28 12:48:58,780 - DEBUG :   - PyXLL
2021-07-28 12:48:58,780 - DEBUG :     - Reload PyXLL
2021-07-28 12:48:58,780 - DEBUG :     - Another example menu item
2021-07-28 12:48:58,780 - DEBUG :     - More Examples
2021-07-28 12:48:58,780 - DEBUG :       - Click me
2021-07-28 12:48:58,780 - DEBUG :       - Unicode Test
2021-07-28 12:48:58,780 - DEBUG :     - Open log file
2021-07-28 12:48:58,780 - DEBUG :     - Attach To VS Code
2021-07-28 12:48:58,780 - DEBUG :     - Custom Task Panes
2021-07-28 12:48:58,780 - DEBUG :       - Qt
2021-07-28 12:48:58,780 - DEBUG :       - Tk
2021-07-28 12:48:58,780 - DEBUG :       - Wx
2021-07-28 12:48:58,780 - DEBUG :     - Example Menu Item 1
2021-07-28 12:48:58,780 - DEBUG :     - Show last error
2021-07-28 12:48:58,780 - DEBUG :     - About PyXLL...
2021-07-28 12:48:58,780 - DEBUG :   - PyXLL example menu
2021-07-28 12:48:58,780 - DEBUG :     - Click me
2021-07-28 12:48:58,784 - DEBUG : Finished binding Python functions
2021-07-28 12:48:58,784 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 12:49:01,232 - DEBUG : pyxll._post_open complete.
2021-07-28 12:49:01,235 - DEBUG : PyXLL initialization complete.
2021-07-28 12:49:03,673 - DEBUG : Loading PyXLL COM Addin
2021-07-28 12:49:03,673 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 12:49:03,699 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 12:49:03,771 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:49:03,777 - DEBUG : Loading PyXLL COM Addin
2021-07-28 12:49:03,777 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 12:49:03,784 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 12:49:03,791 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 12:49:41,772 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:49:44,138 - ERROR : Traceback (most recent call last):
2021-07-28 12:49:44,138 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 12:49:44,139 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 12:49:44,139 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 158, in advanced_simulation_cell
2021-07-28 12:49:44,140 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 12:49:44,140 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-28 12:49:44,141 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-28 12:49:44,141 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 12:49:44,141 - ERROR :     raise Exception(self.errormsg)
2021-07-28 12:49:44,141 - ERROR : Exception: parse error [column 6]: unknown character, expression: Sheet2!E5
2021-07-28 12:50:09,996 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 12:50:13,566 - ERROR : Traceback (most recent call last):
2021-07-28 12:50:13,566 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 12:50:13,567 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 12:50:13,567 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 158, in advanced_simulation_cell
2021-07-28 12:50:13,568 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 12:50:13,568 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-28 12:50:13,568 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-28 12:50:13,568 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 12:50:13,568 - ERROR :     raise Exception(self.errormsg)
2021-07-28 12:50:13,568 - ERROR : Exception: parse error [column 6]: unknown character, expression: Sheet2!E5
2021-07-28 13:02:35,737 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 13:02:40,937 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 13:02:42,480 - ERROR : Traceback (most recent call last):
2021-07-28 13:02:42,486 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 13:02:42,488 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 13:02:42,489 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 158, in advanced_simulation_cell
2021-07-28 13:02:42,491 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 13:02:42,492 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-28 13:02:42,494 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-28 13:02:42,495 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 13:02:42,496 - ERROR :     raise Exception(self.errormsg)
2021-07-28 13:02:42,497 - ERROR : Exception: parse error [column 6]: unknown character, expression: Sheet2!E5
2021-07-28 13:02:44,718 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 13:02:44,719 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 13:02:44,719 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 13:02:44,719 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 13:02:44,719 - DEBUG : -------- PyXLL config --------
2021-07-28 13:02:44,719 - DEBUG : [LOG]
2021-07-28 13:02:44,719 - DEBUG : encoding = utf-8
2021-07-28 13:02:44,719 - DEBUG : file = pyxll.20210728.log
2021-07-28 13:02:44,719 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 13:02:44,719 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 13:02:44,719 - DEBUG : verbosity = debug
2021-07-28 13:02:44,719 - DEBUG : 
2021-07-28 13:02:44,719 - DEBUG : [PYTHON]
2021-07-28 13:02:44,719 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 13:02:44,719 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 13:02:44,719 - DEBUG : 
2021-07-28 13:02:44,719 - DEBUG : [PYXLL]
2021-07-28 13:02:44,719 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 13:02:44,719 - DEBUG : developer_mode = 1
2021-07-28 13:02:44,719 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 13:02:44,719 - DEBUG : modules = 
2021-07-28 13:02:44,719 - DEBUG :     misc
2021-07-28 13:02:44,719 - DEBUG :     worksheetfuncs
2021-07-28 13:02:44,719 - DEBUG :     menus
2021-07-28 13:02:44,719 - DEBUG :     callbacks
2021-07-28 13:02:44,719 - DEBUG :     custom_task_panes
2021-07-28 13:02:44,719 - DEBUG :     test
2021-07-28 13:02:44,719 - DEBUG :     ribbon_functions
2021-07-28 13:02:44,719 - DEBUG :     debugging
2021-07-28 13:02:44,719 - DEBUG :     meta_variables
2021-07-28 13:02:44,719 - DEBUG :     selectiontools
2021-07-28 13:02:44,719 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 13:02:44,719 - DEBUG : ------------------------------
2021-07-28 13:02:44,719 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 13:02:44,719 - DEBUG : Initializing PyXLL Python module.
2021-07-28 13:02:44,719 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 13:02:44,719 - DEBUG : PyXLL Python module initialized.
2021-07-28 13:02:44,727 - DEBUG : Functions will not be cancellable by default.
2021-07-28 13:02:44,730 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 13:02:44,731 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 13:02:44,834 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 13:02:44,834 - DEBUG : Reloading misc
2021-07-28 13:02:44,835 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 13:02:44,849 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 13:02:44,850 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 13:02:44,850 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 13:02:44,850 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 13:02:44,850 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 13:02:44,856 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 13:02:44,856 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 13:02:44,856 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 13:02:44,856 - DEBUG : Reloaded misc
2021-07-28 13:02:44,856 - DEBUG : Reloading worksheetfuncs
2021-07-28 13:02:44,865 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 13:02:44,866 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 13:02:44,878 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 13:02:44,878 - DEBUG : Reloaded worksheetfuncs
2021-07-28 13:02:44,878 - DEBUG : Reloading menus
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 13:02:44,881 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 13:02:44,881 - DEBUG : Reloaded menus
2021-07-28 13:02:44,886 - DEBUG : Reloading callbacks
2021-07-28 13:02:44,888 - DEBUG : Reloaded callbacks
2021-07-28 13:02:44,888 - DEBUG : Reloading custom_task_panes
2021-07-28 13:02:44,888 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 13:02:44,888 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 13:02:44,888 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 13:02:44,888 - DEBUG : Reloaded custom_task_panes
2021-07-28 13:02:44,888 - DEBUG : Reloading test
2021-07-28 13:02:44,895 - DEBUG : Reloaded test
2021-07-28 13:02:44,895 - DEBUG : Reloading meta_variables
2021-07-28 13:02:44,895 - DEBUG : Reloaded meta_variables
2021-07-28 13:02:44,895 - DEBUG : Reloading dependency error_functions
2021-07-28 13:02:44,903 - DEBUG : Reloaded dependency error_functions
2021-07-28 13:02:44,904 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 13:02:44,904 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 13:02:44,904 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 13:02:44,904 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 13:02:44,904 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 13:02:44,911 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 13:02:44,911 - DEBUG : Reloading dependency examples
2021-07-28 13:02:44,911 - DEBUG : Reloaded dependency examples
2021-07-28 13:02:44,911 - DEBUG : Reloading ribbon_functions
2021-07-28 13:02:44,917 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000233B05A1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000233B05EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000233B05F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000233B068E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000233B0642580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000233B067AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000233B0627070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000233B067E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000233B067A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000233B066C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000233B0659CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000233B0656F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000233B05ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000233B06563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000233B05A1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000233B05EDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000233B05F7B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000233B068E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000233B0642580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000233B067AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000233B0627070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000233B067E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000233B067A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000233B066C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000233B0659CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000233B0656F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000233B05ACFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000233B06563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 13:02:44,917 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 13:02:44,917 - DEBUG : Reloaded ribbon_functions
2021-07-28 13:02:44,917 - DEBUG : Reloading debugging
2021-07-28 13:02:44,924 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 13:02:44,925 - DEBUG : Reloaded debugging
2021-07-28 13:02:44,925 - DEBUG : Reloading selectiontools
2021-07-28 13:02:44,927 - DEBUG : Reloaded selectiontools
2021-07-28 13:02:45,003 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 13:02:45,003 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 13:02:45,036 - INFO : This product is licensed to 
2021-07-28 13:02:45,036 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 13:02:45,040 - DEBUG : Calling pyxll._post_open.
2021-07-28 13:02:45,040 - DEBUG : Binding Python functions to Excel
2021-07-28 13:02:45,040 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 13:02:45,040 - DEBUG :     - pyxll_version
2021-07-28 13:02:45,040 - DEBUG :     - python_version
2021-07-28 13:02:45,040 - DEBUG :     - win32api_is_installed
2021-07-28 13:02:45,041 - DEBUG :     - win32com_is_installed
2021-07-28 13:02:45,041 - DEBUG :     - numpy_is_installed
2021-07-28 13:02:45,041 - DEBUG :     - pyxll_logfile
2021-07-28 13:02:45,041 - DEBUG :     - get_formula
2021-07-28 13:02:45,041 - DEBUG :     - get_array_formula
2021-07-28 13:02:45,041 - DEBUG :     - get_last_error
2021-07-28 13:02:45,041 - DEBUG :     - basic_pyxll_function_1
2021-07-28 13:02:45,041 - DEBUG :     - basic_pyxll_function_2
2021-07-28 13:02:45,041 - DEBUG :     - basic_pyxll_function_3
2021-07-28 13:02:45,041 - DEBUG :     - var_pyxll_function_1
2021-07-28 13:02:45,041 - DEBUG :     - var_pyxll_function_2
2021-07-28 13:02:45,041 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 13:02:45,041 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 13:02:45,041 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 13:02:45,041 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 13:02:45,041 - DEBUG :     - xl_cell_example
2021-07-28 13:02:45,041 - DEBUG :     - recalc_on_open_test
2021-07-28 13:02:45,041 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 13:02:45,041 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 13:02:45,041 - DEBUG :     - one_cell_one_sim
2021-07-28 13:02:45,041 - DEBUG :     - one_row_one_sim
2021-07-28 13:02:45,049 - DEBUG : Adding menus to Excel:
2021-07-28 13:02:45,049 - DEBUG :   - PyXLL
2021-07-28 13:02:45,049 - DEBUG :     - Reload PyXLL
2021-07-28 13:02:45,049 - DEBUG :     - Another example menu item
2021-07-28 13:02:45,049 - DEBUG :     - More Examples
2021-07-28 13:02:45,049 - DEBUG :       - Click me
2021-07-28 13:02:45,049 - DEBUG :       - Unicode Test
2021-07-28 13:02:45,049 - DEBUG :     - Open log file
2021-07-28 13:02:45,049 - DEBUG :     - Attach To VS Code
2021-07-28 13:02:45,049 - DEBUG :     - Custom Task Panes
2021-07-28 13:02:45,049 - DEBUG :       - Qt
2021-07-28 13:02:45,049 - DEBUG :       - Tk
2021-07-28 13:02:45,049 - DEBUG :       - Wx
2021-07-28 13:02:45,049 - DEBUG :     - Example Menu Item 1
2021-07-28 13:02:45,049 - DEBUG :     - Show last error
2021-07-28 13:02:45,049 - DEBUG :     - About PyXLL...
2021-07-28 13:02:45,049 - DEBUG :   - PyXLL example menu
2021-07-28 13:02:45,049 - DEBUG :     - Click me
2021-07-28 13:02:45,058 - DEBUG : Finished binding Python functions
2021-07-28 13:02:45,059 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 13:02:45,788 - DEBUG : pyxll._post_open complete.
2021-07-28 13:02:45,788 - DEBUG : PyXLL initialization complete.
2021-07-28 13:02:48,249 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 13:02:49,462 - ERROR : Traceback (most recent call last):
2021-07-28 13:02:49,463 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 13:02:49,465 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 13:02:49,465 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 158, in advanced_simulation_cell
2021-07-28 13:02:49,467 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-28 13:02:49,467 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-28 13:02:49,470 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-28 13:02:49,471 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-28 13:02:49,473 - ERROR :     raise Exception(self.errormsg)
2021-07-28 13:02:49,474 - ERROR : Exception: parse error [column 6]: unknown character, expression: Sheet2!E5
2021-07-28 13:02:49,999 - DEBUG : Closing PyXLL Python module.
2021-07-28 13:02:49,999 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 13:02:50,000 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 13:02:50,000 - DEBUG : PyXLL Python module closed.
2021-07-28 13:02:54,624 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 13:02:54,624 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 13:02:54,624 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 13:02:54,624 - DEBUG : -------- PyXLL config --------
2021-07-28 13:02:54,624 - DEBUG : [LOG]
2021-07-28 13:02:54,624 - DEBUG : encoding = utf-8
2021-07-28 13:02:54,624 - DEBUG : file = pyxll.20210728.log
2021-07-28 13:02:54,624 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 13:02:54,624 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 13:02:54,624 - DEBUG : verbosity = debug
2021-07-28 13:02:54,624 - DEBUG : 
2021-07-28 13:02:54,624 - DEBUG : [PYTHON]
2021-07-28 13:02:54,624 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 13:02:54,624 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 13:02:54,625 - DEBUG : 
2021-07-28 13:02:54,625 - DEBUG : [PYXLL]
2021-07-28 13:02:54,625 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 13:02:54,625 - DEBUG : developer_mode = 1
2021-07-28 13:02:54,625 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 13:02:54,625 - DEBUG : modules = 
2021-07-28 13:02:54,625 - DEBUG :     misc
2021-07-28 13:02:54,625 - DEBUG :     worksheetfuncs
2021-07-28 13:02:54,625 - DEBUG :     menus
2021-07-28 13:02:54,625 - DEBUG :     callbacks
2021-07-28 13:02:54,625 - DEBUG :     custom_task_panes
2021-07-28 13:02:54,625 - DEBUG :     test
2021-07-28 13:02:54,625 - DEBUG :     ribbon_functions
2021-07-28 13:02:54,625 - DEBUG :     debugging
2021-07-28 13:02:54,625 - DEBUG :     meta_variables
2021-07-28 13:02:54,625 - DEBUG :     selectiontools
2021-07-28 13:02:54,625 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 13:02:54,625 - DEBUG : ------------------------------
2021-07-28 13:02:54,626 - DEBUG : Attempting to load python38.dll
2021-07-28 13:02:54,628 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 13:02:54,629 - DEBUG : Checking Py_IsInitialized...
2021-07-28 13:02:54,629 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 13:02:54,794 - DEBUG : Calling Py_Initialize...
2021-07-28 13:02:54,945 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 13:02:54,946 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 13:02:54,946 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 13:02:54,946 - DEBUG : Python is initialized.
2021-07-28 13:02:54,947 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 13:02:54,949 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 13:02:54,950 - DEBUG : Looking for module 'site'...
2021-07-28 13:02:54,969 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 13:02:54,969 - DEBUG : Importing pyxll module
2021-07-28 13:02:54,969 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 13:02:54,969 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 13:02:54,969 - DEBUG :   Detected Python3
2021-07-28 13:02:55,015 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 13:02:55,017 - DEBUG : pyxll module imported
2021-07-28 13:02:55,017 - DEBUG : Initializing PyXLL Python module.
2021-07-28 13:02:55,017 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 13:02:55,017 - DEBUG : PyXLL Python module initialized.
2021-07-28 13:02:55,020 - DEBUG : Functions will not be cancellable by default.
2021-07-28 13:02:55,021 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 13:02:55,227 - DEBUG : Importing misc
2021-07-28 13:02:55,228 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 13:02:55,228 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 13:02:55,228 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 13:02:55,229 - DEBUG : Imported misc
2021-07-28 13:02:55,229 - DEBUG : Importing worksheetfuncs
2021-07-28 13:02:55,229 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 13:02:55,232 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 13:02:55,233 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 13:02:55,233 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 13:02:55,233 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 13:02:55,234 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 13:02:55,234 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 13:02:55,234 - DEBUG : Imported worksheetfuncs
2021-07-28 13:02:55,234 - DEBUG : Importing menus
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 13:02:55,238 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 13:02:55,238 - DEBUG : Imported menus
2021-07-28 13:02:55,238 - DEBUG : Importing callbacks
2021-07-28 13:02:55,238 - DEBUG : Imported callbacks
2021-07-28 13:02:55,238 - DEBUG : Importing custom_task_panes
2021-07-28 13:02:55,241 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 13:02:55,241 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 13:02:55,241 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 13:02:55,241 - DEBUG : Imported custom_task_panes
2021-07-28 13:02:55,241 - DEBUG : Importing test
2021-07-28 13:02:55,242 - DEBUG : Imported test
2021-07-28 13:02:55,242 - DEBUG : Importing ribbon_functions
2021-07-28 13:02:56,833 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 13:02:56,859 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 13:02:56,866 - DEBUG : matplotlib version 3.4.2
2021-07-28 13:02:56,866 - DEBUG : interactive is False
2021-07-28 13:02:56,866 - DEBUG : platform is win32
2021-07-28 13:02:56,866 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_d90000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_d90000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 13:02:56,912 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 13:02:56,938 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 13:02:57,149 - DEBUG : Loaded backend agg version unknown.
2021-07-28 13:02:57,155 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 13:02:57,155 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 13:02:57,155 - DEBUG : Imported ribbon_functions
2021-07-28 13:02:57,156 - DEBUG : Importing debugging
2021-07-28 13:02:57,769 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 13:02:57,769 - DEBUG : Imported debugging
2021-07-28 13:02:57,770 - DEBUG : Importing meta_variables
2021-07-28 13:02:57,770 - DEBUG : Imported meta_variables
2021-07-28 13:02:57,770 - DEBUG : Importing selectiontools
2021-07-28 13:02:57,771 - DEBUG : Imported selectiontools
2021-07-28 13:02:57,814 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 13:02:57,820 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 13:02:57,838 - INFO : This product is licensed to 
2021-07-28 13:02:57,838 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 13:02:57,840 - DEBUG : Calling pyxll._post_open.
2021-07-28 13:02:57,841 - DEBUG : Binding Python functions to Excel
2021-07-28 13:02:57,841 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 13:02:57,841 - DEBUG :     - pyxll_version
2021-07-28 13:02:57,841 - DEBUG :     - python_version
2021-07-28 13:02:57,841 - DEBUG :     - win32api_is_installed
2021-07-28 13:02:57,841 - DEBUG :     - win32com_is_installed
2021-07-28 13:02:57,841 - DEBUG :     - numpy_is_installed
2021-07-28 13:02:57,841 - DEBUG :     - pyxll_logfile
2021-07-28 13:02:57,841 - DEBUG :     - get_formula
2021-07-28 13:02:57,841 - DEBUG :     - get_array_formula
2021-07-28 13:02:57,841 - DEBUG :     - get_last_error
2021-07-28 13:02:57,841 - DEBUG :     - basic_pyxll_function_1
2021-07-28 13:02:57,841 - DEBUG :     - basic_pyxll_function_2
2021-07-28 13:02:57,841 - DEBUG :     - basic_pyxll_function_3
2021-07-28 13:02:57,841 - DEBUG :     - var_pyxll_function_1
2021-07-28 13:02:57,841 - DEBUG :     - var_pyxll_function_2
2021-07-28 13:02:57,841 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 13:02:57,841 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 13:02:57,841 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 13:02:57,841 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 13:02:57,841 - DEBUG :     - xl_cell_example
2021-07-28 13:02:57,841 - DEBUG :     - recalc_on_open_test
2021-07-28 13:02:57,841 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 13:02:57,841 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 13:02:57,841 - DEBUG :     - one_cell_one_sim
2021-07-28 13:02:57,841 - DEBUG :     - one_row_one_sim
2021-07-28 13:02:57,860 - DEBUG : Adding menus to Excel:
2021-07-28 13:02:57,860 - DEBUG :   - PyXLL
2021-07-28 13:02:57,860 - DEBUG :     - Reload PyXLL
2021-07-28 13:02:57,860 - DEBUG :     - Another example menu item
2021-07-28 13:02:57,860 - DEBUG :     - More Examples
2021-07-28 13:02:57,860 - DEBUG :       - Click me
2021-07-28 13:02:57,860 - DEBUG :       - Unicode Test
2021-07-28 13:02:57,860 - DEBUG :     - Open log file
2021-07-28 13:02:57,860 - DEBUG :     - Attach To VS Code
2021-07-28 13:02:57,860 - DEBUG :     - Custom Task Panes
2021-07-28 13:02:57,860 - DEBUG :       - Qt
2021-07-28 13:02:57,860 - DEBUG :       - Tk
2021-07-28 13:02:57,860 - DEBUG :       - Wx
2021-07-28 13:02:57,860 - DEBUG :     - Example Menu Item 1
2021-07-28 13:02:57,860 - DEBUG :     - Show last error
2021-07-28 13:02:57,860 - DEBUG :     - About PyXLL...
2021-07-28 13:02:57,860 - DEBUG :   - PyXLL example menu
2021-07-28 13:02:57,860 - DEBUG :     - Click me
2021-07-28 13:02:57,912 - DEBUG : Finished binding Python functions
2021-07-28 13:02:57,912 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 13:02:57,912 - DEBUG : pyxll._post_open complete.
2021-07-28 13:02:57,916 - DEBUG : PyXLL initialization complete.
2021-07-28 13:02:58,164 - DEBUG : Initializing PyXLL Python module.
2021-07-28 13:02:58,164 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 13:02:58,165 - DEBUG : PyXLL Python module initialized.
2021-07-28 13:02:58,166 - DEBUG : Functions will not be cancellable by default.
2021-07-28 13:02:58,167 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 13:02:58,167 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 13:02:58,214 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 13:02:58,214 - DEBUG : Reloading misc
2021-07-28 13:02:58,215 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 13:02:58,216 - DEBUG : Reloaded misc
2021-07-28 13:02:58,216 - DEBUG : Reloading worksheetfuncs
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 13:02:58,216 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 13:02:58,220 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 13:02:58,222 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 13:02:58,222 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 13:02:58,222 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 13:02:58,222 - DEBUG : Reloaded worksheetfuncs
2021-07-28 13:02:58,222 - DEBUG : Reloading menus
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 13:02:58,223 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 13:02:58,223 - DEBUG : Reloaded menus
2021-07-28 13:02:58,223 - DEBUG : Reloading callbacks
2021-07-28 13:02:58,224 - DEBUG : Reloaded callbacks
2021-07-28 13:02:58,224 - DEBUG : Reloading custom_task_panes
2021-07-28 13:02:58,225 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 13:02:58,225 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 13:02:58,225 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 13:02:58,225 - DEBUG : Reloaded custom_task_panes
2021-07-28 13:02:58,225 - DEBUG : Reloading test
2021-07-28 13:02:58,226 - DEBUG : Reloaded test
2021-07-28 13:02:58,226 - DEBUG : Reloading meta_variables
2021-07-28 13:02:58,227 - DEBUG : Reloaded meta_variables
2021-07-28 13:02:58,227 - DEBUG : Reloading dependency error_functions
2021-07-28 13:02:58,228 - DEBUG : Reloaded dependency error_functions
2021-07-28 13:02:58,228 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 13:02:58,228 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 13:02:58,228 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 13:02:58,228 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 13:02:58,228 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 13:02:58,228 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 13:02:58,228 - DEBUG : Reloading dependency examples
2021-07-28 13:02:58,228 - DEBUG : Reloaded dependency examples
2021-07-28 13:02:58,228 - DEBUG : Reloading ribbon_functions
2021-07-28 13:02:58,233 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 13:02:58,233 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 13:02:58,233 - DEBUG : Reloaded ribbon_functions
2021-07-28 13:02:58,234 - DEBUG : Reloading debugging
2021-07-28 13:02:58,234 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 13:02:58,235 - DEBUG : Reloaded debugging
2021-07-28 13:02:58,235 - DEBUG : Reloading selectiontools
2021-07-28 13:02:58,235 - DEBUG : Reloaded selectiontools
2021-07-28 13:02:58,282 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 13:02:58,285 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 13:02:58,304 - INFO : This product is licensed to 
2021-07-28 13:02:58,304 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 13:02:58,306 - DEBUG : Calling pyxll._post_open.
2021-07-28 13:02:58,306 - DEBUG : Binding Python functions to Excel
2021-07-28 13:02:58,306 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 13:02:58,307 - DEBUG :     - pyxll_version
2021-07-28 13:02:58,307 - DEBUG :     - python_version
2021-07-28 13:02:58,307 - DEBUG :     - win32api_is_installed
2021-07-28 13:02:58,307 - DEBUG :     - win32com_is_installed
2021-07-28 13:02:58,307 - DEBUG :     - numpy_is_installed
2021-07-28 13:02:58,307 - DEBUG :     - pyxll_logfile
2021-07-28 13:02:58,307 - DEBUG :     - get_formula
2021-07-28 13:02:58,307 - DEBUG :     - get_array_formula
2021-07-28 13:02:58,307 - DEBUG :     - get_last_error
2021-07-28 13:02:58,307 - DEBUG :     - basic_pyxll_function_1
2021-07-28 13:02:58,307 - DEBUG :     - basic_pyxll_function_2
2021-07-28 13:02:58,307 - DEBUG :     - basic_pyxll_function_3
2021-07-28 13:02:58,307 - DEBUG :     - var_pyxll_function_1
2021-07-28 13:02:58,307 - DEBUG :     - var_pyxll_function_2
2021-07-28 13:02:58,307 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 13:02:58,307 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 13:02:58,308 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 13:02:58,308 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 13:02:58,308 - DEBUG :     - xl_cell_example
2021-07-28 13:02:58,308 - DEBUG :     - recalc_on_open_test
2021-07-28 13:02:58,308 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 13:02:58,308 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 13:02:58,308 - DEBUG :     - one_cell_one_sim
2021-07-28 13:02:58,308 - DEBUG :     - one_row_one_sim
2021-07-28 13:02:58,309 - DEBUG : Adding menus to Excel:
2021-07-28 13:02:58,309 - DEBUG :   - PyXLL
2021-07-28 13:02:58,309 - DEBUG :     - Reload PyXLL
2021-07-28 13:02:58,309 - DEBUG :     - Another example menu item
2021-07-28 13:02:58,309 - DEBUG :     - More Examples
2021-07-28 13:02:58,309 - DEBUG :       - Click me
2021-07-28 13:02:58,309 - DEBUG :       - Unicode Test
2021-07-28 13:02:58,309 - DEBUG :     - Open log file
2021-07-28 13:02:58,309 - DEBUG :     - Attach To VS Code
2021-07-28 13:02:58,309 - DEBUG :     - Custom Task Panes
2021-07-28 13:02:58,309 - DEBUG :       - Qt
2021-07-28 13:02:58,309 - DEBUG :       - Tk
2021-07-28 13:02:58,309 - DEBUG :       - Wx
2021-07-28 13:02:58,309 - DEBUG :     - Example Menu Item 1
2021-07-28 13:02:58,309 - DEBUG :     - Show last error
2021-07-28 13:02:58,309 - DEBUG :     - About PyXLL...
2021-07-28 13:02:58,309 - DEBUG :   - PyXLL example menu
2021-07-28 13:02:58,309 - DEBUG :     - Click me
2021-07-28 13:02:58,317 - DEBUG : Finished binding Python functions
2021-07-28 13:02:58,317 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 13:03:05,922 - DEBUG : pyxll._post_open complete.
2021-07-28 13:03:05,922 - DEBUG : PyXLL initialization complete.
2021-07-28 13:03:13,057 - DEBUG : Initializing PyXLL Python module.
2021-07-28 13:03:13,057 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 13:03:13,057 - DEBUG : PyXLL Python module initialized.
2021-07-28 13:03:13,058 - DEBUG : Functions will not be cancellable by default.
2021-07-28 13:03:13,059 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 13:03:13,059 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 13:03:13,100 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 13:03:13,100 - DEBUG : Reloading misc
2021-07-28 13:03:13,100 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 13:03:13,100 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 13:03:13,100 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 13:03:13,100 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 13:03:13,102 - DEBUG : Reloaded misc
2021-07-28 13:03:13,102 - DEBUG : Reloading worksheetfuncs
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 13:03:13,102 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 13:03:13,102 - DEBUG : Reloaded worksheetfuncs
2021-07-28 13:03:13,102 - DEBUG : Reloading menus
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 13:03:13,102 - DEBUG : Reloaded menus
2021-07-28 13:03:13,102 - DEBUG : Reloading callbacks
2021-07-28 13:03:13,102 - DEBUG : Reloaded callbacks
2021-07-28 13:03:13,102 - DEBUG : Reloading custom_task_panes
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 13:03:13,102 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 13:03:13,102 - DEBUG : Reloaded custom_task_panes
2021-07-28 13:03:13,102 - DEBUG : Reloading test
2021-07-28 13:03:13,102 - DEBUG : Reloaded test
2021-07-28 13:03:13,102 - DEBUG : Reloading meta_variables
2021-07-28 13:03:13,111 - DEBUG : Reloaded meta_variables
2021-07-28 13:03:13,111 - DEBUG : Reloading dependency error_functions
2021-07-28 13:03:13,111 - DEBUG : Reloaded dependency error_functions
2021-07-28 13:03:13,111 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 13:03:13,111 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 13:03:13,111 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 13:03:13,113 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 13:03:13,113 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 13:03:13,113 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 13:03:13,114 - DEBUG : Reloading dependency examples
2021-07-28 13:03:13,114 - DEBUG : Reloaded dependency examples
2021-07-28 13:03:13,114 - DEBUG : Reloading ribbon_functions
2021-07-28 13:03:13,114 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 13:03:13,114 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 13:03:13,114 - DEBUG : Reloaded ribbon_functions
2021-07-28 13:03:13,114 - DEBUG : Reloading debugging
2021-07-28 13:03:13,114 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 13:03:13,114 - DEBUG : Reloaded debugging
2021-07-28 13:03:13,114 - DEBUG : Reloading selectiontools
2021-07-28 13:03:13,114 - DEBUG : Reloaded selectiontools
2021-07-28 13:03:13,154 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 13:03:13,155 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 13:03:13,173 - INFO : This product is licensed to 
2021-07-28 13:03:13,173 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 13:03:13,175 - DEBUG : Calling pyxll._post_open.
2021-07-28 13:03:13,176 - DEBUG : Binding Python functions to Excel
2021-07-28 13:03:13,176 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 13:03:13,176 - DEBUG :     - pyxll_version
2021-07-28 13:03:13,176 - DEBUG :     - python_version
2021-07-28 13:03:13,176 - DEBUG :     - win32api_is_installed
2021-07-28 13:03:13,176 - DEBUG :     - win32com_is_installed
2021-07-28 13:03:13,176 - DEBUG :     - numpy_is_installed
2021-07-28 13:03:13,176 - DEBUG :     - pyxll_logfile
2021-07-28 13:03:13,176 - DEBUG :     - get_formula
2021-07-28 13:03:13,176 - DEBUG :     - get_array_formula
2021-07-28 13:03:13,176 - DEBUG :     - get_last_error
2021-07-28 13:03:13,176 - DEBUG :     - basic_pyxll_function_1
2021-07-28 13:03:13,176 - DEBUG :     - basic_pyxll_function_2
2021-07-28 13:03:13,176 - DEBUG :     - basic_pyxll_function_3
2021-07-28 13:03:13,176 - DEBUG :     - var_pyxll_function_1
2021-07-28 13:03:13,176 - DEBUG :     - var_pyxll_function_2
2021-07-28 13:03:13,177 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 13:03:13,177 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 13:03:13,177 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 13:03:13,177 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 13:03:13,177 - DEBUG :     - xl_cell_example
2021-07-28 13:03:13,177 - DEBUG :     - recalc_on_open_test
2021-07-28 13:03:13,177 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 13:03:13,177 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 13:03:13,177 - DEBUG :     - one_cell_one_sim
2021-07-28 13:03:13,177 - DEBUG :     - one_row_one_sim
2021-07-28 13:03:13,179 - DEBUG : Adding menus to Excel:
2021-07-28 13:03:13,179 - DEBUG :   - PyXLL
2021-07-28 13:03:13,179 - DEBUG :     - Reload PyXLL
2021-07-28 13:03:13,179 - DEBUG :     - Another example menu item
2021-07-28 13:03:13,179 - DEBUG :     - More Examples
2021-07-28 13:03:13,179 - DEBUG :       - Click me
2021-07-28 13:03:13,179 - DEBUG :       - Unicode Test
2021-07-28 13:03:13,179 - DEBUG :     - Open log file
2021-07-28 13:03:13,179 - DEBUG :     - Attach To VS Code
2021-07-28 13:03:13,179 - DEBUG :     - Custom Task Panes
2021-07-28 13:03:13,179 - DEBUG :       - Qt
2021-07-28 13:03:13,179 - DEBUG :       - Tk
2021-07-28 13:03:13,179 - DEBUG :       - Wx
2021-07-28 13:03:13,179 - DEBUG :     - Example Menu Item 1
2021-07-28 13:03:13,179 - DEBUG :     - Show last error
2021-07-28 13:03:13,179 - DEBUG :     - About PyXLL...
2021-07-28 13:03:13,179 - DEBUG :   - PyXLL example menu
2021-07-28 13:03:13,179 - DEBUG :     - Click me
2021-07-28 13:03:13,183 - DEBUG : Finished binding Python functions
2021-07-28 13:03:13,183 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 13:03:14,265 - DEBUG : pyxll._post_open complete.
2021-07-28 13:03:14,266 - DEBUG : PyXLL initialization complete.
2021-07-28 13:03:16,706 - DEBUG : Loading PyXLL COM Addin
2021-07-28 13:03:16,707 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 13:03:16,715 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 13:03:16,740 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 13:03:16,743 - DEBUG : Loading PyXLL COM Addin
2021-07-28 13:03:16,743 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 13:03:16,745 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 13:03:16,750 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 13:03:16,753 - DEBUG : Loading PyXLL COM Addin
2021-07-28 13:03:16,753 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 13:03:16,756 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 13:03:16,761 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 13:04:33,761 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,761 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,769 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,771 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 13:04:33,779 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,781 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,790 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,792 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 13:04:33,800 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,802 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 13:04:33,810 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,811 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,812 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,813 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,820 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 13:04:33,822 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 13:04:33,822 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 13:04:46,450 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 13:04:59,564 - ERROR : Traceback (most recent call last):
2021-07-28 13:04:59,564 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 13:04:59,565 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 13:04:59,565 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 83, in advanced_simulation_cell
2021-07-28 13:04:59,565 - ERROR :     cell_information = cell_data(control=control, cell_location=curr_cell_address, sheet_name=sheet_name)
2021-07-28 13:04:59,565 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 108, in cell_data
2021-07-28 13:04:59,566 - ERROR :     distrInfoPageName = xl.Worksheets(sheet_name).Range(id_location).Value
2021-07-28 13:04:59,566 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 13:04:59,566 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 13:04:59,567 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 13:05:08,307 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 13:05:08,309 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 13:05:08,310 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 13:05:08,310 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 13:05:08,310 - DEBUG : -------- PyXLL config --------
2021-07-28 13:05:08,310 - DEBUG : [LOG]
2021-07-28 13:05:08,310 - DEBUG : encoding = utf-8
2021-07-28 13:05:08,310 - DEBUG : file = pyxll.20210728.log
2021-07-28 13:05:08,310 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 13:05:08,310 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 13:05:08,310 - DEBUG : verbosity = debug
2021-07-28 13:05:08,310 - DEBUG : 
2021-07-28 13:05:08,310 - DEBUG : [PYTHON]
2021-07-28 13:05:08,310 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 13:05:08,310 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 13:05:08,310 - DEBUG : 
2021-07-28 13:05:08,310 - DEBUG : [PYXLL]
2021-07-28 13:05:08,310 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 13:05:08,310 - DEBUG : developer_mode = 1
2021-07-28 13:05:08,310 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 13:05:08,310 - DEBUG : modules = 
2021-07-28 13:05:08,310 - DEBUG :     misc
2021-07-28 13:05:08,310 - DEBUG :     worksheetfuncs
2021-07-28 13:05:08,310 - DEBUG :     menus
2021-07-28 13:05:08,310 - DEBUG :     callbacks
2021-07-28 13:05:08,310 - DEBUG :     custom_task_panes
2021-07-28 13:05:08,310 - DEBUG :     test
2021-07-28 13:05:08,310 - DEBUG :     ribbon_functions
2021-07-28 13:05:08,310 - DEBUG :     debugging
2021-07-28 13:05:08,310 - DEBUG :     meta_variables
2021-07-28 13:05:08,310 - DEBUG :     selectiontools
2021-07-28 13:05:08,310 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 13:05:08,310 - DEBUG : ------------------------------
2021-07-28 13:05:08,310 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 13:05:08,311 - DEBUG : Initializing PyXLL Python module.
2021-07-28 13:05:08,311 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 13:05:08,311 - DEBUG : PyXLL Python module initialized.
2021-07-28 13:05:08,312 - DEBUG : Functions will not be cancellable by default.
2021-07-28 13:05:08,313 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 13:05:08,313 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 13:05:08,388 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 13:05:08,389 - DEBUG : Reloading misc
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 13:05:08,389 - DEBUG : Reloaded misc
2021-07-28 13:05:08,389 - DEBUG : Reloading worksheetfuncs
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 13:05:08,389 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 13:05:08,396 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 13:05:08,396 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 13:05:08,396 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 13:05:08,397 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 13:05:08,397 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 13:05:08,397 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 13:05:08,397 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 13:05:08,397 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 13:05:08,397 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 13:05:08,397 - DEBUG : Reloaded worksheetfuncs
2021-07-28 13:05:08,397 - DEBUG : Reloading menus
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 13:05:08,397 - DEBUG : Reloaded menus
2021-07-28 13:05:08,397 - DEBUG : Reloading callbacks
2021-07-28 13:05:08,397 - DEBUG : Reloaded callbacks
2021-07-28 13:05:08,397 - DEBUG : Reloading custom_task_panes
2021-07-28 13:05:08,397 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 13:05:08,404 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 13:05:08,404 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 13:05:08,404 - DEBUG : Reloaded custom_task_panes
2021-07-28 13:05:08,404 - DEBUG : Reloading test
2021-07-28 13:05:08,405 - DEBUG : Reloaded test
2021-07-28 13:05:08,405 - DEBUG : Reloading meta_variables
2021-07-28 13:05:08,406 - DEBUG : Reloaded meta_variables
2021-07-28 13:05:08,406 - DEBUG : Reloading dependency error_functions
2021-07-28 13:05:08,406 - DEBUG : Reloaded dependency error_functions
2021-07-28 13:05:08,406 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 13:05:08,406 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 13:05:08,406 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 13:05:08,406 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 13:05:08,406 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 13:05:08,406 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 13:05:08,406 - DEBUG : Reloading dependency examples
2021-07-28 13:05:08,412 - DEBUG : Reloaded dependency examples
2021-07-28 13:05:08,412 - DEBUG : Reloading ribbon_functions
2021-07-28 13:05:08,414 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 13:05:08,414 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 13:05:08,414 - DEBUG : Reloaded ribbon_functions
2021-07-28 13:05:08,414 - DEBUG : Reloading debugging
2021-07-28 13:05:08,414 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 13:05:08,414 - DEBUG : Reloaded debugging
2021-07-28 13:05:08,416 - DEBUG : Reloading selectiontools
2021-07-28 13:05:08,416 - DEBUG : Reloaded selectiontools
2021-07-28 13:05:08,455 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 13:05:08,455 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 13:05:08,480 - INFO : This product is licensed to 
2021-07-28 13:05:08,480 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 13:05:08,482 - DEBUG : Calling pyxll._post_open.
2021-07-28 13:05:08,482 - DEBUG : Binding Python functions to Excel
2021-07-28 13:05:08,482 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 13:05:08,482 - DEBUG :     - pyxll_version
2021-07-28 13:05:08,482 - DEBUG :     - python_version
2021-07-28 13:05:08,482 - DEBUG :     - win32api_is_installed
2021-07-28 13:05:08,482 - DEBUG :     - win32com_is_installed
2021-07-28 13:05:08,483 - DEBUG :     - numpy_is_installed
2021-07-28 13:05:08,483 - DEBUG :     - pyxll_logfile
2021-07-28 13:05:08,483 - DEBUG :     - get_formula
2021-07-28 13:05:08,483 - DEBUG :     - get_array_formula
2021-07-28 13:05:08,483 - DEBUG :     - get_last_error
2021-07-28 13:05:08,483 - DEBUG :     - basic_pyxll_function_1
2021-07-28 13:05:08,483 - DEBUG :     - basic_pyxll_function_2
2021-07-28 13:05:08,483 - DEBUG :     - basic_pyxll_function_3
2021-07-28 13:05:08,483 - DEBUG :     - var_pyxll_function_1
2021-07-28 13:05:08,483 - DEBUG :     - var_pyxll_function_2
2021-07-28 13:05:08,483 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 13:05:08,483 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 13:05:08,483 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 13:05:08,483 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 13:05:08,483 - DEBUG :     - xl_cell_example
2021-07-28 13:05:08,483 - DEBUG :     - recalc_on_open_test
2021-07-28 13:05:08,483 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 13:05:08,483 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 13:05:08,483 - DEBUG :     - one_cell_one_sim
2021-07-28 13:05:08,483 - DEBUG :     - one_row_one_sim
2021-07-28 13:05:08,486 - DEBUG : Adding menus to Excel:
2021-07-28 13:05:08,486 - DEBUG :   - PyXLL
2021-07-28 13:05:08,486 - DEBUG :     - Reload PyXLL
2021-07-28 13:05:08,486 - DEBUG :     - Another example menu item
2021-07-28 13:05:08,486 - DEBUG :     - More Examples
2021-07-28 13:05:08,486 - DEBUG :       - Click me
2021-07-28 13:05:08,486 - DEBUG :       - Unicode Test
2021-07-28 13:05:08,486 - DEBUG :     - Open log file
2021-07-28 13:05:08,486 - DEBUG :     - Attach To VS Code
2021-07-28 13:05:08,486 - DEBUG :     - Custom Task Panes
2021-07-28 13:05:08,486 - DEBUG :       - Qt
2021-07-28 13:05:08,486 - DEBUG :       - Tk
2021-07-28 13:05:08,486 - DEBUG :       - Wx
2021-07-28 13:05:08,486 - DEBUG :     - Example Menu Item 1
2021-07-28 13:05:08,486 - DEBUG :     - Show last error
2021-07-28 13:05:08,486 - DEBUG :     - About PyXLL...
2021-07-28 13:05:08,486 - DEBUG :   - PyXLL example menu
2021-07-28 13:05:08,486 - DEBUG :     - Click me
2021-07-28 13:05:08,486 - DEBUG : Finished binding Python functions
2021-07-28 13:05:08,486 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 13:05:09,219 - DEBUG : pyxll._post_open complete.
2021-07-28 13:05:09,219 - DEBUG : PyXLL initialization complete.
2021-07-28 13:05:09,222 - DEBUG : Loading PyXLL COM Addin
2021-07-28 13:05:09,222 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 13:05:09,224 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 13:05:09,304 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 15:22:28,196 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 15:22:30,607 - ERROR : Traceback (most recent call last):
2021-07-28 15:22:30,608 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 15:22:30,608 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 15:22:30,609 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 83, in advanced_simulation_cell
2021-07-28 15:22:30,609 - ERROR :     cell_information = cell_data(control=control, cell_location=curr_cell_address, sheet_name=sheet_name)
2021-07-28 15:22:30,610 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 108, in cell_data
2021-07-28 15:22:30,610 - ERROR :     distrInfoPageName = xl.Worksheets(sheet_name).Range(id_location).Value
2021-07-28 15:22:30,610 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 15:22:30,611 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 15:22:30,611 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 15:24:28,991 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 15:26:55,987 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 15:26:55,989 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 15:26:55,989 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 15:26:55,989 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 15:26:55,989 - DEBUG : -------- PyXLL config --------
2021-07-28 15:26:55,989 - DEBUG : [LOG]
2021-07-28 15:26:55,989 - DEBUG : encoding = utf-8
2021-07-28 15:26:55,989 - DEBUG : file = pyxll.20210728.log
2021-07-28 15:26:55,989 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 15:26:55,989 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 15:26:55,989 - DEBUG : verbosity = debug
2021-07-28 15:26:55,989 - DEBUG : 
2021-07-28 15:26:55,989 - DEBUG : [PYTHON]
2021-07-28 15:26:55,989 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 15:26:55,989 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 15:26:55,989 - DEBUG : 
2021-07-28 15:26:55,989 - DEBUG : [PYXLL]
2021-07-28 15:26:55,989 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 15:26:55,989 - DEBUG : developer_mode = 1
2021-07-28 15:26:55,989 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 15:26:55,989 - DEBUG : modules = 
2021-07-28 15:26:55,989 - DEBUG :     misc
2021-07-28 15:26:55,989 - DEBUG :     worksheetfuncs
2021-07-28 15:26:55,989 - DEBUG :     menus
2021-07-28 15:26:55,989 - DEBUG :     callbacks
2021-07-28 15:26:55,989 - DEBUG :     custom_task_panes
2021-07-28 15:26:55,990 - DEBUG :     test
2021-07-28 15:26:55,990 - DEBUG :     ribbon_functions
2021-07-28 15:26:55,990 - DEBUG :     debugging
2021-07-28 15:26:55,990 - DEBUG :     meta_variables
2021-07-28 15:26:55,990 - DEBUG :     selectiontools
2021-07-28 15:26:55,990 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 15:26:55,990 - DEBUG : ------------------------------
2021-07-28 15:26:55,990 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 15:26:55,990 - DEBUG : Initializing PyXLL Python module.
2021-07-28 15:26:55,990 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 15:26:55,991 - DEBUG : PyXLL Python module initialized.
2021-07-28 15:26:55,995 - DEBUG : Functions will not be cancellable by default.
2021-07-28 15:26:56,000 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 15:26:56,003 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 15:26:56,085 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 15:26:56,086 - DEBUG : Reloading misc
2021-07-28 15:26:56,087 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 15:26:56,087 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 15:26:56,092 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 15:26:56,093 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 15:26:56,093 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 15:26:56,094 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 15:26:56,094 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 15:26:56,095 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 15:26:56,096 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 15:26:56,096 - DEBUG : Reloaded misc
2021-07-28 15:26:56,096 - DEBUG : Reloading worksheetfuncs
2021-07-28 15:26:56,096 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 15:26:56,096 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 15:26:56,100 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 15:26:56,100 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 15:26:56,101 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 15:26:56,101 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 15:26:56,102 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 15:26:56,103 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 15:26:56,103 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 15:26:56,104 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 15:26:56,105 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 15:26:56,106 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 15:26:56,106 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 15:26:56,106 - DEBUG : Reloaded worksheetfuncs
2021-07-28 15:26:56,107 - DEBUG : Reloading menus
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 15:26:56,109 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 15:26:56,109 - DEBUG : Reloaded menus
2021-07-28 15:26:56,109 - DEBUG : Reloading callbacks
2021-07-28 15:26:56,109 - DEBUG : Reloaded callbacks
2021-07-28 15:26:56,109 - DEBUG : Reloading custom_task_panes
2021-07-28 15:26:56,115 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 15:26:56,115 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 15:26:56,115 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 15:26:56,115 - DEBUG : Reloaded custom_task_panes
2021-07-28 15:26:56,115 - DEBUG : Reloading test
2021-07-28 15:26:56,115 - DEBUG : Reloaded test
2021-07-28 15:26:56,115 - DEBUG : Reloading meta_variables
2021-07-28 15:26:56,115 - DEBUG : Reloaded meta_variables
2021-07-28 15:26:56,115 - DEBUG : Reloading dependency error_functions
2021-07-28 15:26:56,115 - DEBUG : Reloaded dependency error_functions
2021-07-28 15:26:56,115 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 15:26:56,123 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 15:26:56,123 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 15:26:56,123 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 15:26:56,125 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 15:26:56,125 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 15:26:56,126 - DEBUG : Reloading dependency examples
2021-07-28 15:26:56,127 - DEBUG : Reloaded dependency examples
2021-07-28 15:26:56,127 - DEBUG : Reloading ribbon_functions
2021-07-28 15:26:56,131 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A07704FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A07709DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A0770A3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001A077138310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001A0770F2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001A07712AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001A0770D7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A07712F8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001A07712A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001A077112490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001A07710FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001A077106F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001A07705CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001A0771063A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 15:26:56,131 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 15:26:56,131 - DEBUG : Reloaded ribbon_functions
2021-07-28 15:26:56,131 - DEBUG : Reloading debugging
2021-07-28 15:26:56,131 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 15:26:56,131 - DEBUG : Reloaded debugging
2021-07-28 15:26:56,131 - DEBUG : Reloading selectiontools
2021-07-28 15:26:56,135 - DEBUG : Reloaded selectiontools
2021-07-28 15:26:56,195 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 15:26:56,222 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 15:26:56,265 - INFO : This product is licensed to 
2021-07-28 15:26:56,265 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 15:26:56,267 - DEBUG : Calling pyxll._post_open.
2021-07-28 15:26:56,268 - DEBUG : Binding Python functions to Excel
2021-07-28 15:26:56,269 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 15:26:56,269 - DEBUG :     - pyxll_version
2021-07-28 15:26:56,269 - DEBUG :     - python_version
2021-07-28 15:26:56,270 - DEBUG :     - win32api_is_installed
2021-07-28 15:26:56,270 - DEBUG :     - win32com_is_installed
2021-07-28 15:26:56,270 - DEBUG :     - numpy_is_installed
2021-07-28 15:26:56,271 - DEBUG :     - pyxll_logfile
2021-07-28 15:26:56,271 - DEBUG :     - get_formula
2021-07-28 15:26:56,271 - DEBUG :     - get_array_formula
2021-07-28 15:26:56,271 - DEBUG :     - get_last_error
2021-07-28 15:26:56,272 - DEBUG :     - basic_pyxll_function_1
2021-07-28 15:26:56,272 - DEBUG :     - basic_pyxll_function_2
2021-07-28 15:26:56,272 - DEBUG :     - basic_pyxll_function_3
2021-07-28 15:26:56,272 - DEBUG :     - var_pyxll_function_1
2021-07-28 15:26:56,272 - DEBUG :     - var_pyxll_function_2
2021-07-28 15:26:56,272 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 15:26:56,272 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 15:26:56,272 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 15:26:56,272 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 15:26:56,275 - DEBUG :     - xl_cell_example
2021-07-28 15:26:56,275 - DEBUG :     - recalc_on_open_test
2021-07-28 15:26:56,275 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 15:26:56,275 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 15:26:56,275 - DEBUG :     - one_cell_one_sim
2021-07-28 15:26:56,275 - DEBUG :     - one_row_one_sim
2021-07-28 15:26:56,287 - DEBUG : Adding menus to Excel:
2021-07-28 15:26:56,287 - DEBUG :   - PyXLL
2021-07-28 15:26:56,287 - DEBUG :     - Reload PyXLL
2021-07-28 15:26:56,287 - DEBUG :     - Another example menu item
2021-07-28 15:26:56,287 - DEBUG :     - More Examples
2021-07-28 15:26:56,287 - DEBUG :       - Click me
2021-07-28 15:26:56,287 - DEBUG :       - Unicode Test
2021-07-28 15:26:56,287 - DEBUG :     - Open log file
2021-07-28 15:26:56,287 - DEBUG :     - Attach To VS Code
2021-07-28 15:26:56,287 - DEBUG :     - Custom Task Panes
2021-07-28 15:26:56,287 - DEBUG :       - Qt
2021-07-28 15:26:56,287 - DEBUG :       - Tk
2021-07-28 15:26:56,287 - DEBUG :       - Wx
2021-07-28 15:26:56,287 - DEBUG :     - Example Menu Item 1
2021-07-28 15:26:56,287 - DEBUG :     - Show last error
2021-07-28 15:26:56,287 - DEBUG :     - About PyXLL...
2021-07-28 15:26:56,287 - DEBUG :   - PyXLL example menu
2021-07-28 15:26:56,287 - DEBUG :     - Click me
2021-07-28 15:26:56,299 - DEBUG : Finished binding Python functions
2021-07-28 15:26:56,299 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 15:26:57,438 - DEBUG : pyxll._post_open complete.
2021-07-28 15:26:57,438 - DEBUG : PyXLL initialization complete.
2021-07-28 15:26:59,880 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 15:27:03,049 - ERROR : Traceback (most recent call last):
2021-07-28 15:27:03,055 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 170, in advanced_simulation_cell_wrapper
2021-07-28 15:27:03,057 - ERROR :     #NEED TO LOOK INTO THIS - variable dict didn't seem to be losing values
2021-07-28 15:27:03,058 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 83, in advanced_simulation_cell
2021-07-28 15:27:03,061 - ERROR :     #the above turns $A$1 into A1, and $AZ$36 into AZ36 etc.
2021-07-28 15:27:03,062 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 108, in cell_data
2021-07-28 15:27:03,064 - ERROR :     distrInfoPageName = xl.Worksheets(sheet_name).Range(id_location).Value
2021-07-28 15:27:03,065 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 15:27:03,067 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 15:27:03,068 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 15:27:04,517 - DEBUG : Closing PyXLL Python module.
2021-07-28 15:27:04,517 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 15:27:04,517 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 15:27:04,517 - DEBUG : PyXLL Python module closed.
2021-07-28 15:27:09,507 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 15:27:09,507 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 15:27:09,507 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 15:27:09,507 - DEBUG : -------- PyXLL config --------
2021-07-28 15:27:09,507 - DEBUG : [LOG]
2021-07-28 15:27:09,508 - DEBUG : encoding = utf-8
2021-07-28 15:27:09,508 - DEBUG : file = pyxll.20210728.log
2021-07-28 15:27:09,508 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 15:27:09,508 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 15:27:09,508 - DEBUG : verbosity = debug
2021-07-28 15:27:09,508 - DEBUG : 
2021-07-28 15:27:09,508 - DEBUG : [PYTHON]
2021-07-28 15:27:09,508 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 15:27:09,508 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 15:27:09,508 - DEBUG : 
2021-07-28 15:27:09,508 - DEBUG : [PYXLL]
2021-07-28 15:27:09,508 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 15:27:09,508 - DEBUG : developer_mode = 1
2021-07-28 15:27:09,508 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 15:27:09,508 - DEBUG : modules = 
2021-07-28 15:27:09,508 - DEBUG :     misc
2021-07-28 15:27:09,508 - DEBUG :     worksheetfuncs
2021-07-28 15:27:09,508 - DEBUG :     menus
2021-07-28 15:27:09,508 - DEBUG :     callbacks
2021-07-28 15:27:09,508 - DEBUG :     custom_task_panes
2021-07-28 15:27:09,508 - DEBUG :     test
2021-07-28 15:27:09,508 - DEBUG :     ribbon_functions
2021-07-28 15:27:09,508 - DEBUG :     debugging
2021-07-28 15:27:09,508 - DEBUG :     meta_variables
2021-07-28 15:27:09,508 - DEBUG :     selectiontools
2021-07-28 15:27:09,508 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 15:27:09,508 - DEBUG : ------------------------------
2021-07-28 15:27:09,509 - DEBUG : Attempting to load python38.dll
2021-07-28 15:27:09,511 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 15:27:09,513 - DEBUG : Checking Py_IsInitialized...
2021-07-28 15:27:09,513 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 15:27:09,694 - DEBUG : Calling Py_Initialize...
2021-07-28 15:27:09,933 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 15:27:09,933 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 15:27:09,933 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 15:27:09,933 - DEBUG : Python is initialized.
2021-07-28 15:27:09,934 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 15:27:09,937 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 15:27:09,937 - DEBUG : Looking for module 'site'...
2021-07-28 15:27:09,966 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 15:27:09,966 - DEBUG : Importing pyxll module
2021-07-28 15:27:09,966 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 15:27:09,966 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 15:27:09,966 - DEBUG :   Detected Python3
2021-07-28 15:27:10,007 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 15:27:10,013 - DEBUG : pyxll module imported
2021-07-28 15:27:10,013 - DEBUG : Initializing PyXLL Python module.
2021-07-28 15:27:10,013 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 15:27:10,014 - DEBUG : PyXLL Python module initialized.
2021-07-28 15:27:10,015 - DEBUG : Functions will not be cancellable by default.
2021-07-28 15:27:10,016 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 15:27:10,261 - DEBUG : Importing misc
2021-07-28 15:27:10,262 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 15:27:10,262 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 15:27:10,262 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 15:27:10,262 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 15:27:10,263 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 15:27:10,263 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 15:27:10,263 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 15:27:10,264 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 15:27:10,264 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 15:27:10,264 - DEBUG : Imported misc
2021-07-28 15:27:10,264 - DEBUG : Importing worksheetfuncs
2021-07-28 15:27:10,265 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 15:27:10,265 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 15:27:10,266 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 15:27:10,266 - DEBUG : Imported worksheetfuncs
2021-07-28 15:27:10,266 - DEBUG : Importing menus
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 15:27:10,273 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 15:27:10,273 - DEBUG : Imported menus
2021-07-28 15:27:10,273 - DEBUG : Importing callbacks
2021-07-28 15:27:10,274 - DEBUG : Imported callbacks
2021-07-28 15:27:10,275 - DEBUG : Importing custom_task_panes
2021-07-28 15:27:10,275 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 15:27:10,275 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 15:27:10,275 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 15:27:10,275 - DEBUG : Imported custom_task_panes
2021-07-28 15:27:10,275 - DEBUG : Importing test
2021-07-28 15:27:10,275 - DEBUG : Imported test
2021-07-28 15:27:10,277 - DEBUG : Importing ribbon_functions
2021-07-28 15:27:11,483 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 15:27:11,530 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 15:27:11,537 - DEBUG : matplotlib version 3.4.2
2021-07-28 15:27:11,537 - DEBUG : interactive is False
2021-07-28 15:27:11,537 - DEBUG : platform is win32
2021-07-28 15:27:11,538 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_af0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_af0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 15:27:11,653 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 15:27:11,668 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 15:27:11,999 - DEBUG : Loaded backend agg version unknown.
2021-07-28 15:27:12,001 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000020F81730FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020F8177DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020F8177EB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020F81832310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020F817D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020F8182AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020F817B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020F8182E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020F8182A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020F81817490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020F817EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020F817E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000020F8173BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020F817E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000020F81730FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020F8177DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020F8177EB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020F81832310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020F817D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020F8182AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020F817B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020F8182E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020F8182A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020F81817490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020F817EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020F817E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000020F8173BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020F817E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 15:27:12,001 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 15:27:12,001 - DEBUG : Imported ribbon_functions
2021-07-28 15:27:12,001 - DEBUG : Importing debugging
2021-07-28 15:27:12,567 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 15:27:12,567 - DEBUG : Imported debugging
2021-07-28 15:27:12,568 - DEBUG : Importing meta_variables
2021-07-28 15:27:12,568 - DEBUG : Imported meta_variables
2021-07-28 15:27:12,568 - DEBUG : Importing selectiontools
2021-07-28 15:27:12,570 - DEBUG : Imported selectiontools
2021-07-28 15:27:12,642 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 15:27:12,657 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 15:27:12,683 - INFO : This product is licensed to 
2021-07-28 15:27:12,683 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 15:27:12,685 - DEBUG : Calling pyxll._post_open.
2021-07-28 15:27:12,685 - DEBUG : Binding Python functions to Excel
2021-07-28 15:27:12,685 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 15:27:12,685 - DEBUG :     - pyxll_version
2021-07-28 15:27:12,686 - DEBUG :     - python_version
2021-07-28 15:27:12,686 - DEBUG :     - win32api_is_installed
2021-07-28 15:27:12,686 - DEBUG :     - win32com_is_installed
2021-07-28 15:27:12,686 - DEBUG :     - numpy_is_installed
2021-07-28 15:27:12,686 - DEBUG :     - pyxll_logfile
2021-07-28 15:27:12,686 - DEBUG :     - get_formula
2021-07-28 15:27:12,686 - DEBUG :     - get_array_formula
2021-07-28 15:27:12,686 - DEBUG :     - get_last_error
2021-07-28 15:27:12,686 - DEBUG :     - basic_pyxll_function_1
2021-07-28 15:27:12,687 - DEBUG :     - basic_pyxll_function_2
2021-07-28 15:27:12,687 - DEBUG :     - basic_pyxll_function_3
2021-07-28 15:27:12,687 - DEBUG :     - var_pyxll_function_1
2021-07-28 15:27:12,687 - DEBUG :     - var_pyxll_function_2
2021-07-28 15:27:12,687 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 15:27:12,687 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 15:27:12,687 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 15:27:12,687 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 15:27:12,687 - DEBUG :     - xl_cell_example
2021-07-28 15:27:12,687 - DEBUG :     - recalc_on_open_test
2021-07-28 15:27:12,687 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 15:27:12,687 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 15:27:12,688 - DEBUG :     - one_cell_one_sim
2021-07-28 15:27:12,688 - DEBUG :     - one_row_one_sim
2021-07-28 15:27:12,705 - DEBUG : Adding menus to Excel:
2021-07-28 15:27:12,705 - DEBUG :   - PyXLL
2021-07-28 15:27:12,705 - DEBUG :     - Reload PyXLL
2021-07-28 15:27:12,705 - DEBUG :     - Another example menu item
2021-07-28 15:27:12,705 - DEBUG :     - More Examples
2021-07-28 15:27:12,705 - DEBUG :       - Click me
2021-07-28 15:27:12,705 - DEBUG :       - Unicode Test
2021-07-28 15:27:12,705 - DEBUG :     - Open log file
2021-07-28 15:27:12,705 - DEBUG :     - Attach To VS Code
2021-07-28 15:27:12,705 - DEBUG :     - Custom Task Panes
2021-07-28 15:27:12,705 - DEBUG :       - Qt
2021-07-28 15:27:12,705 - DEBUG :       - Tk
2021-07-28 15:27:12,705 - DEBUG :       - Wx
2021-07-28 15:27:12,705 - DEBUG :     - Example Menu Item 1
2021-07-28 15:27:12,705 - DEBUG :     - Show last error
2021-07-28 15:27:12,705 - DEBUG :     - About PyXLL...
2021-07-28 15:27:12,705 - DEBUG :   - PyXLL example menu
2021-07-28 15:27:12,705 - DEBUG :     - Click me
2021-07-28 15:27:12,750 - DEBUG : Finished binding Python functions
2021-07-28 15:27:12,750 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 15:27:12,750 - DEBUG : pyxll._post_open complete.
2021-07-28 15:27:12,755 - DEBUG : PyXLL initialization complete.
2021-07-28 15:27:13,016 - DEBUG : Initializing PyXLL Python module.
2021-07-28 15:27:13,016 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 15:27:13,016 - DEBUG : PyXLL Python module initialized.
2021-07-28 15:27:13,018 - DEBUG : Functions will not be cancellable by default.
2021-07-28 15:27:13,018 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 15:27:13,019 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 15:27:13,075 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 15:27:13,075 - DEBUG : Reloading misc
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 15:27:13,075 - DEBUG : Reloaded misc
2021-07-28 15:27:13,075 - DEBUG : Reloading worksheetfuncs
2021-07-28 15:27:13,075 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 15:27:13,085 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 15:27:13,085 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 15:27:13,086 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 15:27:13,086 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 15:27:13,086 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 15:27:13,086 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 15:27:13,087 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 15:27:13,087 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 15:27:13,087 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 15:27:13,088 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 15:27:13,089 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 15:27:13,089 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 15:27:13,089 - DEBUG : Reloaded worksheetfuncs
2021-07-28 15:27:13,089 - DEBUG : Reloading menus
2021-07-28 15:27:13,090 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 15:27:13,090 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 15:27:13,091 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 15:27:13,091 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 15:27:13,091 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 15:27:13,091 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 15:27:13,091 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 15:27:13,091 - DEBUG : Reloaded menus
2021-07-28 15:27:13,092 - DEBUG : Reloading callbacks
2021-07-28 15:27:13,093 - DEBUG : Reloaded callbacks
2021-07-28 15:27:13,093 - DEBUG : Reloading custom_task_panes
2021-07-28 15:27:13,095 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 15:27:13,095 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 15:27:13,095 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 15:27:13,095 - DEBUG : Reloaded custom_task_panes
2021-07-28 15:27:13,095 - DEBUG : Reloading test
2021-07-28 15:27:13,095 - DEBUG : Reloaded test
2021-07-28 15:27:13,095 - DEBUG : Reloading meta_variables
2021-07-28 15:27:13,095 - DEBUG : Reloaded meta_variables
2021-07-28 15:27:13,095 - DEBUG : Reloading dependency error_functions
2021-07-28 15:27:13,095 - DEBUG : Reloaded dependency error_functions
2021-07-28 15:27:13,095 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 15:27:13,095 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 15:27:13,095 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 15:27:13,095 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 15:27:13,095 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 15:27:13,106 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 15:27:13,106 - DEBUG : Reloading dependency examples
2021-07-28 15:27:13,108 - DEBUG : Reloaded dependency examples
2021-07-28 15:27:13,108 - DEBUG : Reloading ribbon_functions
2021-07-28 15:27:13,110 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000020F81730FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020F8177DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020F8177EB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020F81832310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020F817D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020F8182AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020F817B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020F8182E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020F8182A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020F81817490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020F817EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020F817E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000020F8173BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020F817E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000020F81730FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020F8177DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020F8177EB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020F81832310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020F817D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020F8182AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020F817B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020F8182E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020F8182A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020F81817490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020F817EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020F817E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000020F8173BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020F817E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 15:27:13,110 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 15:27:13,110 - DEBUG : Reloaded ribbon_functions
2021-07-28 15:27:13,112 - DEBUG : Reloading debugging
2021-07-28 15:27:13,113 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 15:27:13,113 - DEBUG : Reloaded debugging
2021-07-28 15:27:13,113 - DEBUG : Reloading selectiontools
2021-07-28 15:27:13,115 - DEBUG : Reloaded selectiontools
2021-07-28 15:27:13,202 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 15:27:13,207 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 15:27:13,256 - INFO : This product is licensed to 
2021-07-28 15:27:13,256 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 15:27:13,267 - DEBUG : Calling pyxll._post_open.
2021-07-28 15:27:13,267 - DEBUG : Binding Python functions to Excel
2021-07-28 15:27:13,267 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 15:27:13,267 - DEBUG :     - pyxll_version
2021-07-28 15:27:13,268 - DEBUG :     - python_version
2021-07-28 15:27:13,268 - DEBUG :     - win32api_is_installed
2021-07-28 15:27:13,268 - DEBUG :     - win32com_is_installed
2021-07-28 15:27:13,268 - DEBUG :     - numpy_is_installed
2021-07-28 15:27:13,268 - DEBUG :     - pyxll_logfile
2021-07-28 15:27:13,268 - DEBUG :     - get_formula
2021-07-28 15:27:13,268 - DEBUG :     - get_array_formula
2021-07-28 15:27:13,268 - DEBUG :     - get_last_error
2021-07-28 15:27:13,268 - DEBUG :     - basic_pyxll_function_1
2021-07-28 15:27:13,268 - DEBUG :     - basic_pyxll_function_2
2021-07-28 15:27:13,268 - DEBUG :     - basic_pyxll_function_3
2021-07-28 15:27:13,268 - DEBUG :     - var_pyxll_function_1
2021-07-28 15:27:13,268 - DEBUG :     - var_pyxll_function_2
2021-07-28 15:27:13,268 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 15:27:13,268 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 15:27:13,268 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 15:27:13,268 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 15:27:13,268 - DEBUG :     - xl_cell_example
2021-07-28 15:27:13,268 - DEBUG :     - recalc_on_open_test
2021-07-28 15:27:13,268 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 15:27:13,268 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 15:27:13,268 - DEBUG :     - one_cell_one_sim
2021-07-28 15:27:13,268 - DEBUG :     - one_row_one_sim
2021-07-28 15:27:13,282 - DEBUG : Adding menus to Excel:
2021-07-28 15:27:13,282 - DEBUG :   - PyXLL
2021-07-28 15:27:13,282 - DEBUG :     - Reload PyXLL
2021-07-28 15:27:13,282 - DEBUG :     - Another example menu item
2021-07-28 15:27:13,282 - DEBUG :     - More Examples
2021-07-28 15:27:13,282 - DEBUG :       - Click me
2021-07-28 15:27:13,282 - DEBUG :       - Unicode Test
2021-07-28 15:27:13,282 - DEBUG :     - Open log file
2021-07-28 15:27:13,282 - DEBUG :     - Attach To VS Code
2021-07-28 15:27:13,282 - DEBUG :     - Custom Task Panes
2021-07-28 15:27:13,282 - DEBUG :       - Qt
2021-07-28 15:27:13,282 - DEBUG :       - Tk
2021-07-28 15:27:13,282 - DEBUG :       - Wx
2021-07-28 15:27:13,282 - DEBUG :     - Example Menu Item 1
2021-07-28 15:27:13,282 - DEBUG :     - Show last error
2021-07-28 15:27:13,282 - DEBUG :     - About PyXLL...
2021-07-28 15:27:13,282 - DEBUG :   - PyXLL example menu
2021-07-28 15:27:13,282 - DEBUG :     - Click me
2021-07-28 15:27:13,292 - DEBUG : Finished binding Python functions
2021-07-28 15:27:13,293 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 15:27:14,591 - DEBUG : pyxll._post_open complete.
2021-07-28 15:27:14,595 - DEBUG : PyXLL initialization complete.
2021-07-28 15:27:17,161 - DEBUG : Loading PyXLL COM Addin
2021-07-28 15:27:17,161 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 15:27:17,185 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 15:27:17,244 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 15:27:17,252 - DEBUG : Loading PyXLL COM Addin
2021-07-28 15:27:17,252 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 15:27:17,259 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 15:27:17,268 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 15:28:12,176 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 15:28:15,869 - ERROR : Traceback (most recent call last):
2021-07-28 15:28:15,869 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 179, in advanced_simulation_cell_wrapper
2021-07-28 15:28:15,870 - ERROR :     hist_data = advanced_simulation_cell(control=control, variable_dict={}, first_call=True)
2021-07-28 15:28:15,871 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 92, in advanced_simulation_cell
2021-07-28 15:28:15,871 - ERROR :     cell_information = cell_data(control=control, cell_location=curr_cell_address, sheet_name=sheet_name)
2021-07-28 15:28:15,871 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\meta_variables.py", line 108, in cell_data
2021-07-28 15:28:15,871 - ERROR :     distrInfoPageName = xl.Worksheets(sheet_name).Range(id_location).Value
2021-07-28 15:28:15,871 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 15:28:15,873 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 15:28:15,873 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 19:01:11,967 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 19:01:24,480 - DEBUG : Closing PyXLL Python module.
2021-07-28 19:01:24,482 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 19:01:24,482 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 19:01:24,482 - DEBUG : PyXLL Python module closed.
2021-07-28 19:01:31,390 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:01:31,390 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:01:31,390 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:01:31,390 - DEBUG : -------- PyXLL config --------
2021-07-28 19:01:31,390 - DEBUG : [LOG]
2021-07-28 19:01:31,390 - DEBUG : encoding = utf-8
2021-07-28 19:01:31,390 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:01:31,390 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:01:31,390 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:01:31,390 - DEBUG : verbosity = debug
2021-07-28 19:01:31,390 - DEBUG : 
2021-07-28 19:01:31,391 - DEBUG : [PYTHON]
2021-07-28 19:01:31,391 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:01:31,391 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:01:31,391 - DEBUG : 
2021-07-28 19:01:31,391 - DEBUG : [PYXLL]
2021-07-28 19:01:31,391 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:01:31,391 - DEBUG : developer_mode = 1
2021-07-28 19:01:31,391 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:01:31,391 - DEBUG : modules = 
2021-07-28 19:01:31,391 - DEBUG :     misc
2021-07-28 19:01:31,391 - DEBUG :     worksheetfuncs
2021-07-28 19:01:31,391 - DEBUG :     menus
2021-07-28 19:01:31,391 - DEBUG :     callbacks
2021-07-28 19:01:31,391 - DEBUG :     custom_task_panes
2021-07-28 19:01:31,391 - DEBUG :     test
2021-07-28 19:01:31,391 - DEBUG :     ribbon_functions
2021-07-28 19:01:31,391 - DEBUG :     debugging
2021-07-28 19:01:31,391 - DEBUG :     meta_variables
2021-07-28 19:01:31,391 - DEBUG :     selectiontools
2021-07-28 19:01:31,391 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:01:31,391 - DEBUG : ------------------------------
2021-07-28 19:01:31,393 - DEBUG : Attempting to load python38.dll
2021-07-28 19:01:31,396 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:01:31,397 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:01:31,398 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:01:31,617 - DEBUG : Calling Py_Initialize...
2021-07-28 19:01:31,793 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:01:31,793 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:01:31,793 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:01:31,793 - DEBUG : Python is initialized.
2021-07-28 19:01:31,794 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:01:31,797 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:01:31,797 - DEBUG : Looking for module 'site'...
2021-07-28 19:01:31,830 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:01:31,830 - DEBUG : Importing pyxll module
2021-07-28 19:01:31,830 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:01:31,830 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:01:31,830 - DEBUG :   Detected Python3
2021-07-28 19:01:31,875 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:01:31,879 - DEBUG : pyxll module imported
2021-07-28 19:01:31,880 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:01:31,880 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:01:31,880 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:01:31,882 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:01:31,882 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:01:32,112 - DEBUG : Importing misc
2021-07-28 19:01:32,114 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:01:32,114 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:01:32,114 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:01:32,114 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:01:32,114 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:01:32,114 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:01:32,115 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:01:32,115 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:01:32,115 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:01:32,116 - DEBUG : Imported misc
2021-07-28 19:01:32,116 - DEBUG : Importing worksheetfuncs
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:01:32,117 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:01:32,118 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:01:32,118 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:01:32,118 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:01:32,118 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:01:32,118 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:01:32,119 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:01:32,119 - DEBUG : Imported worksheetfuncs
2021-07-28 19:01:32,119 - DEBUG : Importing menus
2021-07-28 19:01:32,124 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:01:32,124 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:01:32,124 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:01:32,125 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:01:32,125 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:01:32,125 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:01:32,125 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:01:32,125 - DEBUG : Imported menus
2021-07-28 19:01:32,125 - DEBUG : Importing callbacks
2021-07-28 19:01:32,126 - DEBUG : Imported callbacks
2021-07-28 19:01:32,126 - DEBUG : Importing custom_task_panes
2021-07-28 19:01:32,127 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:01:32,127 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:01:32,127 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:01:32,128 - DEBUG : Imported custom_task_panes
2021-07-28 19:01:32,128 - DEBUG : Importing test
2021-07-28 19:01:32,128 - DEBUG : Imported test
2021-07-28 19:01:32,129 - DEBUG : Importing ribbon_functions
2021-07-28 19:01:33,407 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:01:33,454 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:01:33,457 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:01:33,457 - DEBUG : interactive is False
2021-07-28 19:01:33,457 - DEBUG : platform is win32
2021-07-28 19:01:33,457 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_6a0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_6a0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:01:33,523 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:01:33,541 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:01:33,709 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:01:33,710 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F2BE390FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F2BE3DDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F2BE3E6B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F2BE472310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F2BE428580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F2BE46AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F2BE418070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F2BE46E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F2BE46A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F2BE45C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F2BE449CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F2BE445F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F2BE39CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F2BE4453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F2BE390FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F2BE3DDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F2BE3E6B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F2BE472310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F2BE428580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F2BE46AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F2BE418070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F2BE46E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F2BE46A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F2BE45C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F2BE449CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F2BE445F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F2BE39CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F2BE4453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:01:33,710 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:01:33,710 - DEBUG : Imported ribbon_functions
2021-07-28 19:01:33,710 - DEBUG : Importing debugging
2021-07-28 19:01:34,180 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:01:34,180 - DEBUG : Imported debugging
2021-07-28 19:01:34,180 - DEBUG : Importing meta_variables
2021-07-28 19:01:34,180 - DEBUG : Imported meta_variables
2021-07-28 19:01:34,180 - DEBUG : Importing selectiontools
2021-07-28 19:01:34,180 - DEBUG : Imported selectiontools
2021-07-28 19:01:34,222 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:01:34,222 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:01:34,243 - INFO : This product is licensed to 
2021-07-28 19:01:34,243 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:01:34,245 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:01:34,245 - DEBUG : Binding Python functions to Excel
2021-07-28 19:01:34,245 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:01:34,246 - DEBUG :     - pyxll_version
2021-07-28 19:01:34,246 - DEBUG :     - python_version
2021-07-28 19:01:34,246 - DEBUG :     - win32api_is_installed
2021-07-28 19:01:34,246 - DEBUG :     - win32com_is_installed
2021-07-28 19:01:34,246 - DEBUG :     - numpy_is_installed
2021-07-28 19:01:34,246 - DEBUG :     - pyxll_logfile
2021-07-28 19:01:34,246 - DEBUG :     - get_formula
2021-07-28 19:01:34,246 - DEBUG :     - get_array_formula
2021-07-28 19:01:34,246 - DEBUG :     - get_last_error
2021-07-28 19:01:34,246 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:01:34,246 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:01:34,246 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:01:34,246 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:01:34,246 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:01:34,246 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:01:34,246 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:01:34,246 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:01:34,246 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:01:34,246 - DEBUG :     - xl_cell_example
2021-07-28 19:01:34,246 - DEBUG :     - recalc_on_open_test
2021-07-28 19:01:34,246 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:01:34,246 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:01:34,246 - DEBUG :     - one_cell_one_sim
2021-07-28 19:01:34,246 - DEBUG :     - one_row_one_sim
2021-07-28 19:01:34,259 - DEBUG : Adding menus to Excel:
2021-07-28 19:01:34,259 - DEBUG :   - PyXLL
2021-07-28 19:01:34,259 - DEBUG :     - Reload PyXLL
2021-07-28 19:01:34,259 - DEBUG :     - Another example menu item
2021-07-28 19:01:34,259 - DEBUG :     - More Examples
2021-07-28 19:01:34,259 - DEBUG :       - Click me
2021-07-28 19:01:34,259 - DEBUG :       - Unicode Test
2021-07-28 19:01:34,259 - DEBUG :     - Open log file
2021-07-28 19:01:34,259 - DEBUG :     - Attach To VS Code
2021-07-28 19:01:34,259 - DEBUG :     - Custom Task Panes
2021-07-28 19:01:34,259 - DEBUG :       - Qt
2021-07-28 19:01:34,259 - DEBUG :       - Tk
2021-07-28 19:01:34,259 - DEBUG :       - Wx
2021-07-28 19:01:34,259 - DEBUG :     - Example Menu Item 1
2021-07-28 19:01:34,259 - DEBUG :     - Show last error
2021-07-28 19:01:34,259 - DEBUG :     - About PyXLL...
2021-07-28 19:01:34,259 - DEBUG :   - PyXLL example menu
2021-07-28 19:01:34,259 - DEBUG :     - Click me
2021-07-28 19:01:34,290 - DEBUG : Finished binding Python functions
2021-07-28 19:01:34,290 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:01:34,290 - DEBUG : pyxll._post_open complete.
2021-07-28 19:01:34,300 - DEBUG : PyXLL initialization complete.
2021-07-28 19:01:34,613 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:01:34,613 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:01:34,614 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:01:34,615 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:01:34,616 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:01:34,617 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:01:34,695 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:01:34,696 - DEBUG : Reloading misc
2021-07-28 19:01:34,697 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:01:34,697 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:01:34,697 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:01:34,697 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:01:34,698 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:01:34,699 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:01:34,699 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:01:34,699 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:01:34,700 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:01:34,700 - DEBUG : Reloaded misc
2021-07-28 19:01:34,700 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:01:34,701 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:01:34,701 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:01:34,702 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:01:34,702 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:01:34,702 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:01:34,703 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:01:34,703 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:01:34,704 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:01:34,704 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:01:34,705 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:01:34,705 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:01:34,705 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:01:34,705 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:01:34,705 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:01:34,706 - DEBUG : Reloading menus
2021-07-28 19:01:34,707 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:01:34,707 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:01:34,707 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:01:34,707 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:01:34,707 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:01:34,708 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:01:34,708 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:01:34,708 - DEBUG : Reloaded menus
2021-07-28 19:01:34,709 - DEBUG : Reloading callbacks
2021-07-28 19:01:34,710 - DEBUG : Reloaded callbacks
2021-07-28 19:01:34,710 - DEBUG : Reloading custom_task_panes
2021-07-28 19:01:34,712 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:01:34,712 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:01:34,712 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:01:34,712 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:01:34,713 - DEBUG : Reloading test
2021-07-28 19:01:34,714 - DEBUG : Reloaded test
2021-07-28 19:01:34,714 - DEBUG : Reloading meta_variables
2021-07-28 19:01:34,716 - DEBUG : Reloaded meta_variables
2021-07-28 19:01:34,717 - DEBUG : Reloading dependency error_functions
2021-07-28 19:01:34,718 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:01:34,718 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:01:34,719 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:01:34,719 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:01:34,721 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:01:34,721 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:01:34,722 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:01:34,722 - DEBUG : Reloading dependency examples
2021-07-28 19:01:34,724 - DEBUG : Reloaded dependency examples
2021-07-28 19:01:34,724 - DEBUG : Reloading ribbon_functions
2021-07-28 19:01:34,726 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F2BE390FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F2BE3DDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F2BE3E6B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F2BE472310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F2BE428580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F2BE46AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F2BE418070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F2BE46E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F2BE46A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F2BE45C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F2BE449CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F2BE445F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F2BE39CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F2BE4453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F2BE390FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F2BE3DDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F2BE3E6B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F2BE472310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F2BE428580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F2BE46AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F2BE418070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F2BE46E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F2BE46A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F2BE45C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F2BE449CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F2BE445F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F2BE39CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F2BE4453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:01:34,727 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:01:34,727 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:01:34,727 - DEBUG : Reloading debugging
2021-07-28 19:01:34,728 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:01:34,728 - DEBUG : Reloaded debugging
2021-07-28 19:01:34,728 - DEBUG : Reloading selectiontools
2021-07-28 19:01:34,730 - DEBUG : Reloaded selectiontools
2021-07-28 19:01:34,797 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:01:34,803 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:01:34,831 - INFO : This product is licensed to 
2021-07-28 19:01:34,831 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:01:34,834 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:01:34,834 - DEBUG : Binding Python functions to Excel
2021-07-28 19:01:34,834 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:01:34,835 - DEBUG :     - pyxll_version
2021-07-28 19:01:34,835 - DEBUG :     - python_version
2021-07-28 19:01:34,835 - DEBUG :     - win32api_is_installed
2021-07-28 19:01:34,835 - DEBUG :     - win32com_is_installed
2021-07-28 19:01:34,835 - DEBUG :     - numpy_is_installed
2021-07-28 19:01:34,835 - DEBUG :     - pyxll_logfile
2021-07-28 19:01:34,835 - DEBUG :     - get_formula
2021-07-28 19:01:34,835 - DEBUG :     - get_array_formula
2021-07-28 19:01:34,835 - DEBUG :     - get_last_error
2021-07-28 19:01:34,836 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:01:34,836 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:01:34,836 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:01:34,836 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:01:34,836 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:01:34,836 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:01:34,836 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:01:34,836 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:01:34,836 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:01:34,836 - DEBUG :     - xl_cell_example
2021-07-28 19:01:34,837 - DEBUG :     - recalc_on_open_test
2021-07-28 19:01:34,837 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:01:34,837 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:01:34,837 - DEBUG :     - one_cell_one_sim
2021-07-28 19:01:34,837 - DEBUG :     - one_row_one_sim
2021-07-28 19:01:34,841 - DEBUG : Adding menus to Excel:
2021-07-28 19:01:34,842 - DEBUG :   - PyXLL
2021-07-28 19:01:34,842 - DEBUG :     - Reload PyXLL
2021-07-28 19:01:34,842 - DEBUG :     - Another example menu item
2021-07-28 19:01:34,842 - DEBUG :     - More Examples
2021-07-28 19:01:34,842 - DEBUG :       - Click me
2021-07-28 19:01:34,842 - DEBUG :       - Unicode Test
2021-07-28 19:01:34,842 - DEBUG :     - Open log file
2021-07-28 19:01:34,842 - DEBUG :     - Attach To VS Code
2021-07-28 19:01:34,842 - DEBUG :     - Custom Task Panes
2021-07-28 19:01:34,842 - DEBUG :       - Qt
2021-07-28 19:01:34,842 - DEBUG :       - Tk
2021-07-28 19:01:34,842 - DEBUG :       - Wx
2021-07-28 19:01:34,842 - DEBUG :     - Example Menu Item 1
2021-07-28 19:01:34,842 - DEBUG :     - Show last error
2021-07-28 19:01:34,842 - DEBUG :     - About PyXLL...
2021-07-28 19:01:34,842 - DEBUG :   - PyXLL example menu
2021-07-28 19:01:34,842 - DEBUG :     - Click me
2021-07-28 19:01:34,848 - DEBUG : Finished binding Python functions
2021-07-28 19:01:34,848 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:01:40,671 - DEBUG : pyxll._post_open complete.
2021-07-28 19:01:40,681 - DEBUG : PyXLL initialization complete.
2021-07-28 19:01:47,439 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:01:47,439 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:01:47,440 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:01:47,441 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:01:47,442 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:01:47,442 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:01:47,502 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:01:47,502 - DEBUG : Reloading misc
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:01:47,502 - DEBUG : Reloaded misc
2021-07-28 19:01:47,502 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:01:47,502 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:01:47,515 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:01:47,515 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:01:47,516 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:01:47,516 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:01:47,516 - DEBUG : Reloading menus
2021-07-28 19:01:47,516 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:01:47,523 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:01:47,523 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:01:47,523 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:01:47,523 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:01:47,523 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:01:47,524 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:01:47,524 - DEBUG : Reloaded menus
2021-07-28 19:01:47,524 - DEBUG : Reloading callbacks
2021-07-28 19:01:47,524 - DEBUG : Reloaded callbacks
2021-07-28 19:01:47,524 - DEBUG : Reloading custom_task_panes
2021-07-28 19:01:47,524 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:01:47,524 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:01:47,524 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:01:47,524 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:01:47,524 - DEBUG : Reloading test
2021-07-28 19:01:47,524 - DEBUG : Reloaded test
2021-07-28 19:01:47,531 - DEBUG : Reloading meta_variables
2021-07-28 19:01:47,533 - DEBUG : Reloaded meta_variables
2021-07-28 19:01:47,533 - DEBUG : Reloading dependency error_functions
2021-07-28 19:01:47,535 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:01:47,535 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:01:47,538 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:01:47,538 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:01:47,538 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:01:47,540 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:01:47,541 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:01:47,541 - DEBUG : Reloading dependency examples
2021-07-28 19:01:47,541 - DEBUG : Reloaded dependency examples
2021-07-28 19:01:47,541 - DEBUG : Reloading ribbon_functions
2021-07-28 19:01:47,547 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F2BE390FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F2BE3DDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F2BE3E6B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F2BE472310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F2BE428580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F2BE46AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F2BE418070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F2BE46E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F2BE46A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F2BE45C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F2BE449CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F2BE445F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F2BE39CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F2BE4453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F2BE390FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F2BE3DDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F2BE3E6B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F2BE472310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F2BE428580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F2BE46AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F2BE418070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F2BE46E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F2BE46A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F2BE45C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F2BE449CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F2BE445F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F2BE39CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F2BE4453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:01:47,548 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:01:47,548 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:01:47,548 - DEBUG : Reloading debugging
2021-07-28 19:01:47,549 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:01:47,549 - DEBUG : Reloaded debugging
2021-07-28 19:01:47,549 - DEBUG : Reloading selectiontools
2021-07-28 19:01:47,549 - DEBUG : Reloaded selectiontools
2021-07-28 19:01:47,652 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:01:47,652 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:01:47,702 - INFO : This product is licensed to 
2021-07-28 19:01:47,702 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:01:47,705 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:01:47,705 - DEBUG : Binding Python functions to Excel
2021-07-28 19:01:47,705 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:01:47,705 - DEBUG :     - pyxll_version
2021-07-28 19:01:47,705 - DEBUG :     - python_version
2021-07-28 19:01:47,705 - DEBUG :     - win32api_is_installed
2021-07-28 19:01:47,705 - DEBUG :     - win32com_is_installed
2021-07-28 19:01:47,706 - DEBUG :     - numpy_is_installed
2021-07-28 19:01:47,706 - DEBUG :     - pyxll_logfile
2021-07-28 19:01:47,706 - DEBUG :     - get_formula
2021-07-28 19:01:47,706 - DEBUG :     - get_array_formula
2021-07-28 19:01:47,706 - DEBUG :     - get_last_error
2021-07-28 19:01:47,706 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:01:47,706 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:01:47,706 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:01:47,706 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:01:47,706 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:01:47,706 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:01:47,706 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:01:47,706 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:01:47,706 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:01:47,706 - DEBUG :     - xl_cell_example
2021-07-28 19:01:47,706 - DEBUG :     - recalc_on_open_test
2021-07-28 19:01:47,706 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:01:47,706 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:01:47,707 - DEBUG :     - one_cell_one_sim
2021-07-28 19:01:47,707 - DEBUG :     - one_row_one_sim
2021-07-28 19:01:47,710 - DEBUG : Adding menus to Excel:
2021-07-28 19:01:47,710 - DEBUG :   - PyXLL
2021-07-28 19:01:47,710 - DEBUG :     - Reload PyXLL
2021-07-28 19:01:47,712 - DEBUG :     - Another example menu item
2021-07-28 19:01:47,712 - DEBUG :     - More Examples
2021-07-28 19:01:47,712 - DEBUG :       - Click me
2021-07-28 19:01:47,712 - DEBUG :       - Unicode Test
2021-07-28 19:01:47,712 - DEBUG :     - Open log file
2021-07-28 19:01:47,712 - DEBUG :     - Attach To VS Code
2021-07-28 19:01:47,712 - DEBUG :     - Custom Task Panes
2021-07-28 19:01:47,712 - DEBUG :       - Qt
2021-07-28 19:01:47,712 - DEBUG :       - Tk
2021-07-28 19:01:47,712 - DEBUG :       - Wx
2021-07-28 19:01:47,712 - DEBUG :     - Example Menu Item 1
2021-07-28 19:01:47,712 - DEBUG :     - Show last error
2021-07-28 19:01:47,712 - DEBUG :     - About PyXLL...
2021-07-28 19:01:47,712 - DEBUG :   - PyXLL example menu
2021-07-28 19:01:47,712 - DEBUG :     - Click me
2021-07-28 19:01:47,713 - DEBUG : Finished binding Python functions
2021-07-28 19:01:47,713 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:01:48,810 - DEBUG : pyxll._post_open complete.
2021-07-28 19:01:48,813 - DEBUG : PyXLL initialization complete.
2021-07-28 19:01:54,043 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-28 19:01:55,586 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:01:55,586 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:01:55,606 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:01:55,668 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:01:55,677 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:01:55,678 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:01:55,684 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:01:55,696 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:01:55,703 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:01:55,703 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:01:55,709 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:01:55,719 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:03:43,712 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,715 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,718 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,719 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,719 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,719 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,719 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,719 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,720 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,720 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,720 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,720 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 19:03:43,720 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,721 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,721 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,721 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,721 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,722 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,729 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,731 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,731 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,731 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,731 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,731 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,731 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,732 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,739 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,741 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:03:43,742 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,749 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,750 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,750 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,750 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,750 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,750 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 19:03:43,751 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,751 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,751 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,751 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,751 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,752 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,760 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,760 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,760 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:03:43,760 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,760 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,761 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,761 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 19:03:43,761 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,761 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,761 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,762 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,762 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,762 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,762 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,762 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,763 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,763 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,763 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,763 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,763 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,763 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,764 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,764 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,764 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,764 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,764 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,765 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,765 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,765 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,765 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,765 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,766 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,770 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,772 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,772 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,773 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,773 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,773 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,773 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,773 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,773 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,774 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,780 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,780 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,780 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,780 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,780 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,780 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,781 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,781 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:03:43,781 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,781 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,781 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,782 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,783 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,783 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,783 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,783 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,783 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,784 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,789 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,789 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,789 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,789 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,789 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,790 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,790 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,790 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,790 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,791 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,791 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,791 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,791 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,791 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,792 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,792 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,792 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,792 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,792 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:03:43,793 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,793 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,793 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,793 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,793 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,793 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,794 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:03:43,797 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,797 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,797 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,797 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,797 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,797 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,798 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,801 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,803 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,803 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,803 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,803 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,803 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,804 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,811 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,811 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,811 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,811 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,811 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,812 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 19:03:43,812 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,812 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,812 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 19:03:43,812 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,812 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,813 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,813 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,813 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,813 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,814 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,814 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,814 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,814 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,814 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,815 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,821 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,823 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,827 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,827 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,827 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,827 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,827 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,828 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,831 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 19:03:43,832 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,832 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,832 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,832 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,832 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,832 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,833 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,833 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,833 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,833 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,834 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,836 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,836 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,836 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:03:43,836 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,836 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,837 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,842 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,842 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,842 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,843 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,843 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,843 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,843 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:03:43,844 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:03:43,852 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,852 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,852 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,852 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,853 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,853 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,853 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,853 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,854 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,854 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,854 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,854 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,855 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,862 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 19:03:43,862 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,862 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,862 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:03:43,862 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,862 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,864 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:03:43,864 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,864 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,864 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,865 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,865 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,865 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,866 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,872 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,872 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,873 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,873 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,873 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 19:03:43,874 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,874 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,874 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,874 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,876 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,881 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,881 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,881 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,882 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,882 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,883 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,883 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,883 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,884 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,884 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,885 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,885 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,885 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,886 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,893 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,893 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,893 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,893 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,893 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,893 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,895 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,895 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,895 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:03:43,895 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,897 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,897 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,897 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,898 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,898 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,898 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,899 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,904 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,904 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,904 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,905 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,905 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,905 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 19:03:43,906 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,914 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,914 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,915 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,915 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,916 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,916 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,917 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,917 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,917 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,919 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:03:43,919 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,919 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,920 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,924 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,924 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,924 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,924 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,924 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,927 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,927 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:03:43,928 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,935 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,935 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,935 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,936 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,937 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,937 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,938 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,943 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:03:43,943 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,944 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,945 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,945 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,946 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:03:43,946 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,947 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 19:03:43,947 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,948 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:03:43,948 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:03:43,948 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:03:43,948 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:03:43,948 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,951 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:03:43,952 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:03:43,952 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:03:43,954 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 19:09:18,997 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:09:18,998 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:09:18,998 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:09:18,998 - DEBUG : -------- PyXLL config --------
2021-07-28 19:09:18,998 - DEBUG : [LOG]
2021-07-28 19:09:18,998 - DEBUG : encoding = utf-8
2021-07-28 19:09:18,998 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:09:18,998 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:09:18,998 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:09:18,998 - DEBUG : verbosity = debug
2021-07-28 19:09:18,998 - DEBUG : 
2021-07-28 19:09:18,998 - DEBUG : [PYTHON]
2021-07-28 19:09:18,998 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:09:18,998 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:09:18,998 - DEBUG : 
2021-07-28 19:09:18,998 - DEBUG : [PYXLL]
2021-07-28 19:09:18,999 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:09:18,999 - DEBUG : developer_mode = 1
2021-07-28 19:09:18,999 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:09:18,999 - DEBUG : modules = 
2021-07-28 19:09:18,999 - DEBUG :     misc
2021-07-28 19:09:18,999 - DEBUG :     worksheetfuncs
2021-07-28 19:09:18,999 - DEBUG :     menus
2021-07-28 19:09:18,999 - DEBUG :     callbacks
2021-07-28 19:09:18,999 - DEBUG :     custom_task_panes
2021-07-28 19:09:18,999 - DEBUG :     test
2021-07-28 19:09:18,999 - DEBUG :     ribbon_functions
2021-07-28 19:09:18,999 - DEBUG :     debugging
2021-07-28 19:09:18,999 - DEBUG :     meta_variables
2021-07-28 19:09:18,999 - DEBUG :     selectiontools
2021-07-28 19:09:18,999 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:09:18,999 - DEBUG : ------------------------------
2021-07-28 19:09:19,001 - DEBUG : Attempting to load python38.dll
2021-07-28 19:09:19,004 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:09:19,005 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:09:19,005 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:09:19,203 - DEBUG : Calling Py_Initialize...
2021-07-28 19:09:19,378 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:09:19,379 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:09:19,379 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:09:19,379 - DEBUG : Python is initialized.
2021-07-28 19:09:19,380 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:09:19,381 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:09:19,381 - DEBUG : Looking for module 'site'...
2021-07-28 19:09:19,410 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:09:19,410 - DEBUG : Importing pyxll module
2021-07-28 19:09:19,410 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:09:19,410 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:09:19,410 - DEBUG :   Detected Python3
2021-07-28 19:09:19,448 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:09:19,448 - DEBUG : pyxll module imported
2021-07-28 19:09:19,448 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:09:19,448 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:09:19,448 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:09:19,458 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:09:19,458 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:09:19,762 - DEBUG : Importing misc
2021-07-28 19:09:19,764 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:09:19,764 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:09:19,764 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:09:19,765 - DEBUG : Imported misc
2021-07-28 19:09:19,765 - DEBUG : Importing worksheetfuncs
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:09:19,765 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:09:19,765 - DEBUG : Imported worksheetfuncs
2021-07-28 19:09:19,765 - DEBUG : Importing menus
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:09:19,774 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:09:19,774 - DEBUG : Imported menus
2021-07-28 19:09:19,774 - DEBUG : Importing callbacks
2021-07-28 19:09:19,775 - DEBUG : Imported callbacks
2021-07-28 19:09:19,775 - DEBUG : Importing custom_task_panes
2021-07-28 19:09:19,777 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:09:19,777 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:09:19,777 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:09:19,777 - DEBUG : Imported custom_task_panes
2021-07-28 19:09:19,777 - DEBUG : Importing test
2021-07-28 19:09:19,778 - DEBUG : Imported test
2021-07-28 19:09:19,778 - DEBUG : Importing ribbon_functions
2021-07-28 19:09:21,345 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:09:21,377 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:09:21,381 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:09:21,381 - DEBUG : interactive is False
2021-07-28 19:09:21,381 - DEBUG : platform is win32
2021-07-28 19:09:21,381 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_e30000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_e30000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:09:21,429 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:09:21,446 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:09:21,661 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:09:21,662 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000207219B1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020721A00C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020721A0AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020721A92310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020721A52580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020721A8AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020721A38070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020721A8E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020721A8A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020721A72490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020721A64CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020721A66F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000207219BCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020721A663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000207219B1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020721A00C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020721A0AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020721A92310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020721A52580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020721A8AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020721A38070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020721A8E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020721A8A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020721A72490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020721A64CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020721A66F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000207219BCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020721A663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:09:21,662 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:09:21,662 - DEBUG : Imported ribbon_functions
2021-07-28 19:09:21,662 - DEBUG : Importing debugging
2021-07-28 19:09:22,157 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:09:22,157 - DEBUG : Imported debugging
2021-07-28 19:09:22,157 - DEBUG : Importing meta_variables
2021-07-28 19:09:22,157 - DEBUG : Imported meta_variables
2021-07-28 19:09:22,157 - DEBUG : Importing selectiontools
2021-07-28 19:09:22,157 - DEBUG : Imported selectiontools
2021-07-28 19:09:22,235 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:09:22,254 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:09:22,276 - INFO : This product is licensed to 
2021-07-28 19:09:22,276 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:09:22,277 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:09:22,278 - DEBUG : Binding Python functions to Excel
2021-07-28 19:09:22,278 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:09:22,278 - DEBUG :     - pyxll_version
2021-07-28 19:09:22,278 - DEBUG :     - python_version
2021-07-28 19:09:22,278 - DEBUG :     - win32api_is_installed
2021-07-28 19:09:22,278 - DEBUG :     - win32com_is_installed
2021-07-28 19:09:22,278 - DEBUG :     - numpy_is_installed
2021-07-28 19:09:22,278 - DEBUG :     - pyxll_logfile
2021-07-28 19:09:22,278 - DEBUG :     - get_formula
2021-07-28 19:09:22,278 - DEBUG :     - get_array_formula
2021-07-28 19:09:22,278 - DEBUG :     - get_last_error
2021-07-28 19:09:22,278 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:09:22,278 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:09:22,278 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:09:22,278 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:09:22,279 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:09:22,279 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:09:22,279 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:09:22,279 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:09:22,279 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:09:22,279 - DEBUG :     - xl_cell_example
2021-07-28 19:09:22,279 - DEBUG :     - recalc_on_open_test
2021-07-28 19:09:22,279 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:09:22,279 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:09:22,279 - DEBUG :     - one_cell_one_sim
2021-07-28 19:09:22,279 - DEBUG :     - one_row_one_sim
2021-07-28 19:09:22,279 - DEBUG : Adding menus to Excel:
2021-07-28 19:09:22,279 - DEBUG :   - PyXLL
2021-07-28 19:09:22,279 - DEBUG :     - Reload PyXLL
2021-07-28 19:09:22,279 - DEBUG :     - Another example menu item
2021-07-28 19:09:22,279 - DEBUG :     - More Examples
2021-07-28 19:09:22,279 - DEBUG :       - Click me
2021-07-28 19:09:22,279 - DEBUG :       - Unicode Test
2021-07-28 19:09:22,279 - DEBUG :     - Open log file
2021-07-28 19:09:22,279 - DEBUG :     - Attach To VS Code
2021-07-28 19:09:22,279 - DEBUG :     - Custom Task Panes
2021-07-28 19:09:22,279 - DEBUG :       - Qt
2021-07-28 19:09:22,279 - DEBUG :       - Tk
2021-07-28 19:09:22,279 - DEBUG :       - Wx
2021-07-28 19:09:22,279 - DEBUG :     - Example Menu Item 1
2021-07-28 19:09:22,279 - DEBUG :     - Show last error
2021-07-28 19:09:22,279 - DEBUG :     - About PyXLL...
2021-07-28 19:09:22,279 - DEBUG :   - PyXLL example menu
2021-07-28 19:09:22,279 - DEBUG :     - Click me
2021-07-28 19:09:22,325 - DEBUG : Finished binding Python functions
2021-07-28 19:09:22,325 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:09:22,325 - DEBUG : pyxll._post_open complete.
2021-07-28 19:09:22,329 - DEBUG : PyXLL initialization complete.
2021-07-28 19:09:22,573 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:09:22,573 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:09:22,573 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:09:22,575 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:09:22,575 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:09:22,576 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:09:22,623 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:09:22,623 - DEBUG : Reloading misc
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:09:22,623 - DEBUG : Reloaded misc
2021-07-28 19:09:22,623 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:09:22,623 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:09:22,628 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:09:22,628 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:09:22,628 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:09:22,628 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:09:22,628 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:09:22,629 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:09:22,629 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:09:22,629 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:09:22,629 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:09:22,630 - DEBUG : Reloading menus
2021-07-28 19:09:22,630 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:09:22,630 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:09:22,631 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:09:22,631 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:09:22,631 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:09:22,631 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:09:22,631 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:09:22,631 - DEBUG : Reloaded menus
2021-07-28 19:09:22,631 - DEBUG : Reloading callbacks
2021-07-28 19:09:22,632 - DEBUG : Reloaded callbacks
2021-07-28 19:09:22,632 - DEBUG : Reloading custom_task_panes
2021-07-28 19:09:22,633 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:09:22,633 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:09:22,633 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:09:22,633 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:09:22,633 - DEBUG : Reloading test
2021-07-28 19:09:22,634 - DEBUG : Reloaded test
2021-07-28 19:09:22,634 - DEBUG : Reloading meta_variables
2021-07-28 19:09:22,635 - DEBUG : Reloaded meta_variables
2021-07-28 19:09:22,635 - DEBUG : Reloading dependency error_functions
2021-07-28 19:09:22,635 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:09:22,635 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:09:22,635 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:09:22,637 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:09:22,637 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:09:22,637 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:09:22,639 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:09:22,639 - DEBUG : Reloading dependency examples
2021-07-28 19:09:22,640 - DEBUG : Reloaded dependency examples
2021-07-28 19:09:22,640 - DEBUG : Reloading ribbon_functions
2021-07-28 19:09:22,642 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000207219B1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020721A00C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020721A0AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020721A92310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020721A52580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020721A8AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020721A38070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020721A8E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020721A8A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020721A72490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020721A64CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020721A66F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000207219BCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020721A663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000207219B1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000020721A00C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000020721A0AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000020721A92310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000020721A52580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000020721A8AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000020721A38070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000020721A8E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000020721A8A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000020721A72490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000020721A64CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000020721A66F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000207219BCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000020721A663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:09:22,642 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:09:22,643 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:09:22,643 - DEBUG : Reloading debugging
2021-07-28 19:09:22,643 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:09:22,644 - DEBUG : Reloaded debugging
2021-07-28 19:09:22,644 - DEBUG : Reloading selectiontools
2021-07-28 19:09:22,644 - DEBUG : Reloaded selectiontools
2021-07-28 19:09:22,689 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:09:22,689 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:09:22,712 - INFO : This product is licensed to 
2021-07-28 19:09:22,712 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:09:22,714 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:09:22,714 - DEBUG : Binding Python functions to Excel
2021-07-28 19:09:22,714 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:09:22,714 - DEBUG :     - pyxll_version
2021-07-28 19:09:22,714 - DEBUG :     - python_version
2021-07-28 19:09:22,715 - DEBUG :     - win32api_is_installed
2021-07-28 19:09:22,715 - DEBUG :     - win32com_is_installed
2021-07-28 19:09:22,715 - DEBUG :     - numpy_is_installed
2021-07-28 19:09:22,715 - DEBUG :     - pyxll_logfile
2021-07-28 19:09:22,715 - DEBUG :     - get_formula
2021-07-28 19:09:22,715 - DEBUG :     - get_array_formula
2021-07-28 19:09:22,715 - DEBUG :     - get_last_error
2021-07-28 19:09:22,715 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:09:22,715 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:09:22,715 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:09:22,715 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:09:22,715 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:09:22,715 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:09:22,715 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:09:22,715 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:09:22,715 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:09:22,715 - DEBUG :     - xl_cell_example
2021-07-28 19:09:22,715 - DEBUG :     - recalc_on_open_test
2021-07-28 19:09:22,716 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:09:22,716 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:09:22,716 - DEBUG :     - one_cell_one_sim
2021-07-28 19:09:22,716 - DEBUG :     - one_row_one_sim
2021-07-28 19:09:22,718 - DEBUG : Adding menus to Excel:
2021-07-28 19:09:22,718 - DEBUG :   - PyXLL
2021-07-28 19:09:22,718 - DEBUG :     - Reload PyXLL
2021-07-28 19:09:22,718 - DEBUG :     - Another example menu item
2021-07-28 19:09:22,718 - DEBUG :     - More Examples
2021-07-28 19:09:22,718 - DEBUG :       - Click me
2021-07-28 19:09:22,718 - DEBUG :       - Unicode Test
2021-07-28 19:09:22,718 - DEBUG :     - Open log file
2021-07-28 19:09:22,718 - DEBUG :     - Attach To VS Code
2021-07-28 19:09:22,718 - DEBUG :     - Custom Task Panes
2021-07-28 19:09:22,718 - DEBUG :       - Qt
2021-07-28 19:09:22,718 - DEBUG :       - Tk
2021-07-28 19:09:22,718 - DEBUG :       - Wx
2021-07-28 19:09:22,718 - DEBUG :     - Example Menu Item 1
2021-07-28 19:09:22,718 - DEBUG :     - Show last error
2021-07-28 19:09:22,718 - DEBUG :     - About PyXLL...
2021-07-28 19:09:22,718 - DEBUG :   - PyXLL example menu
2021-07-28 19:09:22,718 - DEBUG :     - Click me
2021-07-28 19:09:22,726 - DEBUG : Finished binding Python functions
2021-07-28 19:09:22,726 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:09:24,070 - DEBUG : pyxll._post_open complete.
2021-07-28 19:09:24,070 - DEBUG : PyXLL initialization complete.
2021-07-28 19:09:27,164 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:09:27,164 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:09:27,183 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:09:27,238 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:09:27,244 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:09:27,244 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:09:27,245 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:09:27,254 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:12:43,048 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:12:43,049 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:12:43,049 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:12:43,049 - DEBUG : -------- PyXLL config --------
2021-07-28 19:12:43,049 - DEBUG : [LOG]
2021-07-28 19:12:43,049 - DEBUG : encoding = utf-8
2021-07-28 19:12:43,049 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:12:43,049 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:12:43,049 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:12:43,049 - DEBUG : verbosity = debug
2021-07-28 19:12:43,049 - DEBUG : 
2021-07-28 19:12:43,049 - DEBUG : [PYTHON]
2021-07-28 19:12:43,049 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:12:43,049 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:12:43,049 - DEBUG : 
2021-07-28 19:12:43,049 - DEBUG : [PYXLL]
2021-07-28 19:12:43,049 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:12:43,049 - DEBUG : developer_mode = 1
2021-07-28 19:12:43,049 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:12:43,049 - DEBUG : modules = 
2021-07-28 19:12:43,049 - DEBUG :     misc
2021-07-28 19:12:43,049 - DEBUG :     worksheetfuncs
2021-07-28 19:12:43,049 - DEBUG :     menus
2021-07-28 19:12:43,049 - DEBUG :     callbacks
2021-07-28 19:12:43,049 - DEBUG :     custom_task_panes
2021-07-28 19:12:43,049 - DEBUG :     test
2021-07-28 19:12:43,049 - DEBUG :     ribbon_functions
2021-07-28 19:12:43,049 - DEBUG :     debugging
2021-07-28 19:12:43,049 - DEBUG :     meta_variables
2021-07-28 19:12:43,049 - DEBUG :     selectiontools
2021-07-28 19:12:43,049 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:12:43,049 - DEBUG : ------------------------------
2021-07-28 19:12:43,050 - DEBUG : Attempting to load python38.dll
2021-07-28 19:12:43,053 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:12:43,054 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:12:43,054 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:12:43,228 - DEBUG : Calling Py_Initialize...
2021-07-28 19:12:43,376 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:12:43,376 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:12:43,376 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:12:43,376 - DEBUG : Python is initialized.
2021-07-28 19:12:43,377 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:12:43,378 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:12:43,378 - DEBUG : Looking for module 'site'...
2021-07-28 19:12:43,406 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:12:43,409 - DEBUG : Importing pyxll module
2021-07-28 19:12:43,409 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:12:43,409 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:12:43,409 - DEBUG :   Detected Python3
2021-07-28 19:12:43,449 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:12:43,449 - DEBUG : pyxll module imported
2021-07-28 19:12:43,449 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:12:43,449 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:12:43,449 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:12:43,455 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:12:43,455 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:12:43,684 - DEBUG : Importing misc
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:12:43,685 - DEBUG : Imported misc
2021-07-28 19:12:43,685 - DEBUG : Importing worksheetfuncs
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:12:43,685 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:12:43,685 - DEBUG : Imported worksheetfuncs
2021-07-28 19:12:43,685 - DEBUG : Importing menus
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:12:43,695 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:12:43,695 - DEBUG : Imported menus
2021-07-28 19:12:43,695 - DEBUG : Importing callbacks
2021-07-28 19:12:43,695 - DEBUG : Imported callbacks
2021-07-28 19:12:43,695 - DEBUG : Importing custom_task_panes
2021-07-28 19:12:43,698 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:12:43,698 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:12:43,698 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:12:43,698 - DEBUG : Imported custom_task_panes
2021-07-28 19:12:43,698 - DEBUG : Importing test
2021-07-28 19:12:43,699 - DEBUG : Imported test
2021-07-28 19:12:43,699 - DEBUG : Importing ribbon_functions
2021-07-28 19:12:45,210 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:12:45,232 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:12:45,232 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:12:45,232 - DEBUG : interactive is False
2021-07-28 19:12:45,232 - DEBUG : platform is win32
2021-07-28 19:12:45,232 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_5c0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_5c0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:12:45,302 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:12:45,315 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:12:45,539 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:12:45,539 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000237F0FB0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000237F0FFDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000237F0FFBB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000237F109E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000237F1052580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000237F108AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000237F1039070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000237F10908E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000237F108A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000237F107C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000237F106ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000237F1066F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000237F0FBAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000237F10663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000237F0FB0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000237F0FFDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000237F0FFBB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000237F109E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000237F1052580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000237F108AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000237F1039070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000237F10908E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000237F108A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000237F107C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000237F106ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000237F1066F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000237F0FBAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000237F10663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:12:45,539 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:12:45,539 - DEBUG : Imported ribbon_functions
2021-07-28 19:12:45,539 - DEBUG : Importing debugging
2021-07-28 19:12:45,999 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:12:45,999 - DEBUG : Imported debugging
2021-07-28 19:12:45,999 - DEBUG : Importing meta_variables
2021-07-28 19:12:45,999 - DEBUG : Imported meta_variables
2021-07-28 19:12:45,999 - DEBUG : Importing selectiontools
2021-07-28 19:12:45,999 - DEBUG : Imported selectiontools
2021-07-28 19:12:46,032 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:12:46,042 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:12:46,055 - INFO : This product is licensed to 
2021-07-28 19:12:46,055 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:12:46,058 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:12:46,058 - DEBUG : Binding Python functions to Excel
2021-07-28 19:12:46,058 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:12:46,058 - DEBUG :     - pyxll_version
2021-07-28 19:12:46,058 - DEBUG :     - python_version
2021-07-28 19:12:46,058 - DEBUG :     - win32api_is_installed
2021-07-28 19:12:46,058 - DEBUG :     - win32com_is_installed
2021-07-28 19:12:46,058 - DEBUG :     - numpy_is_installed
2021-07-28 19:12:46,058 - DEBUG :     - pyxll_logfile
2021-07-28 19:12:46,059 - DEBUG :     - get_formula
2021-07-28 19:12:46,059 - DEBUG :     - get_array_formula
2021-07-28 19:12:46,059 - DEBUG :     - get_last_error
2021-07-28 19:12:46,059 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:12:46,059 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:12:46,059 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:12:46,059 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:12:46,059 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:12:46,059 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:12:46,059 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:12:46,059 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:12:46,059 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:12:46,059 - DEBUG :     - xl_cell_example
2021-07-28 19:12:46,059 - DEBUG :     - recalc_on_open_test
2021-07-28 19:12:46,059 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:12:46,059 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:12:46,059 - DEBUG :     - one_cell_one_sim
2021-07-28 19:12:46,059 - DEBUG :     - one_row_one_sim
2021-07-28 19:12:46,073 - DEBUG : Adding menus to Excel:
2021-07-28 19:12:46,073 - DEBUG :   - PyXLL
2021-07-28 19:12:46,073 - DEBUG :     - Reload PyXLL
2021-07-28 19:12:46,073 - DEBUG :     - Another example menu item
2021-07-28 19:12:46,073 - DEBUG :     - More Examples
2021-07-28 19:12:46,073 - DEBUG :       - Click me
2021-07-28 19:12:46,073 - DEBUG :       - Unicode Test
2021-07-28 19:12:46,073 - DEBUG :     - Open log file
2021-07-28 19:12:46,073 - DEBUG :     - Attach To VS Code
2021-07-28 19:12:46,073 - DEBUG :     - Custom Task Panes
2021-07-28 19:12:46,073 - DEBUG :       - Qt
2021-07-28 19:12:46,073 - DEBUG :       - Tk
2021-07-28 19:12:46,073 - DEBUG :       - Wx
2021-07-28 19:12:46,073 - DEBUG :     - Example Menu Item 1
2021-07-28 19:12:46,073 - DEBUG :     - Show last error
2021-07-28 19:12:46,073 - DEBUG :     - About PyXLL...
2021-07-28 19:12:46,073 - DEBUG :   - PyXLL example menu
2021-07-28 19:12:46,073 - DEBUG :     - Click me
2021-07-28 19:12:46,127 - DEBUG : Finished binding Python functions
2021-07-28 19:12:46,127 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:12:46,127 - DEBUG : pyxll._post_open complete.
2021-07-28 19:12:46,148 - DEBUG : PyXLL initialization complete.
2021-07-28 19:12:47,619 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:12:47,619 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:12:47,619 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:12:47,621 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:12:47,622 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:12:47,622 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:12:47,679 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:12:47,679 - DEBUG : Reloading misc
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:12:47,679 - DEBUG : Reloaded misc
2021-07-28 19:12:47,679 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:12:47,679 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:12:47,686 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:12:47,686 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:12:47,686 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:12:47,686 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:12:47,687 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:12:47,687 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:12:47,687 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:12:47,687 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:12:47,687 - DEBUG : Reloading menus
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:12:47,688 - DEBUG : Reloaded menus
2021-07-28 19:12:47,688 - DEBUG : Reloading callbacks
2021-07-28 19:12:47,688 - DEBUG : Reloaded callbacks
2021-07-28 19:12:47,688 - DEBUG : Reloading custom_task_panes
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:12:47,688 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:12:47,688 - DEBUG : Reloading test
2021-07-28 19:12:47,688 - DEBUG : Reloaded test
2021-07-28 19:12:47,688 - DEBUG : Reloading meta_variables
2021-07-28 19:12:47,688 - DEBUG : Reloaded meta_variables
2021-07-28 19:12:47,688 - DEBUG : Reloading dependency error_functions
2021-07-28 19:12:47,688 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:12:47,688 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:12:47,688 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:12:47,688 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:12:47,688 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:12:47,688 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:12:47,688 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:12:47,688 - DEBUG : Reloading dependency examples
2021-07-28 19:12:47,688 - DEBUG : Reloaded dependency examples
2021-07-28 19:12:47,688 - DEBUG : Reloading ribbon_functions
2021-07-28 19:12:47,688 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000237F0FB0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000237F0FFDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000237F0FFBB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000237F109E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000237F1052580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000237F108AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000237F1039070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000237F10908E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000237F108A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000237F107C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000237F106ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000237F1066F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000237F0FBAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000237F10663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000237F0FB0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000237F0FFDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000237F0FFBB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000237F109E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000237F1052580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000237F108AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000237F1039070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000237F10908E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000237F108A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000237F107C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000237F106ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000237F1066F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000237F0FBAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000237F10663A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:12:47,688 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:12:47,688 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:12:47,688 - DEBUG : Reloading debugging
2021-07-28 19:12:47,688 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:12:47,688 - DEBUG : Reloaded debugging
2021-07-28 19:12:47,688 - DEBUG : Reloading selectiontools
2021-07-28 19:12:47,688 - DEBUG : Reloaded selectiontools
2021-07-28 19:12:47,737 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:12:47,737 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:12:47,756 - INFO : This product is licensed to 
2021-07-28 19:12:47,756 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:12:47,772 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:12:47,772 - DEBUG : Binding Python functions to Excel
2021-07-28 19:12:47,773 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:12:47,773 - DEBUG :     - pyxll_version
2021-07-28 19:12:47,773 - DEBUG :     - python_version
2021-07-28 19:12:47,773 - DEBUG :     - win32api_is_installed
2021-07-28 19:12:47,773 - DEBUG :     - win32com_is_installed
2021-07-28 19:12:47,773 - DEBUG :     - numpy_is_installed
2021-07-28 19:12:47,773 - DEBUG :     - pyxll_logfile
2021-07-28 19:12:47,773 - DEBUG :     - get_formula
2021-07-28 19:12:47,773 - DEBUG :     - get_array_formula
2021-07-28 19:12:47,773 - DEBUG :     - get_last_error
2021-07-28 19:12:47,773 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:12:47,773 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:12:47,774 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:12:47,774 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:12:47,774 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:12:47,774 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:12:47,774 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:12:47,774 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:12:47,774 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:12:47,774 - DEBUG :     - xl_cell_example
2021-07-28 19:12:47,774 - DEBUG :     - recalc_on_open_test
2021-07-28 19:12:47,774 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:12:47,774 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:12:47,774 - DEBUG :     - one_cell_one_sim
2021-07-28 19:12:47,774 - DEBUG :     - one_row_one_sim
2021-07-28 19:12:47,774 - DEBUG : Adding menus to Excel:
2021-07-28 19:12:47,774 - DEBUG :   - PyXLL
2021-07-28 19:12:47,774 - DEBUG :     - Reload PyXLL
2021-07-28 19:12:47,774 - DEBUG :     - Another example menu item
2021-07-28 19:12:47,774 - DEBUG :     - More Examples
2021-07-28 19:12:47,774 - DEBUG :       - Click me
2021-07-28 19:12:47,774 - DEBUG :       - Unicode Test
2021-07-28 19:12:47,774 - DEBUG :     - Open log file
2021-07-28 19:12:47,774 - DEBUG :     - Attach To VS Code
2021-07-28 19:12:47,774 - DEBUG :     - Custom Task Panes
2021-07-28 19:12:47,774 - DEBUG :       - Qt
2021-07-28 19:12:47,774 - DEBUG :       - Tk
2021-07-28 19:12:47,774 - DEBUG :       - Wx
2021-07-28 19:12:47,774 - DEBUG :     - Example Menu Item 1
2021-07-28 19:12:47,774 - DEBUG :     - Show last error
2021-07-28 19:12:47,774 - DEBUG :     - About PyXLL...
2021-07-28 19:12:47,774 - DEBUG :   - PyXLL example menu
2021-07-28 19:12:47,774 - DEBUG :     - Click me
2021-07-28 19:12:47,774 - DEBUG : Finished binding Python functions
2021-07-28 19:12:47,774 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:12:48,878 - DEBUG : pyxll._post_open complete.
2021-07-28 19:12:48,883 - DEBUG : PyXLL initialization complete.
2021-07-28 19:12:49,471 - DEBUG : Error checking license server.
2021-07-28 19:12:49,471 - DEBUG : Response code 0.
2021-07-28 19:12:49,471 - DEBUG : Payload missing from returned document
2021-07-28 19:12:49,471 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:12:52,300 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:12:52,300 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:12:52,315 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:12:52,354 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:12:52,361 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:12:52,361 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:12:52,365 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:12:52,375 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:13:40,767 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,767 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,775 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,777 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,785 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,787 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,795 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,797 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,805 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,807 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,815 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,817 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,825 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:13:40,827 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:13:40,827 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 19:14:40,955 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:14:40,955 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:14:40,955 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:14:40,955 - DEBUG : -------- PyXLL config --------
2021-07-28 19:14:40,955 - DEBUG : [LOG]
2021-07-28 19:14:40,955 - DEBUG : encoding = utf-8
2021-07-28 19:14:40,955 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:14:40,955 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:14:40,956 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:14:40,956 - DEBUG : verbosity = debug
2021-07-28 19:14:40,956 - DEBUG : 
2021-07-28 19:14:40,956 - DEBUG : [PYTHON]
2021-07-28 19:14:40,956 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:14:40,956 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:14:40,956 - DEBUG : 
2021-07-28 19:14:40,956 - DEBUG : [PYXLL]
2021-07-28 19:14:40,956 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:14:40,956 - DEBUG : developer_mode = 1
2021-07-28 19:14:40,956 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:14:40,956 - DEBUG : modules = 
2021-07-28 19:14:40,956 - DEBUG :     misc
2021-07-28 19:14:40,956 - DEBUG :     worksheetfuncs
2021-07-28 19:14:40,956 - DEBUG :     menus
2021-07-28 19:14:40,956 - DEBUG :     callbacks
2021-07-28 19:14:40,956 - DEBUG :     custom_task_panes
2021-07-28 19:14:40,956 - DEBUG :     test
2021-07-28 19:14:40,956 - DEBUG :     ribbon_functions
2021-07-28 19:14:40,956 - DEBUG :     debugging
2021-07-28 19:14:40,956 - DEBUG :     meta_variables
2021-07-28 19:14:40,956 - DEBUG :     selectiontools
2021-07-28 19:14:40,956 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:14:40,956 - DEBUG : ------------------------------
2021-07-28 19:14:40,958 - DEBUG : Attempting to load python38.dll
2021-07-28 19:14:40,960 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:14:40,961 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:14:40,961 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:14:41,094 - DEBUG : Calling Py_Initialize...
2021-07-28 19:14:41,218 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:14:41,218 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:14:41,218 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:14:41,218 - DEBUG : Python is initialized.
2021-07-28 19:14:41,219 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:14:41,220 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:14:41,220 - DEBUG : Looking for module 'site'...
2021-07-28 19:14:41,245 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:14:41,245 - DEBUG : Importing pyxll module
2021-07-28 19:14:41,245 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:14:41,245 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:14:41,245 - DEBUG :   Detected Python3
2021-07-28 19:14:41,280 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:14:41,280 - DEBUG : pyxll module imported
2021-07-28 19:14:41,280 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:14:41,280 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:14:41,280 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:14:41,285 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:14:41,286 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:14:41,515 - DEBUG : Importing misc
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:14:41,516 - DEBUG : Imported misc
2021-07-28 19:14:41,516 - DEBUG : Importing worksheetfuncs
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:14:41,516 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:14:41,521 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:14:41,521 - DEBUG : Imported worksheetfuncs
2021-07-28 19:14:41,521 - DEBUG : Importing menus
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:14:41,526 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:14:41,526 - DEBUG : Imported menus
2021-07-28 19:14:41,526 - DEBUG : Importing callbacks
2021-07-28 19:14:41,526 - DEBUG : Imported callbacks
2021-07-28 19:14:41,526 - DEBUG : Importing custom_task_panes
2021-07-28 19:14:41,529 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:14:41,529 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:14:41,529 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:14:41,529 - DEBUG : Imported custom_task_panes
2021-07-28 19:14:41,529 - DEBUG : Importing test
2021-07-28 19:14:41,529 - DEBUG : Imported test
2021-07-28 19:14:41,530 - DEBUG : Importing ribbon_functions
2021-07-28 19:14:43,108 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:14:43,136 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:14:43,144 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:14:43,144 - DEBUG : interactive is False
2021-07-28 19:14:43,144 - DEBUG : platform is win32
2021-07-28 19:14:43,144 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_9c0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_9c0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:14:43,190 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:14:43,192 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:14:43,449 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:14:43,451 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001EEC6BB0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001EEC6BFFC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001EEC6C0AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001EEC6CA22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001EEC6C51580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001EEC6C8AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001EEC6C37070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001EEC6C938E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001EEC6C8A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001EEC6C7D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001EEC6C6ACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001EEC6C65F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001EEC6BBCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001EEC6C653A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001EEC6BB0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001EEC6BFFC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001EEC6C0AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001EEC6CA22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001EEC6C51580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001EEC6C8AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001EEC6C37070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001EEC6C938E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001EEC6C8A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001EEC6C7D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001EEC6C6ACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001EEC6C65F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001EEC6BBCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001EEC6C653A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:14:43,451 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:14:43,451 - DEBUG : Imported ribbon_functions
2021-07-28 19:14:43,451 - DEBUG : Importing debugging
2021-07-28 19:14:43,911 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:14:43,911 - DEBUG : Imported debugging
2021-07-28 19:14:43,911 - DEBUG : Importing meta_variables
2021-07-28 19:14:43,911 - DEBUG : Imported meta_variables
2021-07-28 19:14:43,911 - DEBUG : Importing selectiontools
2021-07-28 19:14:43,912 - DEBUG : Imported selectiontools
2021-07-28 19:14:43,951 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:14:43,955 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:14:43,968 - INFO : This product is licensed to 
2021-07-28 19:14:43,968 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:14:43,971 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:14:43,971 - DEBUG : Binding Python functions to Excel
2021-07-28 19:14:43,971 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:14:43,971 - DEBUG :     - pyxll_version
2021-07-28 19:14:43,971 - DEBUG :     - python_version
2021-07-28 19:14:43,971 - DEBUG :     - win32api_is_installed
2021-07-28 19:14:43,971 - DEBUG :     - win32com_is_installed
2021-07-28 19:14:43,971 - DEBUG :     - numpy_is_installed
2021-07-28 19:14:43,971 - DEBUG :     - pyxll_logfile
2021-07-28 19:14:43,971 - DEBUG :     - get_formula
2021-07-28 19:14:43,971 - DEBUG :     - get_array_formula
2021-07-28 19:14:43,971 - DEBUG :     - get_last_error
2021-07-28 19:14:43,971 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:14:43,971 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:14:43,971 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:14:43,971 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:14:43,971 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:14:43,972 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:14:43,972 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:14:43,972 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:14:43,972 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:14:43,972 - DEBUG :     - xl_cell_example
2021-07-28 19:14:43,972 - DEBUG :     - recalc_on_open_test
2021-07-28 19:14:43,972 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:14:43,972 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:14:43,972 - DEBUG :     - one_cell_one_sim
2021-07-28 19:14:43,972 - DEBUG :     - one_row_one_sim
2021-07-28 19:14:43,984 - DEBUG : Adding menus to Excel:
2021-07-28 19:14:43,984 - DEBUG :   - PyXLL
2021-07-28 19:14:43,984 - DEBUG :     - Reload PyXLL
2021-07-28 19:14:43,984 - DEBUG :     - Another example menu item
2021-07-28 19:14:43,984 - DEBUG :     - More Examples
2021-07-28 19:14:43,984 - DEBUG :       - Click me
2021-07-28 19:14:43,984 - DEBUG :       - Unicode Test
2021-07-28 19:14:43,984 - DEBUG :     - Open log file
2021-07-28 19:14:43,984 - DEBUG :     - Attach To VS Code
2021-07-28 19:14:43,984 - DEBUG :     - Custom Task Panes
2021-07-28 19:14:43,984 - DEBUG :       - Qt
2021-07-28 19:14:43,984 - DEBUG :       - Tk
2021-07-28 19:14:43,984 - DEBUG :       - Wx
2021-07-28 19:14:43,984 - DEBUG :     - Example Menu Item 1
2021-07-28 19:14:43,984 - DEBUG :     - Show last error
2021-07-28 19:14:43,984 - DEBUG :     - About PyXLL...
2021-07-28 19:14:43,984 - DEBUG :   - PyXLL example menu
2021-07-28 19:14:43,984 - DEBUG :     - Click me
2021-07-28 19:14:44,027 - DEBUG : Finished binding Python functions
2021-07-28 19:14:44,027 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:14:44,028 - DEBUG : pyxll._post_open complete.
2021-07-28 19:14:44,033 - DEBUG : PyXLL initialization complete.
2021-07-28 19:14:44,153 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:14:44,153 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:14:44,160 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:14:44,185 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:14:50,979 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:14:50,979 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:14:50,979 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:14:50,979 - DEBUG : -------- PyXLL config --------
2021-07-28 19:14:50,980 - DEBUG : [LOG]
2021-07-28 19:14:50,980 - DEBUG : encoding = utf-8
2021-07-28 19:14:50,980 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:14:50,980 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:14:50,980 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:14:50,980 - DEBUG : verbosity = debug
2021-07-28 19:14:50,980 - DEBUG : 
2021-07-28 19:14:50,980 - DEBUG : [PYTHON]
2021-07-28 19:14:50,980 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:14:50,981 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:14:50,981 - DEBUG : 
2021-07-28 19:14:50,981 - DEBUG : [PYXLL]
2021-07-28 19:14:50,981 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:14:50,981 - DEBUG : developer_mode = 1
2021-07-28 19:14:50,981 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:14:50,981 - DEBUG : modules = 
2021-07-28 19:14:50,981 - DEBUG :     misc
2021-07-28 19:14:50,981 - DEBUG :     worksheetfuncs
2021-07-28 19:14:50,981 - DEBUG :     menus
2021-07-28 19:14:50,981 - DEBUG :     callbacks
2021-07-28 19:14:50,981 - DEBUG :     custom_task_panes
2021-07-28 19:14:50,981 - DEBUG :     test
2021-07-28 19:14:50,981 - DEBUG :     ribbon_functions
2021-07-28 19:14:50,981 - DEBUG :     debugging
2021-07-28 19:14:50,981 - DEBUG :     meta_variables
2021-07-28 19:14:50,981 - DEBUG :     selectiontools
2021-07-28 19:14:50,981 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:14:50,981 - DEBUG : ------------------------------
2021-07-28 19:14:50,982 - DEBUG : Attempting to load python38.dll
2021-07-28 19:14:50,983 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:14:50,985 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:14:50,985 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:14:51,150 - DEBUG : Calling Py_Initialize...
2021-07-28 19:14:51,285 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:14:51,285 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:14:51,285 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:14:51,285 - DEBUG : Python is initialized.
2021-07-28 19:14:51,286 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:14:51,289 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:14:51,289 - DEBUG : Looking for module 'site'...
2021-07-28 19:14:51,312 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:14:51,312 - DEBUG : Importing pyxll module
2021-07-28 19:14:51,312 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:14:51,312 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:14:51,312 - DEBUG :   Detected Python3
2021-07-28 19:14:51,343 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:14:51,343 - DEBUG : pyxll module imported
2021-07-28 19:14:51,343 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:14:51,343 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:14:51,343 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:14:51,356 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:14:51,357 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:14:51,652 - DEBUG : Importing misc
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:14:51,652 - DEBUG : Imported misc
2021-07-28 19:14:51,652 - DEBUG : Importing worksheetfuncs
2021-07-28 19:14:51,652 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:14:51,659 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:14:51,659 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:14:51,659 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:14:51,659 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:14:51,659 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:14:51,659 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:14:51,660 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:14:51,660 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:14:51,660 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:14:51,660 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:14:51,660 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:14:51,661 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:14:51,661 - DEBUG : Imported worksheetfuncs
2021-07-28 19:14:51,661 - DEBUG : Importing menus
2021-07-28 19:14:51,665 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:14:51,665 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:14:51,665 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:14:51,665 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:14:51,666 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:14:51,666 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:14:51,666 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:14:51,666 - DEBUG : Imported menus
2021-07-28 19:14:51,666 - DEBUG : Importing callbacks
2021-07-28 19:14:51,666 - DEBUG : Imported callbacks
2021-07-28 19:14:51,666 - DEBUG : Importing custom_task_panes
2021-07-28 19:14:51,666 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:14:51,666 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:14:51,666 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:14:51,666 - DEBUG : Imported custom_task_panes
2021-07-28 19:14:51,666 - DEBUG : Importing test
2021-07-28 19:14:51,666 - DEBUG : Imported test
2021-07-28 19:14:51,666 - DEBUG : Importing ribbon_functions
2021-07-28 19:14:53,219 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:14:53,265 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:14:53,271 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:14:53,271 - DEBUG : interactive is False
2021-07-28 19:14:53,271 - DEBUG : platform is win32
2021-07-28 19:14:53,272 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_410000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_410000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:14:53,366 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:14:53,386 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:14:53,662 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:14:53,663 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000011FAB890FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000011FAB8E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000011FAB8E3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000011FAB96C310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000011FAB932580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000011FAB96AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000011FAB917070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000011FAB9728E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000011FAB96A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000011FAB95C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000011FAB944CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000011FAB945F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000011FAB89EFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000011FAB9453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000011FAB890FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000011FAB8E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000011FAB8E3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000011FAB96C310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000011FAB932580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000011FAB96AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000011FAB917070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000011FAB9728E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000011FAB96A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000011FAB95C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000011FAB944CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000011FAB945F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000011FAB89EFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000011FAB9453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:14:53,663 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:14:53,663 - DEBUG : Imported ribbon_functions
2021-07-28 19:14:53,667 - DEBUG : Importing debugging
2021-07-28 19:14:54,185 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:14:54,185 - DEBUG : Imported debugging
2021-07-28 19:14:54,185 - DEBUG : Importing meta_variables
2021-07-28 19:14:54,186 - DEBUG : Imported meta_variables
2021-07-28 19:14:54,186 - DEBUG : Importing selectiontools
2021-07-28 19:14:54,187 - DEBUG : Imported selectiontools
2021-07-28 19:14:54,242 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:14:54,247 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:14:54,267 - INFO : This product is licensed to 
2021-07-28 19:14:54,267 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:14:54,269 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:14:54,269 - DEBUG : Binding Python functions to Excel
2021-07-28 19:14:54,269 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:14:54,270 - DEBUG :     - pyxll_version
2021-07-28 19:14:54,270 - DEBUG :     - python_version
2021-07-28 19:14:54,270 - DEBUG :     - win32api_is_installed
2021-07-28 19:14:54,270 - DEBUG :     - win32com_is_installed
2021-07-28 19:14:54,270 - DEBUG :     - numpy_is_installed
2021-07-28 19:14:54,270 - DEBUG :     - pyxll_logfile
2021-07-28 19:14:54,270 - DEBUG :     - get_formula
2021-07-28 19:14:54,270 - DEBUG :     - get_array_formula
2021-07-28 19:14:54,270 - DEBUG :     - get_last_error
2021-07-28 19:14:54,270 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:14:54,270 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:14:54,270 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:14:54,270 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:14:54,270 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:14:54,270 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:14:54,270 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:14:54,271 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:14:54,271 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:14:54,271 - DEBUG :     - xl_cell_example
2021-07-28 19:14:54,271 - DEBUG :     - recalc_on_open_test
2021-07-28 19:14:54,271 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:14:54,271 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:14:54,271 - DEBUG :     - one_cell_one_sim
2021-07-28 19:14:54,271 - DEBUG :     - one_row_one_sim
2021-07-28 19:14:54,288 - DEBUG : Adding menus to Excel:
2021-07-28 19:14:54,288 - DEBUG :   - PyXLL
2021-07-28 19:14:54,288 - DEBUG :     - Reload PyXLL
2021-07-28 19:14:54,288 - DEBUG :     - Another example menu item
2021-07-28 19:14:54,288 - DEBUG :     - More Examples
2021-07-28 19:14:54,288 - DEBUG :       - Click me
2021-07-28 19:14:54,288 - DEBUG :       - Unicode Test
2021-07-28 19:14:54,288 - DEBUG :     - Open log file
2021-07-28 19:14:54,288 - DEBUG :     - Attach To VS Code
2021-07-28 19:14:54,288 - DEBUG :     - Custom Task Panes
2021-07-28 19:14:54,288 - DEBUG :       - Qt
2021-07-28 19:14:54,288 - DEBUG :       - Tk
2021-07-28 19:14:54,288 - DEBUG :       - Wx
2021-07-28 19:14:54,288 - DEBUG :     - Example Menu Item 1
2021-07-28 19:14:54,288 - DEBUG :     - Show last error
2021-07-28 19:14:54,288 - DEBUG :     - About PyXLL...
2021-07-28 19:14:54,288 - DEBUG :   - PyXLL example menu
2021-07-28 19:14:54,288 - DEBUG :     - Click me
2021-07-28 19:14:54,366 - DEBUG : Finished binding Python functions
2021-07-28 19:14:54,367 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:14:54,367 - DEBUG : pyxll._post_open complete.
2021-07-28 19:14:54,378 - DEBUG : PyXLL initialization complete.
2021-07-28 19:14:55,195 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:14:55,195 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:14:55,195 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:14:55,196 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:14:55,197 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:14:55,197 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:14:55,247 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:14:55,248 - DEBUG : Reloading misc
2021-07-28 19:14:55,249 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:14:55,249 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:14:55,249 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:14:55,250 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:14:55,250 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:14:55,250 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:14:55,250 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:14:55,251 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:14:55,251 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:14:55,251 - DEBUG : Reloaded misc
2021-07-28 19:14:55,251 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:14:55,253 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:14:55,254 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:14:55,254 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:14:55,254 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:14:55,255 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:14:55,255 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:14:55,255 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:14:55,256 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:14:55,256 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:14:55,256 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:14:55,257 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:14:55,257 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:14:55,257 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:14:55,258 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:14:55,258 - DEBUG : Reloading menus
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:14:55,259 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:14:55,259 - DEBUG : Reloaded menus
2021-07-28 19:14:55,260 - DEBUG : Reloading callbacks
2021-07-28 19:14:55,260 - DEBUG : Reloaded callbacks
2021-07-28 19:14:55,261 - DEBUG : Reloading custom_task_panes
2021-07-28 19:14:55,261 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:14:55,261 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:14:55,262 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:14:55,262 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:14:55,262 - DEBUG : Reloading test
2021-07-28 19:14:55,262 - DEBUG : Reloaded test
2021-07-28 19:14:55,262 - DEBUG : Reloading meta_variables
2021-07-28 19:14:55,264 - DEBUG : Reloaded meta_variables
2021-07-28 19:14:55,264 - DEBUG : Reloading dependency error_functions
2021-07-28 19:14:55,265 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:14:55,265 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:14:55,265 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:14:55,265 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:14:55,271 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:14:55,271 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:14:55,272 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:14:55,273 - DEBUG : Reloading dependency examples
2021-07-28 19:14:55,274 - DEBUG : Reloaded dependency examples
2021-07-28 19:14:55,274 - DEBUG : Reloading ribbon_functions
2021-07-28 19:14:55,277 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000011FAB890FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000011FAB8E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000011FAB8E3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000011FAB96C310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000011FAB932580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000011FAB96AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000011FAB917070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000011FAB9728E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000011FAB96A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000011FAB95C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000011FAB944CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000011FAB945F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000011FAB89EFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000011FAB9453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000011FAB890FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000011FAB8E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000011FAB8E3B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000011FAB96C310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000011FAB932580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000011FAB96AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000011FAB917070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000011FAB9728E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000011FAB96A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000011FAB95C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000011FAB944CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000011FAB945F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000011FAB89EFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000011FAB9453A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:14:55,277 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:14:55,278 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:14:55,278 - DEBUG : Reloading debugging
2021-07-28 19:14:55,279 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:14:55,279 - DEBUG : Reloaded debugging
2021-07-28 19:14:55,279 - DEBUG : Reloading selectiontools
2021-07-28 19:14:55,280 - DEBUG : Reloaded selectiontools
2021-07-28 19:14:55,339 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:14:55,344 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:14:55,360 - INFO : This product is licensed to 
2021-07-28 19:14:55,360 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:14:55,363 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:14:55,363 - DEBUG : Binding Python functions to Excel
2021-07-28 19:14:55,363 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:14:55,363 - DEBUG :     - pyxll_version
2021-07-28 19:14:55,363 - DEBUG :     - python_version
2021-07-28 19:14:55,363 - DEBUG :     - win32api_is_installed
2021-07-28 19:14:55,363 - DEBUG :     - win32com_is_installed
2021-07-28 19:14:55,363 - DEBUG :     - numpy_is_installed
2021-07-28 19:14:55,364 - DEBUG :     - pyxll_logfile
2021-07-28 19:14:55,364 - DEBUG :     - get_formula
2021-07-28 19:14:55,364 - DEBUG :     - get_array_formula
2021-07-28 19:14:55,364 - DEBUG :     - get_last_error
2021-07-28 19:14:55,364 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:14:55,364 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:14:55,364 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:14:55,364 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:14:55,364 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:14:55,364 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:14:55,364 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:14:55,364 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:14:55,364 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:14:55,364 - DEBUG :     - xl_cell_example
2021-07-28 19:14:55,364 - DEBUG :     - recalc_on_open_test
2021-07-28 19:14:55,364 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:14:55,364 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:14:55,364 - DEBUG :     - one_cell_one_sim
2021-07-28 19:14:55,365 - DEBUG :     - one_row_one_sim
2021-07-28 19:14:55,365 - DEBUG : Adding menus to Excel:
2021-07-28 19:14:55,365 - DEBUG :   - PyXLL
2021-07-28 19:14:55,365 - DEBUG :     - Reload PyXLL
2021-07-28 19:14:55,365 - DEBUG :     - Another example menu item
2021-07-28 19:14:55,365 - DEBUG :     - More Examples
2021-07-28 19:14:55,365 - DEBUG :       - Click me
2021-07-28 19:14:55,365 - DEBUG :       - Unicode Test
2021-07-28 19:14:55,365 - DEBUG :     - Open log file
2021-07-28 19:14:55,365 - DEBUG :     - Attach To VS Code
2021-07-28 19:14:55,365 - DEBUG :     - Custom Task Panes
2021-07-28 19:14:55,365 - DEBUG :       - Qt
2021-07-28 19:14:55,365 - DEBUG :       - Tk
2021-07-28 19:14:55,365 - DEBUG :       - Wx
2021-07-28 19:14:55,365 - DEBUG :     - Example Menu Item 1
2021-07-28 19:14:55,365 - DEBUG :     - Show last error
2021-07-28 19:14:55,365 - DEBUG :     - About PyXLL...
2021-07-28 19:14:55,365 - DEBUG :   - PyXLL example menu
2021-07-28 19:14:55,365 - DEBUG :     - Click me
2021-07-28 19:14:55,379 - DEBUG : Finished binding Python functions
2021-07-28 19:14:55,380 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:14:58,815 - DEBUG : pyxll._post_open complete.
2021-07-28 19:14:58,819 - DEBUG : PyXLL initialization complete.
2021-07-28 19:14:58,836 - DEBUG : Error checking license server.
2021-07-28 19:14:58,836 - DEBUG : Response code 0.
2021-07-28 19:14:58,836 - DEBUG : Payload missing from returned document
2021-07-28 19:14:58,836 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:15:10,539 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-28 19:15:21,801 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-28 19:15:24,629 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:15:24,630 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:15:24,652 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:15:24,698 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:15:24,702 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:15:24,702 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:15:24,705 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:15:24,712 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:16:29,211 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:16:29,211 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:16:29,211 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:16:29,211 - DEBUG : -------- PyXLL config --------
2021-07-28 19:16:29,211 - DEBUG : [LOG]
2021-07-28 19:16:29,211 - DEBUG : encoding = utf-8
2021-07-28 19:16:29,211 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:16:29,211 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:16:29,211 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:16:29,211 - DEBUG : verbosity = debug
2021-07-28 19:16:29,211 - DEBUG : 
2021-07-28 19:16:29,211 - DEBUG : [PYTHON]
2021-07-28 19:16:29,211 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:16:29,212 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:16:29,212 - DEBUG : 
2021-07-28 19:16:29,212 - DEBUG : [PYXLL]
2021-07-28 19:16:29,212 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:16:29,212 - DEBUG : developer_mode = 1
2021-07-28 19:16:29,212 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:16:29,212 - DEBUG : modules = 
2021-07-28 19:16:29,212 - DEBUG :     misc
2021-07-28 19:16:29,212 - DEBUG :     worksheetfuncs
2021-07-28 19:16:29,212 - DEBUG :     menus
2021-07-28 19:16:29,212 - DEBUG :     callbacks
2021-07-28 19:16:29,212 - DEBUG :     custom_task_panes
2021-07-28 19:16:29,212 - DEBUG :     test
2021-07-28 19:16:29,212 - DEBUG :     ribbon_functions
2021-07-28 19:16:29,212 - DEBUG :     debugging
2021-07-28 19:16:29,212 - DEBUG :     meta_variables
2021-07-28 19:16:29,212 - DEBUG :     selectiontools
2021-07-28 19:16:29,212 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:16:29,212 - DEBUG : ------------------------------
2021-07-28 19:16:29,213 - DEBUG : Attempting to load python38.dll
2021-07-28 19:16:29,215 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:16:29,216 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:16:29,216 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:16:29,365 - DEBUG : Calling Py_Initialize...
2021-07-28 19:16:29,612 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:16:29,613 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:16:29,613 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:16:29,613 - DEBUG : Python is initialized.
2021-07-28 19:16:29,614 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:16:29,615 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:16:29,615 - DEBUG : Looking for module 'site'...
2021-07-28 19:16:29,645 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:16:29,645 - DEBUG : Importing pyxll module
2021-07-28 19:16:29,645 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:16:29,645 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:16:29,645 - DEBUG :   Detected Python3
2021-07-28 19:16:29,685 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:16:29,702 - DEBUG : pyxll module imported
2021-07-28 19:16:29,702 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:16:29,702 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:16:29,703 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:16:29,704 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:16:29,704 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:16:29,985 - DEBUG : Importing misc
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:16:29,985 - DEBUG : Imported misc
2021-07-28 19:16:29,985 - DEBUG : Importing worksheetfuncs
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:16:29,985 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:16:29,985 - DEBUG : Imported worksheetfuncs
2021-07-28 19:16:29,991 - DEBUG : Importing menus
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:16:29,993 - DEBUG : Imported menus
2021-07-28 19:16:29,993 - DEBUG : Importing callbacks
2021-07-28 19:16:29,993 - DEBUG : Imported callbacks
2021-07-28 19:16:29,993 - DEBUG : Importing custom_task_panes
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:16:29,993 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:16:29,993 - DEBUG : Imported custom_task_panes
2021-07-28 19:16:29,993 - DEBUG : Importing test
2021-07-28 19:16:29,993 - DEBUG : Imported test
2021-07-28 19:16:29,993 - DEBUG : Importing ribbon_functions
2021-07-28 19:16:31,307 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:16:31,346 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:16:31,348 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:16:31,348 - DEBUG : interactive is False
2021-07-28 19:16:31,348 - DEBUG : platform is win32
2021-07-28 19:16:31,348 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_e90000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_e90000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:16:31,396 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:16:31,402 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:16:31,618 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:16:31,622 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FAC392FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FAC397FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FAC3986B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FAC3A202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FAC39D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FAC3A0AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FAC39B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FAC3A138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FAC3A0A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FAC39F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FAC39EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FAC39E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FAC393BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FAC39E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FAC392FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FAC397FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FAC3986B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FAC3A202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FAC39D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FAC3A0AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FAC39B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FAC3A138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FAC3A0A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FAC39F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FAC39EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FAC39E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FAC393BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FAC39E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:16:31,622 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:16:31,622 - DEBUG : Imported ribbon_functions
2021-07-28 19:16:31,622 - DEBUG : Importing debugging
2021-07-28 19:16:32,088 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:16:32,088 - DEBUG : Imported debugging
2021-07-28 19:16:32,088 - DEBUG : Importing meta_variables
2021-07-28 19:16:32,089 - DEBUG : Imported meta_variables
2021-07-28 19:16:32,089 - DEBUG : Importing selectiontools
2021-07-28 19:16:32,089 - DEBUG : Imported selectiontools
2021-07-28 19:16:32,128 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:16:32,130 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:16:32,150 - INFO : This product is licensed to 
2021-07-28 19:16:32,150 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:16:32,152 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:16:32,152 - DEBUG : Binding Python functions to Excel
2021-07-28 19:16:32,152 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:16:32,152 - DEBUG :     - pyxll_version
2021-07-28 19:16:32,152 - DEBUG :     - python_version
2021-07-28 19:16:32,152 - DEBUG :     - win32api_is_installed
2021-07-28 19:16:32,152 - DEBUG :     - win32com_is_installed
2021-07-28 19:16:32,152 - DEBUG :     - numpy_is_installed
2021-07-28 19:16:32,152 - DEBUG :     - pyxll_logfile
2021-07-28 19:16:32,152 - DEBUG :     - get_formula
2021-07-28 19:16:32,152 - DEBUG :     - get_array_formula
2021-07-28 19:16:32,153 - DEBUG :     - get_last_error
2021-07-28 19:16:32,153 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:16:32,153 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:16:32,153 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:16:32,153 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:16:32,153 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:16:32,153 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:16:32,153 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:16:32,153 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:16:32,153 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:16:32,153 - DEBUG :     - xl_cell_example
2021-07-28 19:16:32,153 - DEBUG :     - recalc_on_open_test
2021-07-28 19:16:32,153 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:16:32,153 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:16:32,153 - DEBUG :     - one_cell_one_sim
2021-07-28 19:16:32,153 - DEBUG :     - one_row_one_sim
2021-07-28 19:16:32,171 - DEBUG : Adding menus to Excel:
2021-07-28 19:16:32,171 - DEBUG :   - PyXLL
2021-07-28 19:16:32,171 - DEBUG :     - Reload PyXLL
2021-07-28 19:16:32,171 - DEBUG :     - Another example menu item
2021-07-28 19:16:32,171 - DEBUG :     - More Examples
2021-07-28 19:16:32,171 - DEBUG :       - Click me
2021-07-28 19:16:32,171 - DEBUG :       - Unicode Test
2021-07-28 19:16:32,171 - DEBUG :     - Open log file
2021-07-28 19:16:32,171 - DEBUG :     - Attach To VS Code
2021-07-28 19:16:32,171 - DEBUG :     - Custom Task Panes
2021-07-28 19:16:32,171 - DEBUG :       - Qt
2021-07-28 19:16:32,171 - DEBUG :       - Tk
2021-07-28 19:16:32,171 - DEBUG :       - Wx
2021-07-28 19:16:32,171 - DEBUG :     - Example Menu Item 1
2021-07-28 19:16:32,171 - DEBUG :     - Show last error
2021-07-28 19:16:32,171 - DEBUG :     - About PyXLL...
2021-07-28 19:16:32,171 - DEBUG :   - PyXLL example menu
2021-07-28 19:16:32,171 - DEBUG :     - Click me
2021-07-28 19:16:32,246 - DEBUG : Finished binding Python functions
2021-07-28 19:16:32,246 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:16:32,246 - DEBUG : pyxll._post_open complete.
2021-07-28 19:16:32,254 - DEBUG : PyXLL initialization complete.
2021-07-28 19:16:32,620 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:16:32,620 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:16:32,620 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:16:32,622 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:16:32,623 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:16:32,623 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:16:32,679 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:16:32,679 - DEBUG : Reloading misc
2021-07-28 19:16:32,680 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:16:32,680 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:16:32,680 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:16:32,681 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:16:32,682 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:16:32,682 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:16:32,682 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:16:32,683 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:16:32,683 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:16:32,683 - DEBUG : Reloaded misc
2021-07-28 19:16:32,683 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:16:32,684 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:16:32,685 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:16:32,685 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:16:32,685 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:16:32,686 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:16:32,686 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:16:32,686 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:16:32,687 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:16:32,687 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:16:32,687 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:16:32,688 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:16:32,688 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:16:32,688 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:16:32,688 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:16:32,688 - DEBUG : Reloading menus
2021-07-28 19:16:32,689 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:16:32,689 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:16:32,690 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:16:32,690 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:16:32,690 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:16:32,690 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:16:32,690 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:16:32,690 - DEBUG : Reloaded menus
2021-07-28 19:16:32,690 - DEBUG : Reloading callbacks
2021-07-28 19:16:32,691 - DEBUG : Reloaded callbacks
2021-07-28 19:16:32,692 - DEBUG : Reloading custom_task_panes
2021-07-28 19:16:32,692 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:16:32,693 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:16:32,693 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:16:32,693 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:16:32,693 - DEBUG : Reloading test
2021-07-28 19:16:32,694 - DEBUG : Reloaded test
2021-07-28 19:16:32,695 - DEBUG : Reloading meta_variables
2021-07-28 19:16:32,696 - DEBUG : Reloaded meta_variables
2021-07-28 19:16:32,696 - DEBUG : Reloading dependency error_functions
2021-07-28 19:16:32,697 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:16:32,697 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:16:32,698 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:16:32,698 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:16:32,699 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:16:32,699 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:16:32,700 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:16:32,700 - DEBUG : Reloading dependency examples
2021-07-28 19:16:32,702 - DEBUG : Reloaded dependency examples
2021-07-28 19:16:32,702 - DEBUG : Reloading ribbon_functions
2021-07-28 19:16:32,704 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FAC392FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FAC397FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FAC3986B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FAC3A202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FAC39D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FAC3A0AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FAC39B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FAC3A138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FAC3A0A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FAC39F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FAC39EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FAC39E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FAC393BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FAC39E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FAC392FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FAC397FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FAC3986B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FAC3A202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FAC39D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FAC3A0AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FAC39B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FAC3A138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FAC3A0A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FAC39F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FAC39EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FAC39E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FAC393BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FAC39E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:16:32,704 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:16:32,704 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:16:32,705 - DEBUG : Reloading debugging
2021-07-28 19:16:32,705 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:16:32,706 - DEBUG : Reloaded debugging
2021-07-28 19:16:32,706 - DEBUG : Reloading selectiontools
2021-07-28 19:16:32,707 - DEBUG : Reloaded selectiontools
2021-07-28 19:16:32,763 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:16:32,769 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:16:32,784 - INFO : This product is licensed to 
2021-07-28 19:16:32,784 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:16:32,791 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:16:32,791 - DEBUG : Binding Python functions to Excel
2021-07-28 19:16:32,791 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:16:32,791 - DEBUG :     - pyxll_version
2021-07-28 19:16:32,791 - DEBUG :     - python_version
2021-07-28 19:16:32,791 - DEBUG :     - win32api_is_installed
2021-07-28 19:16:32,791 - DEBUG :     - win32com_is_installed
2021-07-28 19:16:32,791 - DEBUG :     - numpy_is_installed
2021-07-28 19:16:32,791 - DEBUG :     - pyxll_logfile
2021-07-28 19:16:32,791 - DEBUG :     - get_formula
2021-07-28 19:16:32,792 - DEBUG :     - get_array_formula
2021-07-28 19:16:32,792 - DEBUG :     - get_last_error
2021-07-28 19:16:32,792 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:16:32,792 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:16:32,792 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:16:32,792 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:16:32,792 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:16:32,792 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:16:32,792 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:16:32,792 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:16:32,792 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:16:32,792 - DEBUG :     - xl_cell_example
2021-07-28 19:16:32,792 - DEBUG :     - recalc_on_open_test
2021-07-28 19:16:32,792 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:16:32,792 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:16:32,792 - DEBUG :     - one_cell_one_sim
2021-07-28 19:16:32,792 - DEBUG :     - one_row_one_sim
2021-07-28 19:16:32,797 - DEBUG : Adding menus to Excel:
2021-07-28 19:16:32,797 - DEBUG :   - PyXLL
2021-07-28 19:16:32,797 - DEBUG :     - Reload PyXLL
2021-07-28 19:16:32,797 - DEBUG :     - Another example menu item
2021-07-28 19:16:32,797 - DEBUG :     - More Examples
2021-07-28 19:16:32,797 - DEBUG :       - Click me
2021-07-28 19:16:32,797 - DEBUG :       - Unicode Test
2021-07-28 19:16:32,797 - DEBUG :     - Open log file
2021-07-28 19:16:32,797 - DEBUG :     - Attach To VS Code
2021-07-28 19:16:32,797 - DEBUG :     - Custom Task Panes
2021-07-28 19:16:32,797 - DEBUG :       - Qt
2021-07-28 19:16:32,797 - DEBUG :       - Tk
2021-07-28 19:16:32,797 - DEBUG :       - Wx
2021-07-28 19:16:32,797 - DEBUG :     - Example Menu Item 1
2021-07-28 19:16:32,797 - DEBUG :     - Show last error
2021-07-28 19:16:32,797 - DEBUG :     - About PyXLL...
2021-07-28 19:16:32,797 - DEBUG :   - PyXLL example menu
2021-07-28 19:16:32,797 - DEBUG :     - Click me
2021-07-28 19:16:32,801 - DEBUG : Finished binding Python functions
2021-07-28 19:16:32,801 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:16:34,006 - DEBUG : pyxll._post_open complete.
2021-07-28 19:16:34,007 - DEBUG : PyXLL initialization complete.
2021-07-28 19:16:37,452 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:16:37,452 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:16:37,452 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:16:37,453 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:16:37,454 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:16:37,454 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:16:37,493 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:16:37,493 - DEBUG : Reloading misc
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:16:37,495 - DEBUG : Reloaded misc
2021-07-28 19:16:37,495 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:16:37,495 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:16:37,495 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:16:37,495 - DEBUG : Reloading menus
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:16:37,495 - DEBUG : Reloaded menus
2021-07-28 19:16:37,495 - DEBUG : Reloading callbacks
2021-07-28 19:16:37,495 - DEBUG : Reloaded callbacks
2021-07-28 19:16:37,495 - DEBUG : Reloading custom_task_panes
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:16:37,495 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:16:37,495 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:16:37,495 - DEBUG : Reloading test
2021-07-28 19:16:37,503 - DEBUG : Reloaded test
2021-07-28 19:16:37,503 - DEBUG : Reloading meta_variables
2021-07-28 19:16:37,503 - DEBUG : Reloaded meta_variables
2021-07-28 19:16:37,503 - DEBUG : Reloading dependency error_functions
2021-07-28 19:16:37,503 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:16:37,503 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:16:37,506 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:16:37,506 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:16:37,506 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:16:37,506 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:16:37,506 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:16:37,506 - DEBUG : Reloading dependency examples
2021-07-28 19:16:37,506 - DEBUG : Reloaded dependency examples
2021-07-28 19:16:37,506 - DEBUG : Reloading ribbon_functions
2021-07-28 19:16:37,506 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FAC392FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FAC397FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FAC3986B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FAC3A202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FAC39D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FAC3A0AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FAC39B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FAC3A138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FAC3A0A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FAC39F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FAC39EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FAC39E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FAC393BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FAC39E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FAC392FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FAC397FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FAC3986B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FAC3A202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FAC39D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FAC3A0AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FAC39B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FAC3A138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FAC3A0A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FAC39F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FAC39EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FAC39E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FAC393BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FAC39E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:16:37,506 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:16:37,506 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:16:37,506 - DEBUG : Reloading debugging
2021-07-28 19:16:37,506 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:16:37,506 - DEBUG : Reloaded debugging
2021-07-28 19:16:37,506 - DEBUG : Reloading selectiontools
2021-07-28 19:16:37,506 - DEBUG : Reloaded selectiontools
2021-07-28 19:16:37,547 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:16:37,547 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:16:37,566 - INFO : This product is licensed to 
2021-07-28 19:16:37,566 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:16:37,568 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:16:37,568 - DEBUG : Binding Python functions to Excel
2021-07-28 19:16:37,568 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:16:37,568 - DEBUG :     - pyxll_version
2021-07-28 19:16:37,568 - DEBUG :     - python_version
2021-07-28 19:16:37,568 - DEBUG :     - win32api_is_installed
2021-07-28 19:16:37,568 - DEBUG :     - win32com_is_installed
2021-07-28 19:16:37,569 - DEBUG :     - numpy_is_installed
2021-07-28 19:16:37,569 - DEBUG :     - pyxll_logfile
2021-07-28 19:16:37,569 - DEBUG :     - get_formula
2021-07-28 19:16:37,569 - DEBUG :     - get_array_formula
2021-07-28 19:16:37,569 - DEBUG :     - get_last_error
2021-07-28 19:16:37,569 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:16:37,569 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:16:37,569 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:16:37,569 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:16:37,569 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:16:37,569 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:16:37,569 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:16:37,569 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:16:37,569 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:16:37,569 - DEBUG :     - xl_cell_example
2021-07-28 19:16:37,569 - DEBUG :     - recalc_on_open_test
2021-07-28 19:16:37,569 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:16:37,569 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:16:37,569 - DEBUG :     - one_cell_one_sim
2021-07-28 19:16:37,569 - DEBUG :     - one_row_one_sim
2021-07-28 19:16:37,573 - DEBUG : Adding menus to Excel:
2021-07-28 19:16:37,573 - DEBUG :   - PyXLL
2021-07-28 19:16:37,573 - DEBUG :     - Reload PyXLL
2021-07-28 19:16:37,573 - DEBUG :     - Another example menu item
2021-07-28 19:16:37,573 - DEBUG :     - More Examples
2021-07-28 19:16:37,573 - DEBUG :       - Click me
2021-07-28 19:16:37,573 - DEBUG :       - Unicode Test
2021-07-28 19:16:37,573 - DEBUG :     - Open log file
2021-07-28 19:16:37,573 - DEBUG :     - Attach To VS Code
2021-07-28 19:16:37,573 - DEBUG :     - Custom Task Panes
2021-07-28 19:16:37,573 - DEBUG :       - Qt
2021-07-28 19:16:37,573 - DEBUG :       - Tk
2021-07-28 19:16:37,573 - DEBUG :       - Wx
2021-07-28 19:16:37,573 - DEBUG :     - Example Menu Item 1
2021-07-28 19:16:37,573 - DEBUG :     - Show last error
2021-07-28 19:16:37,573 - DEBUG :     - About PyXLL...
2021-07-28 19:16:37,573 - DEBUG :   - PyXLL example menu
2021-07-28 19:16:37,573 - DEBUG :     - Click me
2021-07-28 19:16:37,576 - DEBUG : Finished binding Python functions
2021-07-28 19:16:37,576 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:16:38,940 - DEBUG : pyxll._post_open complete.
2021-07-28 19:16:38,943 - DEBUG : PyXLL initialization complete.
2021-07-28 19:16:41,755 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:16:41,756 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:16:41,778 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:16:41,848 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:16:41,858 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:16:41,858 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:16:41,865 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:16:41,882 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:16:41,895 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:16:41,895 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:16:41,900 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:16:41,911 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:32:30,646 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:32:30,646 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:32:30,646 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:32:30,647 - DEBUG : -------- PyXLL config --------
2021-07-28 19:32:30,647 - DEBUG : [LOG]
2021-07-28 19:32:30,647 - DEBUG : encoding = utf-8
2021-07-28 19:32:30,647 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:32:30,647 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:32:30,647 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:32:30,647 - DEBUG : verbosity = debug
2021-07-28 19:32:30,647 - DEBUG : 
2021-07-28 19:32:30,647 - DEBUG : [PYTHON]
2021-07-28 19:32:30,647 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:32:30,647 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:32:30,647 - DEBUG : 
2021-07-28 19:32:30,647 - DEBUG : [PYXLL]
2021-07-28 19:32:30,647 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:32:30,647 - DEBUG : developer_mode = 1
2021-07-28 19:32:30,647 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:32:30,647 - DEBUG : modules = 
2021-07-28 19:32:30,647 - DEBUG :     misc
2021-07-28 19:32:30,647 - DEBUG :     worksheetfuncs
2021-07-28 19:32:30,647 - DEBUG :     menus
2021-07-28 19:32:30,647 - DEBUG :     callbacks
2021-07-28 19:32:30,647 - DEBUG :     custom_task_panes
2021-07-28 19:32:30,647 - DEBUG :     test
2021-07-28 19:32:30,647 - DEBUG :     ribbon_functions
2021-07-28 19:32:30,647 - DEBUG :     debugging
2021-07-28 19:32:30,647 - DEBUG :     meta_variables
2021-07-28 19:32:30,647 - DEBUG :     selectiontools
2021-07-28 19:32:30,647 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:32:30,647 - DEBUG : ------------------------------
2021-07-28 19:32:30,647 - DEBUG : Attempting to load python38.dll
2021-07-28 19:32:30,650 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:32:30,651 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:32:30,651 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:32:30,786 - DEBUG : Calling Py_Initialize...
2021-07-28 19:32:30,968 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:32:30,968 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:32:30,969 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:32:30,969 - DEBUG : Python is initialized.
2021-07-28 19:32:30,969 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:32:30,971 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:32:30,971 - DEBUG : Looking for module 'site'...
2021-07-28 19:32:30,998 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:32:30,998 - DEBUG : Importing pyxll module
2021-07-28 19:32:30,998 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:32:30,998 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:32:30,998 - DEBUG :   Detected Python3
2021-07-28 19:32:31,082 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:32:31,087 - DEBUG : pyxll module imported
2021-07-28 19:32:31,087 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:32:31,087 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:32:31,087 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:32:31,093 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:32:31,093 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:32:31,322 - DEBUG : Importing misc
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:32:31,323 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:32:31,325 - DEBUG : Imported misc
2021-07-28 19:32:31,325 - DEBUG : Importing worksheetfuncs
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:32:31,325 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:32:31,327 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:32:31,327 - DEBUG : Imported worksheetfuncs
2021-07-28 19:32:31,329 - DEBUG : Importing menus
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:32:31,332 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:32:31,332 - DEBUG : Imported menus
2021-07-28 19:32:31,332 - DEBUG : Importing callbacks
2021-07-28 19:32:31,332 - DEBUG : Imported callbacks
2021-07-28 19:32:31,332 - DEBUG : Importing custom_task_panes
2021-07-28 19:32:31,335 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:32:31,335 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:32:31,335 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:32:31,335 - DEBUG : Imported custom_task_panes
2021-07-28 19:32:31,335 - DEBUG : Importing test
2021-07-28 19:32:31,335 - DEBUG : Imported test
2021-07-28 19:32:31,336 - DEBUG : Importing ribbon_functions
2021-07-28 19:32:32,828 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:32:32,852 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:32:32,854 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:32:32,854 - DEBUG : interactive is False
2021-07-28 19:32:32,854 - DEBUG : platform is win32
2021-07-28 19:32:32,854 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_c10000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_c10000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:32:32,895 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:32:32,903 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:32:33,141 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:32:33,142 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000019C49DFFFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000019C49E4FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000019C49E52B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000019C49EED2E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000019C49EA1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000019C49EDAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000019C49E88070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000019C49EE28E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000019C49EDA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000019C49EC6490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000019C49EB4D00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000019C49EB1F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000019C49E0AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000019C49EB13A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000019C49DFFFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000019C49E4FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000019C49E52B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000019C49EED2E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000019C49EA1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000019C49EDAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000019C49E88070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000019C49EE28E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000019C49EDA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000019C49EC6490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000019C49EB4D00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000019C49EB1F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000019C49E0AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000019C49EB13A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:32:33,142 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:32:33,142 - DEBUG : Imported ribbon_functions
2021-07-28 19:32:33,142 - DEBUG : Importing debugging
2021-07-28 19:32:33,598 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:32:33,598 - DEBUG : Imported debugging
2021-07-28 19:32:33,598 - DEBUG : Importing meta_variables
2021-07-28 19:32:33,598 - DEBUG : Imported meta_variables
2021-07-28 19:32:33,598 - DEBUG : Importing selectiontools
2021-07-28 19:32:33,598 - DEBUG : Imported selectiontools
2021-07-28 19:32:33,637 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:32:33,639 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:32:33,654 - INFO : This product is licensed to 
2021-07-28 19:32:33,654 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:32:33,656 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:32:33,656 - DEBUG : Binding Python functions to Excel
2021-07-28 19:32:33,656 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:32:33,656 - DEBUG :     - pyxll_version
2021-07-28 19:32:33,656 - DEBUG :     - python_version
2021-07-28 19:32:33,656 - DEBUG :     - win32api_is_installed
2021-07-28 19:32:33,656 - DEBUG :     - win32com_is_installed
2021-07-28 19:32:33,656 - DEBUG :     - numpy_is_installed
2021-07-28 19:32:33,656 - DEBUG :     - pyxll_logfile
2021-07-28 19:32:33,656 - DEBUG :     - get_formula
2021-07-28 19:32:33,656 - DEBUG :     - get_array_formula
2021-07-28 19:32:33,656 - DEBUG :     - get_last_error
2021-07-28 19:32:33,656 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:32:33,656 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:32:33,656 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:32:33,656 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:32:33,657 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:32:33,657 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:32:33,657 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:32:33,657 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:32:33,657 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:32:33,657 - DEBUG :     - xl_cell_example
2021-07-28 19:32:33,657 - DEBUG :     - recalc_on_open_test
2021-07-28 19:32:33,657 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:32:33,657 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:32:33,657 - DEBUG :     - one_cell_one_sim
2021-07-28 19:32:33,657 - DEBUG :     - one_row_one_sim
2021-07-28 19:32:33,668 - DEBUG : Adding menus to Excel:
2021-07-28 19:32:33,668 - DEBUG :   - PyXLL
2021-07-28 19:32:33,668 - DEBUG :     - Reload PyXLL
2021-07-28 19:32:33,668 - DEBUG :     - Another example menu item
2021-07-28 19:32:33,668 - DEBUG :     - More Examples
2021-07-28 19:32:33,668 - DEBUG :       - Click me
2021-07-28 19:32:33,668 - DEBUG :       - Unicode Test
2021-07-28 19:32:33,668 - DEBUG :     - Open log file
2021-07-28 19:32:33,668 - DEBUG :     - Attach To VS Code
2021-07-28 19:32:33,668 - DEBUG :     - Custom Task Panes
2021-07-28 19:32:33,668 - DEBUG :       - Qt
2021-07-28 19:32:33,668 - DEBUG :       - Tk
2021-07-28 19:32:33,668 - DEBUG :       - Wx
2021-07-28 19:32:33,668 - DEBUG :     - Example Menu Item 1
2021-07-28 19:32:33,668 - DEBUG :     - Show last error
2021-07-28 19:32:33,668 - DEBUG :     - About PyXLL...
2021-07-28 19:32:33,668 - DEBUG :   - PyXLL example menu
2021-07-28 19:32:33,668 - DEBUG :     - Click me
2021-07-28 19:32:33,714 - DEBUG : Finished binding Python functions
2021-07-28 19:32:33,714 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:32:33,714 - DEBUG : pyxll._post_open complete.
2021-07-28 19:32:33,729 - DEBUG : PyXLL initialization complete.
2021-07-28 19:32:33,867 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:32:33,867 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:32:33,872 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:32:33,890 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:32:34,382 - DEBUG : Error checking license server.
2021-07-28 19:32:34,382 - DEBUG : Response code 0.
2021-07-28 19:32:34,382 - DEBUG : Payload missing from returned document
2021-07-28 19:32:34,382 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:34:31,401 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:34:31,401 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:34:31,401 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:34:31,401 - DEBUG : -------- PyXLL config --------
2021-07-28 19:34:31,401 - DEBUG : [LOG]
2021-07-28 19:34:31,401 - DEBUG : encoding = utf-8
2021-07-28 19:34:31,401 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:34:31,401 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:34:31,401 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:34:31,401 - DEBUG : verbosity = debug
2021-07-28 19:34:31,401 - DEBUG : 
2021-07-28 19:34:31,401 - DEBUG : [PYTHON]
2021-07-28 19:34:31,401 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:34:31,401 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:34:31,401 - DEBUG : 
2021-07-28 19:34:31,401 - DEBUG : [PYXLL]
2021-07-28 19:34:31,401 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:34:31,401 - DEBUG : developer_mode = 1
2021-07-28 19:34:31,401 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:34:31,401 - DEBUG : modules = 
2021-07-28 19:34:31,401 - DEBUG :     misc
2021-07-28 19:34:31,401 - DEBUG :     worksheetfuncs
2021-07-28 19:34:31,401 - DEBUG :     menus
2021-07-28 19:34:31,402 - DEBUG :     callbacks
2021-07-28 19:34:31,402 - DEBUG :     custom_task_panes
2021-07-28 19:34:31,402 - DEBUG :     test
2021-07-28 19:34:31,402 - DEBUG :     ribbon_functions
2021-07-28 19:34:31,402 - DEBUG :     debugging
2021-07-28 19:34:31,402 - DEBUG :     meta_variables
2021-07-28 19:34:31,402 - DEBUG :     selectiontools
2021-07-28 19:34:31,402 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:34:31,402 - DEBUG : ------------------------------
2021-07-28 19:34:31,403 - DEBUG : Attempting to load python38.dll
2021-07-28 19:34:31,405 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:34:31,406 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:34:31,406 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:34:31,567 - DEBUG : Calling Py_Initialize...
2021-07-28 19:34:31,743 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:34:31,744 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:34:31,744 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:34:31,744 - DEBUG : Python is initialized.
2021-07-28 19:34:31,746 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:34:31,747 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:34:31,747 - DEBUG : Looking for module 'site'...
2021-07-28 19:34:31,799 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:34:31,802 - DEBUG : Importing pyxll module
2021-07-28 19:34:31,802 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:34:31,802 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:34:31,802 - DEBUG :   Detected Python3
2021-07-28 19:34:31,872 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:34:31,881 - DEBUG : pyxll module imported
2021-07-28 19:34:31,882 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:34:31,882 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:34:31,882 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:34:31,884 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:34:31,884 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:34:32,197 - DEBUG : Importing misc
2021-07-28 19:34:32,197 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:34:32,197 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:34:32,198 - DEBUG : Imported misc
2021-07-28 19:34:32,198 - DEBUG : Importing worksheetfuncs
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:34:32,198 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:34:32,203 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:34:32,203 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:34:32,203 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:34:32,203 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:34:32,204 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:34:32,204 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:34:32,204 - DEBUG : Imported worksheetfuncs
2021-07-28 19:34:32,204 - DEBUG : Importing menus
2021-07-28 19:34:32,209 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:34:32,209 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:34:32,210 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:34:32,210 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:34:32,210 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:34:32,210 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:34:32,210 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:34:32,210 - DEBUG : Imported menus
2021-07-28 19:34:32,210 - DEBUG : Importing callbacks
2021-07-28 19:34:32,212 - DEBUG : Imported callbacks
2021-07-28 19:34:32,212 - DEBUG : Importing custom_task_panes
2021-07-28 19:34:32,213 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:34:32,213 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:34:32,213 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:34:32,213 - DEBUG : Imported custom_task_panes
2021-07-28 19:34:32,213 - DEBUG : Importing test
2021-07-28 19:34:32,214 - DEBUG : Imported test
2021-07-28 19:34:32,215 - DEBUG : Importing ribbon_functions
2021-07-28 19:34:33,809 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:34:33,838 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:34:33,842 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:34:33,842 - DEBUG : interactive is False
2021-07-28 19:34:33,842 - DEBUG : platform is win32
2021-07-28 19:34:33,842 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_bb0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_bb0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:34:33,919 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:34:33,935 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:34:34,199 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:34:34,203 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000135AF52FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000135AF57FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000135AF581B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000135AF61D2E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000135AF5D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000135AF60AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000135AF5B8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000135AF6128E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000135AF60A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000135AF5F6490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000135AF5DFD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000135AF5E2F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000135AF53BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000135AF5E23A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000135AF52FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000135AF57FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000135AF581B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000135AF61D2E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000135AF5D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000135AF60AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000135AF5B8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000135AF6128E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000135AF60A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000135AF5F6490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000135AF5DFD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000135AF5E2F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000135AF53BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000135AF5E23A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:34:34,204 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:34:34,204 - DEBUG : Imported ribbon_functions
2021-07-28 19:34:34,204 - DEBUG : Importing debugging
2021-07-28 19:34:34,765 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:34:34,765 - DEBUG : Imported debugging
2021-07-28 19:34:34,765 - DEBUG : Importing meta_variables
2021-07-28 19:34:34,765 - DEBUG : Imported meta_variables
2021-07-28 19:34:34,765 - DEBUG : Importing selectiontools
2021-07-28 19:34:34,770 - DEBUG : Imported selectiontools
2021-07-28 19:34:34,818 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:34:34,823 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:34:34,841 - INFO : This product is licensed to 
2021-07-28 19:34:34,841 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:34:34,842 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:34:34,842 - DEBUG : Binding Python functions to Excel
2021-07-28 19:34:34,843 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:34:34,843 - DEBUG :     - pyxll_version
2021-07-28 19:34:34,843 - DEBUG :     - python_version
2021-07-28 19:34:34,843 - DEBUG :     - win32api_is_installed
2021-07-28 19:34:34,843 - DEBUG :     - win32com_is_installed
2021-07-28 19:34:34,843 - DEBUG :     - numpy_is_installed
2021-07-28 19:34:34,843 - DEBUG :     - pyxll_logfile
2021-07-28 19:34:34,843 - DEBUG :     - get_formula
2021-07-28 19:34:34,843 - DEBUG :     - get_array_formula
2021-07-28 19:34:34,843 - DEBUG :     - get_last_error
2021-07-28 19:34:34,843 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:34:34,843 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:34:34,843 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:34:34,843 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:34:34,844 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:34:34,844 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:34:34,844 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:34:34,844 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:34:34,844 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:34:34,844 - DEBUG :     - xl_cell_example
2021-07-28 19:34:34,844 - DEBUG :     - recalc_on_open_test
2021-07-28 19:34:34,844 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:34:34,845 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:34:34,845 - DEBUG :     - one_cell_one_sim
2021-07-28 19:34:34,845 - DEBUG :     - one_row_one_sim
2021-07-28 19:34:34,863 - DEBUG : Adding menus to Excel:
2021-07-28 19:34:34,863 - DEBUG :   - PyXLL
2021-07-28 19:34:34,863 - DEBUG :     - Reload PyXLL
2021-07-28 19:34:34,863 - DEBUG :     - Another example menu item
2021-07-28 19:34:34,863 - DEBUG :     - More Examples
2021-07-28 19:34:34,863 - DEBUG :       - Click me
2021-07-28 19:34:34,863 - DEBUG :       - Unicode Test
2021-07-28 19:34:34,863 - DEBUG :     - Open log file
2021-07-28 19:34:34,863 - DEBUG :     - Attach To VS Code
2021-07-28 19:34:34,863 - DEBUG :     - Custom Task Panes
2021-07-28 19:34:34,863 - DEBUG :       - Qt
2021-07-28 19:34:34,863 - DEBUG :       - Tk
2021-07-28 19:34:34,863 - DEBUG :       - Wx
2021-07-28 19:34:34,863 - DEBUG :     - Example Menu Item 1
2021-07-28 19:34:34,863 - DEBUG :     - Show last error
2021-07-28 19:34:34,863 - DEBUG :     - About PyXLL...
2021-07-28 19:34:34,863 - DEBUG :   - PyXLL example menu
2021-07-28 19:34:34,863 - DEBUG :     - Click me
2021-07-28 19:34:34,935 - DEBUG : Finished binding Python functions
2021-07-28 19:34:34,935 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:34:34,935 - DEBUG : pyxll._post_open complete.
2021-07-28 19:34:34,940 - DEBUG : PyXLL initialization complete.
2021-07-28 19:34:35,163 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:34:35,163 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:34:35,183 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:34:35,232 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:34:35,720 - DEBUG : Error checking license server.
2021-07-28 19:34:35,720 - DEBUG : Response code 0.
2021-07-28 19:34:35,720 - DEBUG : Payload missing from returned document
2021-07-28 19:34:35,720 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:36:08,508 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:36:08,508 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:36:08,508 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:36:08,508 - DEBUG : -------- PyXLL config --------
2021-07-28 19:36:08,508 - DEBUG : [LOG]
2021-07-28 19:36:08,508 - DEBUG : encoding = utf-8
2021-07-28 19:36:08,508 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:36:08,508 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:36:08,508 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:36:08,508 - DEBUG : verbosity = debug
2021-07-28 19:36:08,508 - DEBUG : 
2021-07-28 19:36:08,508 - DEBUG : [PYTHON]
2021-07-28 19:36:08,508 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:36:08,508 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:36:08,508 - DEBUG : 
2021-07-28 19:36:08,508 - DEBUG : [PYXLL]
2021-07-28 19:36:08,508 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:36:08,508 - DEBUG : developer_mode = 1
2021-07-28 19:36:08,508 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:36:08,508 - DEBUG : modules = 
2021-07-28 19:36:08,508 - DEBUG :     misc
2021-07-28 19:36:08,508 - DEBUG :     worksheetfuncs
2021-07-28 19:36:08,508 - DEBUG :     menus
2021-07-28 19:36:08,508 - DEBUG :     callbacks
2021-07-28 19:36:08,508 - DEBUG :     custom_task_panes
2021-07-28 19:36:08,508 - DEBUG :     test
2021-07-28 19:36:08,508 - DEBUG :     ribbon_functions
2021-07-28 19:36:08,508 - DEBUG :     debugging
2021-07-28 19:36:08,509 - DEBUG :     meta_variables
2021-07-28 19:36:08,509 - DEBUG :     selectiontools
2021-07-28 19:36:08,509 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:36:08,509 - DEBUG : ------------------------------
2021-07-28 19:36:08,510 - DEBUG : Attempting to load python38.dll
2021-07-28 19:36:08,513 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:36:08,515 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:36:08,515 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:36:08,725 - DEBUG : Calling Py_Initialize...
2021-07-28 19:36:09,102 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:36:09,104 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:36:09,104 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:36:09,104 - DEBUG : Python is initialized.
2021-07-28 19:36:09,105 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:36:09,114 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:36:09,114 - DEBUG : Looking for module 'site'...
2021-07-28 19:36:09,180 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:36:09,180 - DEBUG : Importing pyxll module
2021-07-28 19:36:09,180 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:36:09,180 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:36:09,180 - DEBUG :   Detected Python3
2021-07-28 19:36:09,225 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:36:09,229 - DEBUG : pyxll module imported
2021-07-28 19:36:09,229 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:36:09,229 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:36:09,230 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:36:09,232 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:36:09,233 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:36:09,492 - DEBUG : Importing misc
2021-07-28 19:36:09,492 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:36:09,492 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:36:09,492 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:36:09,492 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:36:09,495 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:36:09,495 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:36:09,495 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:36:09,496 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:36:09,496 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:36:09,496 - DEBUG : Imported misc
2021-07-28 19:36:09,496 - DEBUG : Importing worksheetfuncs
2021-07-28 19:36:09,497 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:36:09,497 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:36:09,498 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:36:09,498 - DEBUG : Imported worksheetfuncs
2021-07-28 19:36:09,498 - DEBUG : Importing menus
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:36:09,502 - DEBUG : Imported menus
2021-07-28 19:36:09,502 - DEBUG : Importing callbacks
2021-07-28 19:36:09,502 - DEBUG : Imported callbacks
2021-07-28 19:36:09,502 - DEBUG : Importing custom_task_panes
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:36:09,502 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:36:09,502 - DEBUG : Imported custom_task_panes
2021-07-28 19:36:09,502 - DEBUG : Importing test
2021-07-28 19:36:09,502 - DEBUG : Imported test
2021-07-28 19:36:09,502 - DEBUG : Importing ribbon_functions
2021-07-28 19:36:11,206 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:36:11,275 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:36:11,279 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:36:11,280 - DEBUG : interactive is False
2021-07-28 19:36:11,280 - DEBUG : platform is win32
2021-07-28 19:36:11,280 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_1f0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_1f0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:36:11,384 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:36:11,395 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:36:11,766 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:36:11,775 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002506C3DFFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002506C430C40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002506C43AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002506C4D02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002506C482580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002506C4BAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002506C467070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002506C4C28E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002506C4BA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002506C4A7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002506C499D00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002506C496F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002506C3EBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002506C4963A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002506C3DFFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002506C430C40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002506C43AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002506C4D02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002506C482580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002506C4BAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002506C467070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002506C4C28E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002506C4BA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002506C4A7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002506C499D00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002506C496F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002506C3EBFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002506C4963A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:36:11,775 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:36:11,776 - DEBUG : Imported ribbon_functions
2021-07-28 19:36:11,776 - DEBUG : Importing debugging
2021-07-28 19:36:12,452 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:36:12,452 - DEBUG : Imported debugging
2021-07-28 19:36:12,452 - DEBUG : Importing meta_variables
2021-07-28 19:36:12,455 - DEBUG : Imported meta_variables
2021-07-28 19:36:12,455 - DEBUG : Importing selectiontools
2021-07-28 19:36:12,456 - DEBUG : Imported selectiontools
2021-07-28 19:36:12,500 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:36:12,508 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:36:12,529 - INFO : This product is licensed to 
2021-07-28 19:36:12,529 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:36:12,531 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:36:12,531 - DEBUG : Binding Python functions to Excel
2021-07-28 19:36:12,531 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:36:12,531 - DEBUG :     - pyxll_version
2021-07-28 19:36:12,531 - DEBUG :     - python_version
2021-07-28 19:36:12,532 - DEBUG :     - win32api_is_installed
2021-07-28 19:36:12,532 - DEBUG :     - win32com_is_installed
2021-07-28 19:36:12,532 - DEBUG :     - numpy_is_installed
2021-07-28 19:36:12,532 - DEBUG :     - pyxll_logfile
2021-07-28 19:36:12,532 - DEBUG :     - get_formula
2021-07-28 19:36:12,532 - DEBUG :     - get_array_formula
2021-07-28 19:36:12,532 - DEBUG :     - get_last_error
2021-07-28 19:36:12,532 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:36:12,532 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:36:12,532 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:36:12,532 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:36:12,532 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:36:12,532 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:36:12,532 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:36:12,532 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:36:12,532 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:36:12,532 - DEBUG :     - xl_cell_example
2021-07-28 19:36:12,532 - DEBUG :     - recalc_on_open_test
2021-07-28 19:36:12,532 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:36:12,533 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:36:12,533 - DEBUG :     - one_cell_one_sim
2021-07-28 19:36:12,533 - DEBUG :     - one_row_one_sim
2021-07-28 19:36:12,541 - DEBUG : Adding menus to Excel:
2021-07-28 19:36:12,541 - DEBUG :   - PyXLL
2021-07-28 19:36:12,541 - DEBUG :     - Reload PyXLL
2021-07-28 19:36:12,541 - DEBUG :     - Another example menu item
2021-07-28 19:36:12,541 - DEBUG :     - More Examples
2021-07-28 19:36:12,541 - DEBUG :       - Click me
2021-07-28 19:36:12,541 - DEBUG :       - Unicode Test
2021-07-28 19:36:12,541 - DEBUG :     - Open log file
2021-07-28 19:36:12,541 - DEBUG :     - Attach To VS Code
2021-07-28 19:36:12,541 - DEBUG :     - Custom Task Panes
2021-07-28 19:36:12,541 - DEBUG :       - Qt
2021-07-28 19:36:12,541 - DEBUG :       - Tk
2021-07-28 19:36:12,541 - DEBUG :       - Wx
2021-07-28 19:36:12,541 - DEBUG :     - Example Menu Item 1
2021-07-28 19:36:12,541 - DEBUG :     - Show last error
2021-07-28 19:36:12,541 - DEBUG :     - About PyXLL...
2021-07-28 19:36:12,541 - DEBUG :   - PyXLL example menu
2021-07-28 19:36:12,541 - DEBUG :     - Click me
2021-07-28 19:36:12,603 - DEBUG : Finished binding Python functions
2021-07-28 19:36:12,604 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:36:12,604 - DEBUG : pyxll._post_open complete.
2021-07-28 19:36:12,607 - DEBUG : PyXLL initialization complete.
2021-07-28 19:36:12,744 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:36:12,744 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:36:12,758 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:36:12,813 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:36:14,258 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:36:14,258 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:36:14,258 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:36:14,258 - DEBUG : -------- PyXLL config --------
2021-07-28 19:36:14,258 - DEBUG : [LOG]
2021-07-28 19:36:14,258 - DEBUG : encoding = utf-8
2021-07-28 19:36:14,258 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:36:14,258 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:36:14,258 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:36:14,258 - DEBUG : verbosity = debug
2021-07-28 19:36:14,258 - DEBUG : 
2021-07-28 19:36:14,258 - DEBUG : [PYTHON]
2021-07-28 19:36:14,258 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:36:14,258 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:36:14,258 - DEBUG : 
2021-07-28 19:36:14,258 - DEBUG : [PYXLL]
2021-07-28 19:36:14,258 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:36:14,258 - DEBUG : developer_mode = 1
2021-07-28 19:36:14,258 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:36:14,258 - DEBUG : modules = 
2021-07-28 19:36:14,258 - DEBUG :     misc
2021-07-28 19:36:14,258 - DEBUG :     worksheetfuncs
2021-07-28 19:36:14,258 - DEBUG :     menus
2021-07-28 19:36:14,259 - DEBUG :     callbacks
2021-07-28 19:36:14,259 - DEBUG :     custom_task_panes
2021-07-28 19:36:14,259 - DEBUG :     test
2021-07-28 19:36:14,259 - DEBUG :     ribbon_functions
2021-07-28 19:36:14,259 - DEBUG :     debugging
2021-07-28 19:36:14,259 - DEBUG :     meta_variables
2021-07-28 19:36:14,259 - DEBUG :     selectiontools
2021-07-28 19:36:14,259 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:36:14,259 - DEBUG : ------------------------------
2021-07-28 19:36:14,260 - DEBUG : Attempting to load python38.dll
2021-07-28 19:36:14,261 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:36:14,262 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:36:14,262 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:36:14,517 - DEBUG : Calling Py_Initialize...
2021-07-28 19:36:14,789 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:36:14,789 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:36:14,789 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:36:14,789 - DEBUG : Python is initialized.
2021-07-28 19:36:14,790 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:36:14,793 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:36:14,793 - DEBUG : Looking for module 'site'...
2021-07-28 19:36:14,818 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:36:14,822 - DEBUG : Importing pyxll module
2021-07-28 19:36:14,822 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:36:14,822 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:36:14,822 - DEBUG :   Detected Python3
2021-07-28 19:36:14,863 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:36:14,867 - DEBUG : pyxll module imported
2021-07-28 19:36:14,867 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:36:14,867 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:36:14,867 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:36:14,869 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:36:14,869 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:36:15,164 - DEBUG : Importing misc
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:36:15,172 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:36:15,177 - DEBUG : Imported misc
2021-07-28 19:36:15,177 - DEBUG : Importing worksheetfuncs
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:36:15,177 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:36:15,182 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:36:15,182 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:36:15,182 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:36:15,182 - DEBUG : Imported worksheetfuncs
2021-07-28 19:36:15,183 - DEBUG : Importing menus
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:36:15,184 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:36:15,184 - DEBUG : Imported menus
2021-07-28 19:36:15,184 - DEBUG : Importing callbacks
2021-07-28 19:36:15,192 - DEBUG : Imported callbacks
2021-07-28 19:36:15,192 - DEBUG : Importing custom_task_panes
2021-07-28 19:36:15,192 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:36:15,192 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:36:15,192 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:36:15,192 - DEBUG : Imported custom_task_panes
2021-07-28 19:36:15,192 - DEBUG : Importing test
2021-07-28 19:36:15,192 - DEBUG : Imported test
2021-07-28 19:36:15,192 - DEBUG : Importing ribbon_functions
2021-07-28 19:36:16,769 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:36:16,823 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:36:16,823 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:36:16,823 - DEBUG : interactive is False
2021-07-28 19:36:16,823 - DEBUG : platform is win32
2021-07-28 19:36:16,823 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_d30000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_d30000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:36:16,940 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:36:16,949 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:36:17,223 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:36:17,225 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028AE9F20FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028AE9F6DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028AE9F68B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000028AEA0102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028AE9FC2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000028AE9FFAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028AE9FA7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000028AEA0038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000028AE9FFA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000028AE9FE2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028AE9FDACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028AE9FD6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028AE9F2BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000028AE9FD63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000028AE9F20FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000028AE9F6DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000028AE9F68B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000028AEA0102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000028AE9FC2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000028AE9FFAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000028AE9FA7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000028AEA0038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000028AE9FFA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000028AE9FE2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000028AE9FDACD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000028AE9FD6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000028AE9F2BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000028AE9FD63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:36:17,225 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:36:17,225 - DEBUG : Imported ribbon_functions
2021-07-28 19:36:17,225 - DEBUG : Importing debugging
2021-07-28 19:36:17,704 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:36:17,706 - DEBUG : Imported debugging
2021-07-28 19:36:17,706 - DEBUG : Importing meta_variables
2021-07-28 19:36:17,706 - DEBUG : Imported meta_variables
2021-07-28 19:36:17,706 - DEBUG : Importing selectiontools
2021-07-28 19:36:17,706 - DEBUG : Imported selectiontools
2021-07-28 19:36:17,738 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:36:17,747 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:36:17,762 - INFO : This product is licensed to 
2021-07-28 19:36:17,762 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:36:17,764 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:36:17,764 - DEBUG : Binding Python functions to Excel
2021-07-28 19:36:17,764 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:36:17,764 - DEBUG :     - pyxll_version
2021-07-28 19:36:17,764 - DEBUG :     - python_version
2021-07-28 19:36:17,764 - DEBUG :     - win32api_is_installed
2021-07-28 19:36:17,764 - DEBUG :     - win32com_is_installed
2021-07-28 19:36:17,764 - DEBUG :     - numpy_is_installed
2021-07-28 19:36:17,764 - DEBUG :     - pyxll_logfile
2021-07-28 19:36:17,764 - DEBUG :     - get_formula
2021-07-28 19:36:17,764 - DEBUG :     - get_array_formula
2021-07-28 19:36:17,764 - DEBUG :     - get_last_error
2021-07-28 19:36:17,765 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:36:17,765 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:36:17,765 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:36:17,765 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:36:17,765 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:36:17,765 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:36:17,765 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:36:17,765 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:36:17,765 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:36:17,765 - DEBUG :     - xl_cell_example
2021-07-28 19:36:17,765 - DEBUG :     - recalc_on_open_test
2021-07-28 19:36:17,765 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:36:17,765 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:36:17,765 - DEBUG :     - one_cell_one_sim
2021-07-28 19:36:17,765 - DEBUG :     - one_row_one_sim
2021-07-28 19:36:17,776 - DEBUG : Adding menus to Excel:
2021-07-28 19:36:17,776 - DEBUG :   - PyXLL
2021-07-28 19:36:17,776 - DEBUG :     - Reload PyXLL
2021-07-28 19:36:17,776 - DEBUG :     - Another example menu item
2021-07-28 19:36:17,776 - DEBUG :     - More Examples
2021-07-28 19:36:17,776 - DEBUG :       - Click me
2021-07-28 19:36:17,776 - DEBUG :       - Unicode Test
2021-07-28 19:36:17,776 - DEBUG :     - Open log file
2021-07-28 19:36:17,776 - DEBUG :     - Attach To VS Code
2021-07-28 19:36:17,776 - DEBUG :     - Custom Task Panes
2021-07-28 19:36:17,776 - DEBUG :       - Qt
2021-07-28 19:36:17,776 - DEBUG :       - Tk
2021-07-28 19:36:17,776 - DEBUG :       - Wx
2021-07-28 19:36:17,776 - DEBUG :     - Example Menu Item 1
2021-07-28 19:36:17,776 - DEBUG :     - Show last error
2021-07-28 19:36:17,776 - DEBUG :     - About PyXLL...
2021-07-28 19:36:17,776 - DEBUG :   - PyXLL example menu
2021-07-28 19:36:17,776 - DEBUG :     - Click me
2021-07-28 19:36:17,815 - DEBUG : Finished binding Python functions
2021-07-28 19:36:17,815 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:36:17,815 - DEBUG : pyxll._post_open complete.
2021-07-28 19:36:17,824 - DEBUG : PyXLL initialization complete.
2021-07-28 19:36:18,460 - DEBUG : Error checking license server.
2021-07-28 19:36:18,460 - DEBUG : Response code 0.
2021-07-28 19:36:18,460 - DEBUG : Error getting returned document
2021-07-28 19:36:18,460 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:36:20,865 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:36:20,865 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:36:20,872 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:36:20,896 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:36:24,465 - ERROR : Error calling ribbon function 'ribbon_functions.inputNormal'
2021-07-28 19:36:28,473 - ERROR : Traceback (most recent call last):
2021-07-28 19:36:28,474 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 121, in wrapper
2021-07-28 19:36:28,474 - ERROR :     initSheetDistributionDict(control=control)
2021-07-28 19:36:28,474 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 69, in initSheetDistributionDict
2021-07-28 19:36:28,475 - ERROR :     xl.Sheets.Add()
2021-07-28 19:36:28,475 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 33, in Add
2021-07-28 19:36:28,475 - ERROR :     ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
2021-07-28 19:36:28,476 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', 'Add method of Sheets class failed', 'xlmain11.chm', 0, -2146827284), None)
2021-07-28 19:36:29,849 - ERROR : Error calling ribbon function 'ribbon_functions.inputNormal'
2021-07-28 19:36:31,323 - ERROR : Traceback (most recent call last):
2021-07-28 19:36:31,323 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 121, in wrapper
2021-07-28 19:36:31,324 - ERROR :     initSheetDistributionDict(control=control)
2021-07-28 19:36:31,324 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 69, in initSheetDistributionDict
2021-07-28 19:36:31,324 - ERROR :     xl.Sheets.Add()
2021-07-28 19:36:31,324 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 33, in Add
2021-07-28 19:36:31,324 - ERROR :     ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
2021-07-28 19:36:31,324 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', 'Add method of Sheets class failed', 'xlmain11.chm', 0, -2146827284), None)
2021-07-28 19:36:32,794 - ERROR : Error calling ribbon function 'ribbon_functions.inputNormal'
2021-07-28 19:36:41,791 - ERROR : Traceback (most recent call last):
2021-07-28 19:36:41,792 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 121, in wrapper
2021-07-28 19:36:41,792 - ERROR :     initSheetDistributionDict(control=control)
2021-07-28 19:36:41,792 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 69, in initSheetDistributionDict
2021-07-28 19:36:41,792 - ERROR :     xl.Sheets.Add()
2021-07-28 19:36:41,792 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 33, in Add
2021-07-28 19:36:41,792 - ERROR :     ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
2021-07-28 19:36:41,792 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', 'Add method of Sheets class failed', 'xlmain11.chm', 0, -2146827284), None)
2021-07-28 19:36:43,242 - DEBUG : Closing PyXLL Python module.
2021-07-28 19:36:43,242 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 19:36:43,242 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 19:36:43,242 - DEBUG : PyXLL Python module closed.
2021-07-28 19:36:47,134 - DEBUG : 
Wed Jul 28 19:36:47 2021
---------- PyXLL Stopped ----------
2021-07-28 19:36:51,791 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:36:51,791 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:36:51,791 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:36:51,791 - DEBUG : -------- PyXLL config --------
2021-07-28 19:36:51,791 - DEBUG : [LOG]
2021-07-28 19:36:51,791 - DEBUG : encoding = utf-8
2021-07-28 19:36:51,791 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:36:51,791 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:36:51,791 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:36:51,791 - DEBUG : verbosity = debug
2021-07-28 19:36:51,791 - DEBUG : 
2021-07-28 19:36:51,791 - DEBUG : [PYTHON]
2021-07-28 19:36:51,791 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:36:51,791 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:36:51,791 - DEBUG : 
2021-07-28 19:36:51,791 - DEBUG : [PYXLL]
2021-07-28 19:36:51,791 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:36:51,791 - DEBUG : developer_mode = 1
2021-07-28 19:36:51,791 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:36:51,791 - DEBUG : modules = 
2021-07-28 19:36:51,791 - DEBUG :     misc
2021-07-28 19:36:51,791 - DEBUG :     worksheetfuncs
2021-07-28 19:36:51,791 - DEBUG :     menus
2021-07-28 19:36:51,791 - DEBUG :     callbacks
2021-07-28 19:36:51,791 - DEBUG :     custom_task_panes
2021-07-28 19:36:51,791 - DEBUG :     test
2021-07-28 19:36:51,792 - DEBUG :     ribbon_functions
2021-07-28 19:36:51,792 - DEBUG :     debugging
2021-07-28 19:36:51,792 - DEBUG :     meta_variables
2021-07-28 19:36:51,792 - DEBUG :     selectiontools
2021-07-28 19:36:51,792 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:36:51,792 - DEBUG : ------------------------------
2021-07-28 19:36:51,793 - DEBUG : Attempting to load python38.dll
2021-07-28 19:36:51,795 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:36:51,796 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:36:51,796 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:36:52,053 - DEBUG : Calling Py_Initialize...
2021-07-28 19:36:52,222 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:36:52,222 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:36:52,223 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:36:52,223 - DEBUG : Python is initialized.
2021-07-28 19:36:52,223 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:36:52,225 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:36:52,225 - DEBUG : Looking for module 'site'...
2021-07-28 19:36:52,241 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:36:52,241 - DEBUG : Importing pyxll module
2021-07-28 19:36:52,241 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:36:52,241 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:36:52,241 - DEBUG :   Detected Python3
2021-07-28 19:36:52,287 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:36:52,287 - DEBUG : pyxll module imported
2021-07-28 19:36:52,287 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:36:52,287 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:36:52,287 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:36:52,295 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:36:52,295 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:36:52,529 - DEBUG : Importing misc
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:36:52,529 - DEBUG : Imported misc
2021-07-28 19:36:52,529 - DEBUG : Importing worksheetfuncs
2021-07-28 19:36:52,529 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:36:52,537 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:36:52,537 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:36:52,537 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:36:52,537 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:36:52,537 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:36:52,537 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:36:52,538 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:36:52,538 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:36:52,538 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:36:52,538 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:36:52,538 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:36:52,538 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:36:52,538 - DEBUG : Imported worksheetfuncs
2021-07-28 19:36:52,539 - DEBUG : Importing menus
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:36:52,540 - DEBUG : Imported menus
2021-07-28 19:36:52,540 - DEBUG : Importing callbacks
2021-07-28 19:36:52,540 - DEBUG : Imported callbacks
2021-07-28 19:36:52,540 - DEBUG : Importing custom_task_panes
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:36:52,540 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:36:52,540 - DEBUG : Imported custom_task_panes
2021-07-28 19:36:52,540 - DEBUG : Importing test
2021-07-28 19:36:52,540 - DEBUG : Imported test
2021-07-28 19:36:52,540 - DEBUG : Importing ribbon_functions
2021-07-28 19:36:54,149 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:36:54,196 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:36:54,196 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:36:54,196 - DEBUG : interactive is False
2021-07-28 19:36:54,196 - DEBUG : platform is win32
2021-07-28 19:36:54,196 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_6d0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_6d0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:36:54,259 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:36:54,273 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:36:54,546 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:36:54,547 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:36:54,547 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:36:54,547 - DEBUG : Imported ribbon_functions
2021-07-28 19:36:54,547 - DEBUG : Importing debugging
2021-07-28 19:36:55,029 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:36:55,031 - DEBUG : Imported debugging
2021-07-28 19:36:55,031 - DEBUG : Importing meta_variables
2021-07-28 19:36:55,031 - DEBUG : Imported meta_variables
2021-07-28 19:36:55,031 - DEBUG : Importing selectiontools
2021-07-28 19:36:55,032 - DEBUG : Imported selectiontools
2021-07-28 19:36:55,070 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:36:55,070 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:36:55,091 - INFO : This product is licensed to 
2021-07-28 19:36:55,091 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:36:55,093 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:36:55,093 - DEBUG : Binding Python functions to Excel
2021-07-28 19:36:55,093 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:36:55,093 - DEBUG :     - pyxll_version
2021-07-28 19:36:55,093 - DEBUG :     - python_version
2021-07-28 19:36:55,093 - DEBUG :     - win32api_is_installed
2021-07-28 19:36:55,093 - DEBUG :     - win32com_is_installed
2021-07-28 19:36:55,093 - DEBUG :     - numpy_is_installed
2021-07-28 19:36:55,093 - DEBUG :     - pyxll_logfile
2021-07-28 19:36:55,094 - DEBUG :     - get_formula
2021-07-28 19:36:55,094 - DEBUG :     - get_array_formula
2021-07-28 19:36:55,094 - DEBUG :     - get_last_error
2021-07-28 19:36:55,094 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:36:55,094 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:36:55,094 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:36:55,094 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:36:55,094 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:36:55,094 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:36:55,094 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:36:55,094 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:36:55,094 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:36:55,094 - DEBUG :     - xl_cell_example
2021-07-28 19:36:55,094 - DEBUG :     - recalc_on_open_test
2021-07-28 19:36:55,094 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:36:55,094 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:36:55,094 - DEBUG :     - one_cell_one_sim
2021-07-28 19:36:55,094 - DEBUG :     - one_row_one_sim
2021-07-28 19:36:55,110 - DEBUG : Adding menus to Excel:
2021-07-28 19:36:55,110 - DEBUG :   - PyXLL
2021-07-28 19:36:55,110 - DEBUG :     - Reload PyXLL
2021-07-28 19:36:55,110 - DEBUG :     - Another example menu item
2021-07-28 19:36:55,110 - DEBUG :     - More Examples
2021-07-28 19:36:55,110 - DEBUG :       - Click me
2021-07-28 19:36:55,110 - DEBUG :       - Unicode Test
2021-07-28 19:36:55,110 - DEBUG :     - Open log file
2021-07-28 19:36:55,110 - DEBUG :     - Attach To VS Code
2021-07-28 19:36:55,110 - DEBUG :     - Custom Task Panes
2021-07-28 19:36:55,110 - DEBUG :       - Qt
2021-07-28 19:36:55,110 - DEBUG :       - Tk
2021-07-28 19:36:55,110 - DEBUG :       - Wx
2021-07-28 19:36:55,110 - DEBUG :     - Example Menu Item 1
2021-07-28 19:36:55,110 - DEBUG :     - Show last error
2021-07-28 19:36:55,110 - DEBUG :     - About PyXLL...
2021-07-28 19:36:55,110 - DEBUG :   - PyXLL example menu
2021-07-28 19:36:55,110 - DEBUG :     - Click me
2021-07-28 19:36:55,150 - DEBUG : Finished binding Python functions
2021-07-28 19:36:55,150 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:36:55,151 - DEBUG : pyxll._post_open complete.
2021-07-28 19:36:55,155 - DEBUG : PyXLL initialization complete.
2021-07-28 19:36:55,361 - DEBUG : Error checking license server.
2021-07-28 19:36:55,361 - DEBUG : Response code 0.
2021-07-28 19:36:55,361 - DEBUG : Error getting returned document
2021-07-28 19:36:55,361 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:36:55,567 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:36:55,567 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:36:55,569 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:36:55,570 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:36:55,571 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:36:55,571 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:36:55,634 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:36:55,634 - DEBUG : Reloading misc
2021-07-28 19:36:55,636 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:36:55,637 - DEBUG : Reloaded misc
2021-07-28 19:36:55,637 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:36:55,637 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:36:55,639 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:36:55,640 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:36:55,640 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:36:55,640 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:36:55,640 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:36:55,640 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:36:55,641 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:36:55,641 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:36:55,641 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:36:55,641 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:36:55,641 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:36:55,641 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:36:55,642 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:36:55,642 - DEBUG : Reloading menus
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:36:55,642 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:36:55,642 - DEBUG : Reloaded menus
2021-07-28 19:36:55,642 - DEBUG : Reloading callbacks
2021-07-28 19:36:55,643 - DEBUG : Reloaded callbacks
2021-07-28 19:36:55,643 - DEBUG : Reloading custom_task_panes
2021-07-28 19:36:55,644 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:36:55,644 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:36:55,644 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:36:55,644 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:36:55,644 - DEBUG : Reloading test
2021-07-28 19:36:55,645 - DEBUG : Reloaded test
2021-07-28 19:36:55,645 - DEBUG : Reloading meta_variables
2021-07-28 19:36:55,646 - DEBUG : Reloaded meta_variables
2021-07-28 19:36:55,646 - DEBUG : Reloading dependency error_functions
2021-07-28 19:36:55,646 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:36:55,647 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:36:55,647 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:36:55,647 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:36:55,648 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:36:55,648 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:36:55,649 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:36:55,649 - DEBUG : Reloading dependency examples
2021-07-28 19:36:55,650 - DEBUG : Reloaded dependency examples
2021-07-28 19:36:55,650 - DEBUG : Reloading ribbon_functions
2021-07-28 19:36:55,651 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:36:55,651 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:36:55,651 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:36:55,651 - DEBUG : Reloading debugging
2021-07-28 19:36:55,652 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:36:55,652 - DEBUG : Reloaded debugging
2021-07-28 19:36:55,652 - DEBUG : Reloading selectiontools
2021-07-28 19:36:55,653 - DEBUG : Reloaded selectiontools
2021-07-28 19:36:55,691 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:36:55,693 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:36:55,699 - INFO : This product is licensed to 
2021-07-28 19:36:55,699 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:36:55,700 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:36:55,700 - DEBUG : Binding Python functions to Excel
2021-07-28 19:36:55,701 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:36:55,701 - DEBUG :     - pyxll_version
2021-07-28 19:36:55,701 - DEBUG :     - python_version
2021-07-28 19:36:55,701 - DEBUG :     - win32api_is_installed
2021-07-28 19:36:55,701 - DEBUG :     - win32com_is_installed
2021-07-28 19:36:55,701 - DEBUG :     - numpy_is_installed
2021-07-28 19:36:55,701 - DEBUG :     - pyxll_logfile
2021-07-28 19:36:55,701 - DEBUG :     - get_formula
2021-07-28 19:36:55,701 - DEBUG :     - get_array_formula
2021-07-28 19:36:55,701 - DEBUG :     - get_last_error
2021-07-28 19:36:55,701 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:36:55,701 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:36:55,701 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:36:55,701 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:36:55,701 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:36:55,701 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:36:55,701 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:36:55,702 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:36:55,702 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:36:55,702 - DEBUG :     - xl_cell_example
2021-07-28 19:36:55,702 - DEBUG :     - recalc_on_open_test
2021-07-28 19:36:55,702 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:36:55,702 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:36:55,702 - DEBUG :     - one_cell_one_sim
2021-07-28 19:36:55,702 - DEBUG :     - one_row_one_sim
2021-07-28 19:36:55,705 - DEBUG : Adding menus to Excel:
2021-07-28 19:36:55,705 - DEBUG :   - PyXLL
2021-07-28 19:36:55,705 - DEBUG :     - Reload PyXLL
2021-07-28 19:36:55,705 - DEBUG :     - Another example menu item
2021-07-28 19:36:55,705 - DEBUG :     - More Examples
2021-07-28 19:36:55,705 - DEBUG :       - Click me
2021-07-28 19:36:55,705 - DEBUG :       - Unicode Test
2021-07-28 19:36:55,705 - DEBUG :     - Open log file
2021-07-28 19:36:55,705 - DEBUG :     - Attach To VS Code
2021-07-28 19:36:55,705 - DEBUG :     - Custom Task Panes
2021-07-28 19:36:55,705 - DEBUG :       - Qt
2021-07-28 19:36:55,705 - DEBUG :       - Tk
2021-07-28 19:36:55,705 - DEBUG :       - Wx
2021-07-28 19:36:55,705 - DEBUG :     - Example Menu Item 1
2021-07-28 19:36:55,705 - DEBUG :     - Show last error
2021-07-28 19:36:55,705 - DEBUG :     - About PyXLL...
2021-07-28 19:36:55,705 - DEBUG :   - PyXLL example menu
2021-07-28 19:36:55,705 - DEBUG :     - Click me
2021-07-28 19:36:55,708 - DEBUG : Finished binding Python functions
2021-07-28 19:36:55,708 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:36:57,710 - DEBUG : pyxll._post_open complete.
2021-07-28 19:36:57,714 - DEBUG : PyXLL initialization complete.
2021-07-28 19:36:57,723 - DEBUG : Error checking license server.
2021-07-28 19:36:57,723 - DEBUG : Response code 0.
2021-07-28 19:36:57,723 - DEBUG : Connection blocked by a firewall?
2021-07-28 19:37:02,812 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:37:02,812 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:37:02,834 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:37:02,915 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:37:02,926 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:37:02,927 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:37:02,934 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:37:02,947 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:41:38,601 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 19:42:37,572 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 19:42:37,574 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:42:37,574 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:42:37,574 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:42:37,574 - DEBUG : -------- PyXLL config --------
2021-07-28 19:42:37,574 - DEBUG : [LOG]
2021-07-28 19:42:37,574 - DEBUG : encoding = utf-8
2021-07-28 19:42:37,574 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:42:37,574 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:42:37,574 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:42:37,574 - DEBUG : verbosity = debug
2021-07-28 19:42:37,574 - DEBUG : 
2021-07-28 19:42:37,574 - DEBUG : [PYTHON]
2021-07-28 19:42:37,574 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:42:37,574 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:42:37,574 - DEBUG : 
2021-07-28 19:42:37,574 - DEBUG : [PYXLL]
2021-07-28 19:42:37,574 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:42:37,574 - DEBUG : developer_mode = 1
2021-07-28 19:42:37,574 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:42:37,574 - DEBUG : modules = 
2021-07-28 19:42:37,574 - DEBUG :     misc
2021-07-28 19:42:37,574 - DEBUG :     worksheetfuncs
2021-07-28 19:42:37,574 - DEBUG :     menus
2021-07-28 19:42:37,574 - DEBUG :     callbacks
2021-07-28 19:42:37,574 - DEBUG :     custom_task_panes
2021-07-28 19:42:37,574 - DEBUG :     test
2021-07-28 19:42:37,574 - DEBUG :     ribbon_functions
2021-07-28 19:42:37,574 - DEBUG :     debugging
2021-07-28 19:42:37,574 - DEBUG :     meta_variables
2021-07-28 19:42:37,574 - DEBUG :     selectiontools
2021-07-28 19:42:37,574 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:42:37,574 - DEBUG : ------------------------------
2021-07-28 19:42:37,575 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:42:37,575 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:42:37,575 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:42:37,575 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:42:37,575 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:42:37,585 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:42:37,585 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:42:37,691 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:42:37,691 - DEBUG : Reloading misc
2021-07-28 19:42:37,691 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:42:37,698 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:42:37,699 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:42:37,699 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:42:37,700 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:42:37,700 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:42:37,701 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:42:37,701 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:42:37,701 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:42:37,701 - DEBUG : Reloaded misc
2021-07-28 19:42:37,701 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:42:37,701 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:42:37,706 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:42:37,706 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:42:37,707 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:42:37,707 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:42:37,707 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:42:37,708 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:42:37,708 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:42:37,708 - DEBUG : Reloading menus
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:42:37,708 - DEBUG : Reloaded menus
2021-07-28 19:42:37,708 - DEBUG : Reloading callbacks
2021-07-28 19:42:37,708 - DEBUG : Reloaded callbacks
2021-07-28 19:42:37,708 - DEBUG : Reloading custom_task_panes
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:42:37,708 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:42:37,708 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:42:37,708 - DEBUG : Reloading test
2021-07-28 19:42:37,708 - DEBUG : Reloaded test
2021-07-28 19:42:37,708 - DEBUG : Reloading meta_variables
2021-07-28 19:42:37,708 - DEBUG : Reloaded meta_variables
2021-07-28 19:42:37,708 - DEBUG : Reloading dependency error_functions
2021-07-28 19:42:37,725 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:42:37,725 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:42:37,728 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:42:37,728 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:42:37,729 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:42:37,729 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:42:37,729 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:42:37,729 - DEBUG : Reloading dependency examples
2021-07-28 19:42:37,729 - DEBUG : Reloaded dependency examples
2021-07-28 19:42:37,729 - DEBUG : Reloading ribbon_functions
2021-07-28 19:42:37,729 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:42:37,729 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:42:37,729 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:42:37,729 - DEBUG : Reloading debugging
2021-07-28 19:42:37,729 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:42:37,729 - DEBUG : Reloaded debugging
2021-07-28 19:42:37,729 - DEBUG : Reloading selectiontools
2021-07-28 19:42:37,729 - DEBUG : Reloaded selectiontools
2021-07-28 19:42:37,831 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:42:37,853 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:42:37,873 - INFO : This product is licensed to 
2021-07-28 19:42:37,873 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:42:37,877 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:42:37,877 - DEBUG : Binding Python functions to Excel
2021-07-28 19:42:37,878 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:42:37,879 - DEBUG :     - pyxll_version
2021-07-28 19:42:37,879 - DEBUG :     - python_version
2021-07-28 19:42:37,879 - DEBUG :     - win32api_is_installed
2021-07-28 19:42:37,879 - DEBUG :     - win32com_is_installed
2021-07-28 19:42:37,880 - DEBUG :     - numpy_is_installed
2021-07-28 19:42:37,880 - DEBUG :     - pyxll_logfile
2021-07-28 19:42:37,880 - DEBUG :     - get_formula
2021-07-28 19:42:37,880 - DEBUG :     - get_array_formula
2021-07-28 19:42:37,880 - DEBUG :     - get_last_error
2021-07-28 19:42:37,880 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:42:37,880 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:42:37,882 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:42:37,882 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:42:37,882 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:42:37,883 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:42:37,883 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:42:37,883 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:42:37,883 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:42:37,883 - DEBUG :     - xl_cell_example
2021-07-28 19:42:37,883 - DEBUG :     - recalc_on_open_test
2021-07-28 19:42:37,883 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:42:37,883 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:42:37,883 - DEBUG :     - one_cell_one_sim
2021-07-28 19:42:37,883 - DEBUG :     - one_row_one_sim
2021-07-28 19:42:37,892 - DEBUG : Adding menus to Excel:
2021-07-28 19:42:37,892 - DEBUG :   - PyXLL
2021-07-28 19:42:37,892 - DEBUG :     - Reload PyXLL
2021-07-28 19:42:37,892 - DEBUG :     - Another example menu item
2021-07-28 19:42:37,892 - DEBUG :     - More Examples
2021-07-28 19:42:37,892 - DEBUG :       - Click me
2021-07-28 19:42:37,892 - DEBUG :       - Unicode Test
2021-07-28 19:42:37,892 - DEBUG :     - Open log file
2021-07-28 19:42:37,892 - DEBUG :     - Attach To VS Code
2021-07-28 19:42:37,892 - DEBUG :     - Custom Task Panes
2021-07-28 19:42:37,892 - DEBUG :       - Qt
2021-07-28 19:42:37,892 - DEBUG :       - Tk
2021-07-28 19:42:37,892 - DEBUG :       - Wx
2021-07-28 19:42:37,892 - DEBUG :     - Example Menu Item 1
2021-07-28 19:42:37,892 - DEBUG :     - Show last error
2021-07-28 19:42:37,892 - DEBUG :     - About PyXLL...
2021-07-28 19:42:37,892 - DEBUG :   - PyXLL example menu
2021-07-28 19:42:37,892 - DEBUG :     - Click me
2021-07-28 19:42:37,909 - DEBUG : Finished binding Python functions
2021-07-28 19:42:37,910 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:42:38,836 - DEBUG : pyxll._post_open complete.
2021-07-28 19:42:38,837 - DEBUG : PyXLL initialization complete.
2021-07-28 19:49:07,419 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 19:49:07,420 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:49:07,420 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:49:07,420 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:49:07,420 - DEBUG : -------- PyXLL config --------
2021-07-28 19:49:07,420 - DEBUG : [LOG]
2021-07-28 19:49:07,420 - DEBUG : encoding = utf-8
2021-07-28 19:49:07,420 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:49:07,420 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:49:07,420 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:49:07,420 - DEBUG : verbosity = debug
2021-07-28 19:49:07,420 - DEBUG : 
2021-07-28 19:49:07,420 - DEBUG : [PYTHON]
2021-07-28 19:49:07,420 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:49:07,420 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:49:07,420 - DEBUG : 
2021-07-28 19:49:07,420 - DEBUG : [PYXLL]
2021-07-28 19:49:07,420 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:49:07,420 - DEBUG : developer_mode = 1
2021-07-28 19:49:07,420 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:49:07,420 - DEBUG : modules = 
2021-07-28 19:49:07,420 - DEBUG :     misc
2021-07-28 19:49:07,420 - DEBUG :     worksheetfuncs
2021-07-28 19:49:07,420 - DEBUG :     menus
2021-07-28 19:49:07,420 - DEBUG :     callbacks
2021-07-28 19:49:07,420 - DEBUG :     custom_task_panes
2021-07-28 19:49:07,420 - DEBUG :     test
2021-07-28 19:49:07,420 - DEBUG :     ribbon_functions
2021-07-28 19:49:07,420 - DEBUG :     debugging
2021-07-28 19:49:07,420 - DEBUG :     meta_variables
2021-07-28 19:49:07,420 - DEBUG :     selectiontools
2021-07-28 19:49:07,420 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:49:07,420 - DEBUG : ------------------------------
2021-07-28 19:49:07,420 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:49:07,420 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:49:07,420 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:49:07,420 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:49:07,420 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:49:07,420 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:49:07,427 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:49:07,560 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:49:07,560 - DEBUG : Reloading misc
2021-07-28 19:49:07,568 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:49:07,569 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:49:07,570 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:49:07,570 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:49:07,571 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:49:07,571 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:49:07,572 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:49:07,573 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:49:07,574 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:49:07,574 - DEBUG : Reloaded misc
2021-07-28 19:49:07,574 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:49:07,574 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:49:07,574 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:49:07,574 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:49:07,574 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:49:07,579 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:49:07,579 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:49:07,579 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:49:07,580 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:49:07,581 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:49:07,582 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:49:07,582 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:49:07,582 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:49:07,582 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:49:07,582 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:49:07,582 - DEBUG : Reloading menus
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:49:07,582 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:49:07,582 - DEBUG : Reloaded menus
2021-07-28 19:49:07,582 - DEBUG : Reloading callbacks
2021-07-28 19:49:07,582 - DEBUG : Reloaded callbacks
2021-07-28 19:49:07,582 - DEBUG : Reloading custom_task_panes
2021-07-28 19:49:07,589 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:49:07,589 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:49:07,589 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:49:07,589 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:49:07,590 - DEBUG : Reloading test
2021-07-28 19:49:07,591 - DEBUG : Reloaded test
2021-07-28 19:49:07,591 - DEBUG : Reloading meta_variables
2021-07-28 19:49:07,593 - DEBUG : Reloaded meta_variables
2021-07-28 19:49:07,593 - DEBUG : Reloading dependency error_functions
2021-07-28 19:49:07,594 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:49:07,595 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:49:07,595 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:49:07,595 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:49:07,597 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:49:07,597 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:49:07,598 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:49:07,598 - DEBUG : Reloading dependency examples
2021-07-28 19:49:07,600 - DEBUG : Reloaded dependency examples
2021-07-28 19:49:07,600 - DEBUG : Reloading ribbon_functions
2021-07-28 19:49:07,602 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021A118D0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021A1191DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021A1192AB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000021A119A4310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021A1195F580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000021A119AAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021A11957070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000021A119B38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000021A119AA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021A1199D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000021A1198FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021A11985F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021A118DAFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000021A119853A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:49:07,602 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:49:07,602 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:49:07,602 - DEBUG : Reloading debugging
2021-07-28 19:49:07,605 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:49:07,605 - DEBUG : Reloaded debugging
2021-07-28 19:49:07,606 - DEBUG : Reloading selectiontools
2021-07-28 19:49:07,606 - DEBUG : Reloaded selectiontools
2021-07-28 19:49:07,655 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:49:07,667 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:49:07,679 - INFO : This product is licensed to 
2021-07-28 19:49:07,679 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:49:07,681 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:49:07,681 - DEBUG : Binding Python functions to Excel
2021-07-28 19:49:07,681 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:49:07,682 - DEBUG :     - pyxll_version
2021-07-28 19:49:07,682 - DEBUG :     - python_version
2021-07-28 19:49:07,682 - DEBUG :     - win32api_is_installed
2021-07-28 19:49:07,682 - DEBUG :     - win32com_is_installed
2021-07-28 19:49:07,682 - DEBUG :     - numpy_is_installed
2021-07-28 19:49:07,683 - DEBUG :     - pyxll_logfile
2021-07-28 19:49:07,683 - DEBUG :     - get_formula
2021-07-28 19:49:07,683 - DEBUG :     - get_array_formula
2021-07-28 19:49:07,683 - DEBUG :     - get_last_error
2021-07-28 19:49:07,683 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:49:07,683 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:49:07,683 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:49:07,684 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:49:07,684 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:49:07,684 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:49:07,684 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:49:07,684 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:49:07,684 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:49:07,685 - DEBUG :     - xl_cell_example
2021-07-28 19:49:07,685 - DEBUG :     - recalc_on_open_test
2021-07-28 19:49:07,685 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:49:07,685 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:49:07,685 - DEBUG :     - one_cell_one_sim
2021-07-28 19:49:07,685 - DEBUG :     - one_row_one_sim
2021-07-28 19:49:07,690 - DEBUG : Adding menus to Excel:
2021-07-28 19:49:07,690 - DEBUG :   - PyXLL
2021-07-28 19:49:07,690 - DEBUG :     - Reload PyXLL
2021-07-28 19:49:07,690 - DEBUG :     - Another example menu item
2021-07-28 19:49:07,690 - DEBUG :     - More Examples
2021-07-28 19:49:07,690 - DEBUG :       - Click me
2021-07-28 19:49:07,690 - DEBUG :       - Unicode Test
2021-07-28 19:49:07,690 - DEBUG :     - Open log file
2021-07-28 19:49:07,690 - DEBUG :     - Attach To VS Code
2021-07-28 19:49:07,690 - DEBUG :     - Custom Task Panes
2021-07-28 19:49:07,690 - DEBUG :       - Qt
2021-07-28 19:49:07,690 - DEBUG :       - Tk
2021-07-28 19:49:07,690 - DEBUG :       - Wx
2021-07-28 19:49:07,690 - DEBUG :     - Example Menu Item 1
2021-07-28 19:49:07,690 - DEBUG :     - Show last error
2021-07-28 19:49:07,690 - DEBUG :     - About PyXLL...
2021-07-28 19:49:07,690 - DEBUG :   - PyXLL example menu
2021-07-28 19:49:07,690 - DEBUG :     - Click me
2021-07-28 19:49:07,700 - DEBUG : Finished binding Python functions
2021-07-28 19:49:07,700 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:49:08,545 - DEBUG : pyxll._post_open complete.
2021-07-28 19:49:08,546 - DEBUG : PyXLL initialization complete.
2021-07-28 19:49:34,831 - DEBUG : Closing PyXLL Python module.
2021-07-28 19:49:34,831 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 19:49:34,832 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 19:49:34,832 - DEBUG : PyXLL Python module closed.
2021-07-28 19:49:40,058 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 19:49:40,058 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 19:49:40,058 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 19:49:40,058 - DEBUG : -------- PyXLL config --------
2021-07-28 19:49:40,058 - DEBUG : [LOG]
2021-07-28 19:49:40,058 - DEBUG : encoding = utf-8
2021-07-28 19:49:40,058 - DEBUG : file = pyxll.20210728.log
2021-07-28 19:49:40,058 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 19:49:40,058 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 19:49:40,058 - DEBUG : verbosity = debug
2021-07-28 19:49:40,058 - DEBUG : 
2021-07-28 19:49:40,058 - DEBUG : [PYTHON]
2021-07-28 19:49:40,058 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 19:49:40,058 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 19:49:40,058 - DEBUG : 
2021-07-28 19:49:40,058 - DEBUG : [PYXLL]
2021-07-28 19:49:40,058 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 19:49:40,058 - DEBUG : developer_mode = 1
2021-07-28 19:49:40,058 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 19:49:40,058 - DEBUG : modules = 
2021-07-28 19:49:40,058 - DEBUG :     misc
2021-07-28 19:49:40,058 - DEBUG :     worksheetfuncs
2021-07-28 19:49:40,058 - DEBUG :     menus
2021-07-28 19:49:40,058 - DEBUG :     callbacks
2021-07-28 19:49:40,058 - DEBUG :     custom_task_panes
2021-07-28 19:49:40,058 - DEBUG :     test
2021-07-28 19:49:40,058 - DEBUG :     ribbon_functions
2021-07-28 19:49:40,058 - DEBUG :     debugging
2021-07-28 19:49:40,058 - DEBUG :     meta_variables
2021-07-28 19:49:40,058 - DEBUG :     selectiontools
2021-07-28 19:49:40,058 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 19:49:40,058 - DEBUG : ------------------------------
2021-07-28 19:49:40,059 - DEBUG : Attempting to load python38.dll
2021-07-28 19:49:40,061 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 19:49:40,062 - DEBUG : Checking Py_IsInitialized...
2021-07-28 19:49:40,062 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 19:49:40,220 - DEBUG : Calling Py_Initialize...
2021-07-28 19:49:40,390 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 19:49:40,391 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 19:49:40,391 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 19:49:40,391 - DEBUG : Python is initialized.
2021-07-28 19:49:40,392 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 19:49:40,394 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 19:49:40,394 - DEBUG : Looking for module 'site'...
2021-07-28 19:49:40,417 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 19:49:40,417 - DEBUG : Importing pyxll module
2021-07-28 19:49:40,417 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 19:49:40,417 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 19:49:40,417 - DEBUG :   Detected Python3
2021-07-28 19:49:40,455 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 19:49:40,458 - DEBUG : pyxll module imported
2021-07-28 19:49:40,458 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:49:40,458 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:49:40,458 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:49:40,461 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:49:40,461 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:49:40,662 - DEBUG : Importing misc
2021-07-28 19:49:40,663 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:49:40,663 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:49:40,663 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:49:40,663 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:49:40,663 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:49:40,663 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:49:40,664 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:49:40,664 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:49:40,664 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:49:40,664 - DEBUG : Imported misc
2021-07-28 19:49:40,664 - DEBUG : Importing worksheetfuncs
2021-07-28 19:49:40,666 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:49:40,666 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:49:40,666 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:49:40,666 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:49:40,666 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:49:40,667 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:49:40,667 - DEBUG : Imported worksheetfuncs
2021-07-28 19:49:40,667 - DEBUG : Importing menus
2021-07-28 19:49:40,673 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:49:40,673 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:49:40,673 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:49:40,674 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:49:40,674 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:49:40,674 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:49:40,674 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:49:40,674 - DEBUG : Imported menus
2021-07-28 19:49:40,674 - DEBUG : Importing callbacks
2021-07-28 19:49:40,675 - DEBUG : Imported callbacks
2021-07-28 19:49:40,675 - DEBUG : Importing custom_task_panes
2021-07-28 19:49:40,675 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:49:40,675 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:49:40,675 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:49:40,676 - DEBUG : Imported custom_task_panes
2021-07-28 19:49:40,676 - DEBUG : Importing test
2021-07-28 19:49:40,676 - DEBUG : Imported test
2021-07-28 19:49:40,677 - DEBUG : Importing ribbon_functions
2021-07-28 19:49:42,498 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 19:49:42,574 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:49:42,594 - DEBUG : matplotlib version 3.4.2
2021-07-28 19:49:42,594 - DEBUG : interactive is False
2021-07-28 19:49:42,594 - DEBUG : platform is win32
2021-07-28 19:49:42,594 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_6f0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_6f0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 19:49:42,683 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 19:49:42,696 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 19:49:42,913 - DEBUG : Loaded backend agg version unknown.
2021-07-28 19:49:42,917 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001EC7D380FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001EC7D3CDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001EC7D3D5B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001EC7D46E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001EC7D422580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001EC7D45AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001EC7D407070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001EC7D45E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001EC7D45A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001EC7D44C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001EC7D43ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001EC7D436F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001EC7D38AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001EC7D4363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001EC7D380FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001EC7D3CDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001EC7D3D5B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001EC7D46E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001EC7D422580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001EC7D45AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001EC7D407070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001EC7D45E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001EC7D45A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001EC7D44C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001EC7D43ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001EC7D436F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001EC7D38AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001EC7D4363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:49:42,918 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:49:42,918 - DEBUG : Imported ribbon_functions
2021-07-28 19:49:42,918 - DEBUG : Importing debugging
2021-07-28 19:49:43,490 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:49:43,490 - DEBUG : Imported debugging
2021-07-28 19:49:43,490 - DEBUG : Importing meta_variables
2021-07-28 19:49:43,490 - DEBUG : Imported meta_variables
2021-07-28 19:49:43,490 - DEBUG : Importing selectiontools
2021-07-28 19:49:43,490 - DEBUG : Imported selectiontools
2021-07-28 19:49:43,537 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:49:43,543 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:49:43,563 - INFO : This product is licensed to 
2021-07-28 19:49:43,563 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:49:43,565 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:49:43,565 - DEBUG : Binding Python functions to Excel
2021-07-28 19:49:43,565 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:49:43,565 - DEBUG :     - pyxll_version
2021-07-28 19:49:43,565 - DEBUG :     - python_version
2021-07-28 19:49:43,565 - DEBUG :     - win32api_is_installed
2021-07-28 19:49:43,565 - DEBUG :     - win32com_is_installed
2021-07-28 19:49:43,566 - DEBUG :     - numpy_is_installed
2021-07-28 19:49:43,566 - DEBUG :     - pyxll_logfile
2021-07-28 19:49:43,566 - DEBUG :     - get_formula
2021-07-28 19:49:43,566 - DEBUG :     - get_array_formula
2021-07-28 19:49:43,566 - DEBUG :     - get_last_error
2021-07-28 19:49:43,566 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:49:43,566 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:49:43,566 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:49:43,566 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:49:43,566 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:49:43,566 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:49:43,566 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:49:43,566 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:49:43,566 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:49:43,566 - DEBUG :     - xl_cell_example
2021-07-28 19:49:43,566 - DEBUG :     - recalc_on_open_test
2021-07-28 19:49:43,567 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:49:43,567 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:49:43,567 - DEBUG :     - one_cell_one_sim
2021-07-28 19:49:43,567 - DEBUG :     - one_row_one_sim
2021-07-28 19:49:43,584 - DEBUG : Adding menus to Excel:
2021-07-28 19:49:43,584 - DEBUG :   - PyXLL
2021-07-28 19:49:43,584 - DEBUG :     - Reload PyXLL
2021-07-28 19:49:43,584 - DEBUG :     - Another example menu item
2021-07-28 19:49:43,584 - DEBUG :     - More Examples
2021-07-28 19:49:43,584 - DEBUG :       - Click me
2021-07-28 19:49:43,584 - DEBUG :       - Unicode Test
2021-07-28 19:49:43,584 - DEBUG :     - Open log file
2021-07-28 19:49:43,584 - DEBUG :     - Attach To VS Code
2021-07-28 19:49:43,584 - DEBUG :     - Custom Task Panes
2021-07-28 19:49:43,584 - DEBUG :       - Qt
2021-07-28 19:49:43,584 - DEBUG :       - Tk
2021-07-28 19:49:43,584 - DEBUG :       - Wx
2021-07-28 19:49:43,584 - DEBUG :     - Example Menu Item 1
2021-07-28 19:49:43,584 - DEBUG :     - Show last error
2021-07-28 19:49:43,584 - DEBUG :     - About PyXLL...
2021-07-28 19:49:43,584 - DEBUG :   - PyXLL example menu
2021-07-28 19:49:43,584 - DEBUG :     - Click me
2021-07-28 19:49:43,639 - DEBUG : Finished binding Python functions
2021-07-28 19:49:43,640 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 19:49:43,640 - DEBUG : pyxll._post_open complete.
2021-07-28 19:49:43,642 - DEBUG : PyXLL initialization complete.
2021-07-28 19:49:43,987 - DEBUG : Initializing PyXLL Python module.
2021-07-28 19:49:43,987 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 19:49:43,987 - DEBUG : PyXLL Python module initialized.
2021-07-28 19:49:43,988 - DEBUG : Functions will not be cancellable by default.
2021-07-28 19:49:43,989 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 19:49:43,990 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 19:49:44,053 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 19:49:44,054 - DEBUG : Reloading misc
2021-07-28 19:49:44,055 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 19:49:44,056 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 19:49:44,057 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 19:49:44,057 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 19:49:44,058 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 19:49:44,059 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 19:49:44,059 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 19:49:44,060 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 19:49:44,061 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 19:49:44,061 - DEBUG : Reloaded misc
2021-07-28 19:49:44,061 - DEBUG : Reloading worksheetfuncs
2021-07-28 19:49:44,062 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 19:49:44,062 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 19:49:44,062 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 19:49:44,062 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 19:49:44,065 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 19:49:44,065 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 19:49:44,066 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 19:49:44,066 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 19:49:44,067 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 19:49:44,068 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 19:49:44,068 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 19:49:44,069 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 19:49:44,069 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 19:49:44,069 - DEBUG : Reloaded worksheetfuncs
2021-07-28 19:49:44,069 - DEBUG : Reloading menus
2021-07-28 19:49:44,072 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 19:49:44,072 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 19:49:44,072 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 19:49:44,072 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 19:49:44,073 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 19:49:44,073 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 19:49:44,073 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 19:49:44,073 - DEBUG : Reloaded menus
2021-07-28 19:49:44,074 - DEBUG : Reloading callbacks
2021-07-28 19:49:44,074 - DEBUG : Reloaded callbacks
2021-07-28 19:49:44,074 - DEBUG : Reloading custom_task_panes
2021-07-28 19:49:44,074 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 19:49:44,074 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 19:49:44,074 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 19:49:44,074 - DEBUG : Reloaded custom_task_panes
2021-07-28 19:49:44,074 - DEBUG : Reloading test
2021-07-28 19:49:44,074 - DEBUG : Reloaded test
2021-07-28 19:49:44,074 - DEBUG : Reloading meta_variables
2021-07-28 19:49:44,083 - DEBUG : Reloaded meta_variables
2021-07-28 19:49:44,083 - DEBUG : Reloading dependency error_functions
2021-07-28 19:49:44,084 - DEBUG : Reloaded dependency error_functions
2021-07-28 19:49:44,085 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 19:49:44,087 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 19:49:44,087 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 19:49:44,088 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 19:49:44,089 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 19:49:44,090 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 19:49:44,091 - DEBUG : Reloading dependency examples
2021-07-28 19:49:44,091 - DEBUG : Reloaded dependency examples
2021-07-28 19:49:44,091 - DEBUG : Reloading ribbon_functions
2021-07-28 19:49:44,091 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001EC7D380FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001EC7D3CDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001EC7D3D5B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001EC7D46E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001EC7D422580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001EC7D45AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001EC7D407070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001EC7D45E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001EC7D45A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001EC7D44C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001EC7D43ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001EC7D436F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001EC7D38AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001EC7D4363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001EC7D380FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001EC7D3CDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001EC7D3D5B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001EC7D46E310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001EC7D422580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001EC7D45AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001EC7D407070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001EC7D45E8E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001EC7D45A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001EC7D44C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001EC7D43ECD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001EC7D436F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001EC7D38AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001EC7D4363A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 19:49:44,091 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 19:49:44,091 - DEBUG : Reloaded ribbon_functions
2021-07-28 19:49:44,091 - DEBUG : Reloading debugging
2021-07-28 19:49:44,091 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 19:49:44,091 - DEBUG : Reloaded debugging
2021-07-28 19:49:44,091 - DEBUG : Reloading selectiontools
2021-07-28 19:49:44,091 - DEBUG : Reloaded selectiontools
2021-07-28 19:49:44,179 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 19:49:44,192 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 19:49:44,217 - INFO : This product is licensed to 
2021-07-28 19:49:44,217 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 19:49:44,222 - DEBUG : Calling pyxll._post_open.
2021-07-28 19:49:44,222 - DEBUG : Binding Python functions to Excel
2021-07-28 19:49:44,222 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 19:49:44,222 - DEBUG :     - pyxll_version
2021-07-28 19:49:44,222 - DEBUG :     - python_version
2021-07-28 19:49:44,223 - DEBUG :     - win32api_is_installed
2021-07-28 19:49:44,223 - DEBUG :     - win32com_is_installed
2021-07-28 19:49:44,223 - DEBUG :     - numpy_is_installed
2021-07-28 19:49:44,223 - DEBUG :     - pyxll_logfile
2021-07-28 19:49:44,223 - DEBUG :     - get_formula
2021-07-28 19:49:44,223 - DEBUG :     - get_array_formula
2021-07-28 19:49:44,223 - DEBUG :     - get_last_error
2021-07-28 19:49:44,223 - DEBUG :     - basic_pyxll_function_1
2021-07-28 19:49:44,223 - DEBUG :     - basic_pyxll_function_2
2021-07-28 19:49:44,223 - DEBUG :     - basic_pyxll_function_3
2021-07-28 19:49:44,224 - DEBUG :     - var_pyxll_function_1
2021-07-28 19:49:44,224 - DEBUG :     - var_pyxll_function_2
2021-07-28 19:49:44,224 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 19:49:44,224 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 19:49:44,224 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 19:49:44,224 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 19:49:44,224 - DEBUG :     - xl_cell_example
2021-07-28 19:49:44,224 - DEBUG :     - recalc_on_open_test
2021-07-28 19:49:44,224 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 19:49:44,225 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 19:49:44,225 - DEBUG :     - one_cell_one_sim
2021-07-28 19:49:44,225 - DEBUG :     - one_row_one_sim
2021-07-28 19:49:44,230 - DEBUG : Adding menus to Excel:
2021-07-28 19:49:44,230 - DEBUG :   - PyXLL
2021-07-28 19:49:44,230 - DEBUG :     - Reload PyXLL
2021-07-28 19:49:44,230 - DEBUG :     - Another example menu item
2021-07-28 19:49:44,230 - DEBUG :     - More Examples
2021-07-28 19:49:44,230 - DEBUG :       - Click me
2021-07-28 19:49:44,230 - DEBUG :       - Unicode Test
2021-07-28 19:49:44,230 - DEBUG :     - Open log file
2021-07-28 19:49:44,230 - DEBUG :     - Attach To VS Code
2021-07-28 19:49:44,230 - DEBUG :     - Custom Task Panes
2021-07-28 19:49:44,230 - DEBUG :       - Qt
2021-07-28 19:49:44,230 - DEBUG :       - Tk
2021-07-28 19:49:44,230 - DEBUG :       - Wx
2021-07-28 19:49:44,230 - DEBUG :     - Example Menu Item 1
2021-07-28 19:49:44,230 - DEBUG :     - Show last error
2021-07-28 19:49:44,230 - DEBUG :     - About PyXLL...
2021-07-28 19:49:44,230 - DEBUG :   - PyXLL example menu
2021-07-28 19:49:44,230 - DEBUG :     - Click me
2021-07-28 19:49:44,236 - DEBUG : Finished binding Python functions
2021-07-28 19:49:44,236 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 19:49:45,662 - DEBUG : pyxll._post_open complete.
2021-07-28 19:49:45,667 - DEBUG : PyXLL initialization complete.
2021-07-28 19:49:47,827 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:49:47,827 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:49:47,848 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:49:47,909 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:49:47,918 - DEBUG : Loading PyXLL COM Addin
2021-07-28 19:49:47,918 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 19:49:47,920 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 19:49:47,932 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 19:50:10,706 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 19:50:10,706 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,706 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 19:50:10,706 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,706 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,706 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,707 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,708 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,710 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,711 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,712 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,713 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,714 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,715 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:50:10,722 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,724 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,732 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,732 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,733 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,735 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,743 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:50:10,745 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,753 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,755 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,763 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,765 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 19:50:10,774 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 19:50:10,776 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 19:50:10,776 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 19:50:31,279 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 19:50:35,704 - ERROR : Traceback (most recent call last):
2021-07-28 19:50:35,704 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 186, in advanced_simulation_cell_wrapper
2021-07-28 19:50:35,705 - ERROR :     return plot(fig)   
2021-07-28 19:50:35,705 - ERROR : RuntimeError: Exception raised calling AddPicture (0x800a03ec, code=0x3ec, facility=0xa, severity=0x1)
2021-07-28 20:46:36,675 - DEBUG : Closing PyXLL Python module.
2021-07-28 20:46:36,676 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 20:46:36,676 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 20:46:36,676 - DEBUG : PyXLL Python module closed.
2021-07-28 20:46:40,730 - DEBUG : 
Wed Jul 28 20:46:40 2021
---------- PyXLL Stopped ----------
2021-07-28 20:46:46,054 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 20:46:46,054 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 20:46:46,055 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 20:46:46,055 - DEBUG : -------- PyXLL config --------
2021-07-28 20:46:46,055 - DEBUG : [LOG]
2021-07-28 20:46:46,055 - DEBUG : encoding = utf-8
2021-07-28 20:46:46,055 - DEBUG : file = pyxll.20210728.log
2021-07-28 20:46:46,055 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 20:46:46,055 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 20:46:46,055 - DEBUG : verbosity = debug
2021-07-28 20:46:46,055 - DEBUG : 
2021-07-28 20:46:46,055 - DEBUG : [PYTHON]
2021-07-28 20:46:46,055 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 20:46:46,055 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 20:46:46,055 - DEBUG : 
2021-07-28 20:46:46,055 - DEBUG : [PYXLL]
2021-07-28 20:46:46,055 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 20:46:46,055 - DEBUG : developer_mode = 1
2021-07-28 20:46:46,055 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 20:46:46,055 - DEBUG : modules = 
2021-07-28 20:46:46,055 - DEBUG :     misc
2021-07-28 20:46:46,055 - DEBUG :     worksheetfuncs
2021-07-28 20:46:46,055 - DEBUG :     menus
2021-07-28 20:46:46,055 - DEBUG :     callbacks
2021-07-28 20:46:46,055 - DEBUG :     custom_task_panes
2021-07-28 20:46:46,055 - DEBUG :     test
2021-07-28 20:46:46,055 - DEBUG :     ribbon_functions
2021-07-28 20:46:46,055 - DEBUG :     debugging
2021-07-28 20:46:46,055 - DEBUG :     meta_variables
2021-07-28 20:46:46,055 - DEBUG :     selectiontools
2021-07-28 20:46:46,055 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 20:46:46,055 - DEBUG : ------------------------------
2021-07-28 20:46:46,057 - DEBUG : Attempting to load python38.dll
2021-07-28 20:46:46,059 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 20:46:46,061 - DEBUG : Checking Py_IsInitialized...
2021-07-28 20:46:46,061 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 20:46:46,258 - DEBUG : Calling Py_Initialize...
2021-07-28 20:46:46,448 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 20:46:46,448 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 20:46:46,451 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 20:46:46,451 - DEBUG : Python is initialized.
2021-07-28 20:46:46,451 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 20:46:46,454 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 20:46:46,454 - DEBUG : Looking for module 'site'...
2021-07-28 20:46:46,497 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 20:46:46,498 - DEBUG : Importing pyxll module
2021-07-28 20:46:46,498 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 20:46:46,498 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 20:46:46,498 - DEBUG :   Detected Python3
2021-07-28 20:46:46,561 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 20:46:46,566 - DEBUG : pyxll module imported
2021-07-28 20:46:46,566 - DEBUG : Initializing PyXLL Python module.
2021-07-28 20:46:46,566 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 20:46:46,566 - DEBUG : PyXLL Python module initialized.
2021-07-28 20:46:46,570 - DEBUG : Functions will not be cancellable by default.
2021-07-28 20:46:46,571 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 20:46:46,827 - DEBUG : Importing misc
2021-07-28 20:46:46,828 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 20:46:46,829 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 20:46:46,829 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 20:46:46,829 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 20:46:46,829 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 20:46:46,829 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 20:46:46,830 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 20:46:46,831 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 20:46:46,831 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 20:46:46,831 - DEBUG : Imported misc
2021-07-28 20:46:46,831 - DEBUG : Importing worksheetfuncs
2021-07-28 20:46:46,833 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 20:46:46,833 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 20:46:46,834 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 20:46:46,834 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 20:46:46,834 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 20:46:46,834 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 20:46:46,835 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 20:46:46,835 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 20:46:46,835 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 20:46:46,835 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 20:46:46,835 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 20:46:46,836 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 20:46:46,836 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 20:46:46,836 - DEBUG : Imported worksheetfuncs
2021-07-28 20:46:46,836 - DEBUG : Importing menus
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 20:46:46,844 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 20:46:46,845 - DEBUG : Imported menus
2021-07-28 20:46:46,845 - DEBUG : Importing callbacks
2021-07-28 20:46:46,846 - DEBUG : Imported callbacks
2021-07-28 20:46:46,846 - DEBUG : Importing custom_task_panes
2021-07-28 20:46:46,848 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 20:46:46,848 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 20:46:46,848 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 20:46:46,848 - DEBUG : Imported custom_task_panes
2021-07-28 20:46:46,849 - DEBUG : Importing test
2021-07-28 20:46:46,850 - DEBUG : Imported test
2021-07-28 20:46:46,850 - DEBUG : Importing ribbon_functions
2021-07-28 20:46:48,324 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 20:46:48,352 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 20:46:48,355 - DEBUG : matplotlib version 3.4.2
2021-07-28 20:46:48,355 - DEBUG : interactive is False
2021-07-28 20:46:48,355 - DEBUG : platform is win32
2021-07-28 20:46:48,355 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_ce0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_ce0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 20:46:48,407 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 20:46:48,413 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 20:46:48,619 - DEBUG : Loaded backend agg version unknown.
2021-07-28 20:46:48,621 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002B42FFC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002B430010C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002B430014B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002B4300B02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002B430062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002B43009AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002B430048070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002B4300968E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002B43009A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002B430081490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002B43007AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002B430075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002B42FFCFFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002B4300753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002B42FFC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002B430010C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002B430014B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002B4300B02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002B430062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002B43009AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002B430048070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002B4300968E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002B43009A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002B430081490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002B43007AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002B430075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002B42FFCFFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002B4300753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 20:46:48,621 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 20:46:48,621 - DEBUG : Imported ribbon_functions
2021-07-28 20:46:48,621 - DEBUG : Importing debugging
2021-07-28 20:46:49,145 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 20:46:49,145 - DEBUG : Imported debugging
2021-07-28 20:46:49,145 - DEBUG : Importing meta_variables
2021-07-28 20:46:49,145 - DEBUG : Imported meta_variables
2021-07-28 20:46:49,145 - DEBUG : Importing selectiontools
2021-07-28 20:46:49,147 - DEBUG : Imported selectiontools
2021-07-28 20:46:49,190 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 20:46:49,195 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 20:46:49,214 - INFO : This product is licensed to 
2021-07-28 20:46:49,214 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 20:46:49,216 - DEBUG : Calling pyxll._post_open.
2021-07-28 20:46:49,216 - DEBUG : Binding Python functions to Excel
2021-07-28 20:46:49,216 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 20:46:49,216 - DEBUG :     - pyxll_version
2021-07-28 20:46:49,216 - DEBUG :     - python_version
2021-07-28 20:46:49,216 - DEBUG :     - win32api_is_installed
2021-07-28 20:46:49,216 - DEBUG :     - win32com_is_installed
2021-07-28 20:46:49,217 - DEBUG :     - numpy_is_installed
2021-07-28 20:46:49,217 - DEBUG :     - pyxll_logfile
2021-07-28 20:46:49,217 - DEBUG :     - get_formula
2021-07-28 20:46:49,217 - DEBUG :     - get_array_formula
2021-07-28 20:46:49,217 - DEBUG :     - get_last_error
2021-07-28 20:46:49,217 - DEBUG :     - basic_pyxll_function_1
2021-07-28 20:46:49,217 - DEBUG :     - basic_pyxll_function_2
2021-07-28 20:46:49,217 - DEBUG :     - basic_pyxll_function_3
2021-07-28 20:46:49,217 - DEBUG :     - var_pyxll_function_1
2021-07-28 20:46:49,217 - DEBUG :     - var_pyxll_function_2
2021-07-28 20:46:49,217 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 20:46:49,217 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 20:46:49,217 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 20:46:49,217 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 20:46:49,217 - DEBUG :     - xl_cell_example
2021-07-28 20:46:49,217 - DEBUG :     - recalc_on_open_test
2021-07-28 20:46:49,217 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 20:46:49,217 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 20:46:49,217 - DEBUG :     - one_cell_one_sim
2021-07-28 20:46:49,217 - DEBUG :     - one_row_one_sim
2021-07-28 20:46:49,229 - DEBUG : Adding menus to Excel:
2021-07-28 20:46:49,229 - DEBUG :   - PyXLL
2021-07-28 20:46:49,229 - DEBUG :     - Reload PyXLL
2021-07-28 20:46:49,229 - DEBUG :     - Another example menu item
2021-07-28 20:46:49,229 - DEBUG :     - More Examples
2021-07-28 20:46:49,229 - DEBUG :       - Click me
2021-07-28 20:46:49,229 - DEBUG :       - Unicode Test
2021-07-28 20:46:49,229 - DEBUG :     - Open log file
2021-07-28 20:46:49,229 - DEBUG :     - Attach To VS Code
2021-07-28 20:46:49,229 - DEBUG :     - Custom Task Panes
2021-07-28 20:46:49,229 - DEBUG :       - Qt
2021-07-28 20:46:49,229 - DEBUG :       - Tk
2021-07-28 20:46:49,229 - DEBUG :       - Wx
2021-07-28 20:46:49,229 - DEBUG :     - Example Menu Item 1
2021-07-28 20:46:49,229 - DEBUG :     - Show last error
2021-07-28 20:46:49,229 - DEBUG :     - About PyXLL...
2021-07-28 20:46:49,229 - DEBUG :   - PyXLL example menu
2021-07-28 20:46:49,229 - DEBUG :     - Click me
2021-07-28 20:46:49,265 - DEBUG : Finished binding Python functions
2021-07-28 20:46:49,265 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 20:46:49,265 - DEBUG : pyxll._post_open complete.
2021-07-28 20:46:49,271 - DEBUG : PyXLL initialization complete.
2021-07-28 20:46:49,542 - DEBUG : Initializing PyXLL Python module.
2021-07-28 20:46:49,542 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 20:46:49,543 - DEBUG : PyXLL Python module initialized.
2021-07-28 20:46:49,544 - DEBUG : Functions will not be cancellable by default.
2021-07-28 20:46:49,545 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 20:46:49,546 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 20:46:49,595 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 20:46:49,595 - DEBUG : Reloading misc
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 20:46:49,595 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 20:46:49,595 - DEBUG : Reloaded misc
2021-07-28 20:46:49,595 - DEBUG : Reloading worksheetfuncs
2021-07-28 20:46:49,601 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 20:46:49,602 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 20:46:49,602 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 20:46:49,602 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 20:46:49,602 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 20:46:49,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 20:46:49,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 20:46:49,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 20:46:49,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 20:46:49,603 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 20:46:49,604 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 20:46:49,604 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 20:46:49,604 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 20:46:49,604 - DEBUG : Reloaded worksheetfuncs
2021-07-28 20:46:49,604 - DEBUG : Reloading menus
2021-07-28 20:46:49,605 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 20:46:49,605 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 20:46:49,605 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 20:46:49,605 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 20:46:49,605 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 20:46:49,606 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 20:46:49,606 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 20:46:49,606 - DEBUG : Reloaded menus
2021-07-28 20:46:49,606 - DEBUG : Reloading callbacks
2021-07-28 20:46:49,607 - DEBUG : Reloaded callbacks
2021-07-28 20:46:49,607 - DEBUG : Reloading custom_task_panes
2021-07-28 20:46:49,607 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 20:46:49,607 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 20:46:49,608 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 20:46:49,608 - DEBUG : Reloaded custom_task_panes
2021-07-28 20:46:49,608 - DEBUG : Reloading test
2021-07-28 20:46:49,608 - DEBUG : Reloaded test
2021-07-28 20:46:49,608 - DEBUG : Reloading meta_variables
2021-07-28 20:46:49,608 - DEBUG : Reloaded meta_variables
2021-07-28 20:46:49,608 - DEBUG : Reloading dependency error_functions
2021-07-28 20:46:49,608 - DEBUG : Reloaded dependency error_functions
2021-07-28 20:46:49,608 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 20:46:49,608 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 20:46:49,608 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 20:46:49,608 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 20:46:49,608 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 20:46:49,608 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 20:46:49,608 - DEBUG : Reloading dependency examples
2021-07-28 20:46:49,614 - DEBUG : Reloaded dependency examples
2021-07-28 20:46:49,614 - DEBUG : Reloading ribbon_functions
2021-07-28 20:46:49,615 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002B42FFC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002B430010C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002B430014B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002B4300B02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002B430062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002B43009AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002B430048070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002B4300968E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002B43009A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002B430081490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002B43007AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002B430075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002B42FFCFFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002B4300753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002B42FFC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002B430010C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002B430014B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002B4300B02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002B430062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002B43009AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002B430048070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002B4300968E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002B43009A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002B430081490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002B43007AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002B430075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002B42FFCFFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002B4300753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 20:46:49,616 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 20:46:49,616 - DEBUG : Reloaded ribbon_functions
2021-07-28 20:46:49,616 - DEBUG : Reloading debugging
2021-07-28 20:46:49,617 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 20:46:49,617 - DEBUG : Reloaded debugging
2021-07-28 20:46:49,617 - DEBUG : Reloading selectiontools
2021-07-28 20:46:49,618 - DEBUG : Reloaded selectiontools
2021-07-28 20:46:49,665 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 20:46:49,669 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 20:46:49,686 - INFO : This product is licensed to 
2021-07-28 20:46:49,686 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 20:46:49,692 - DEBUG : Calling pyxll._post_open.
2021-07-28 20:46:49,692 - DEBUG : Binding Python functions to Excel
2021-07-28 20:46:49,693 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 20:46:49,693 - DEBUG :     - pyxll_version
2021-07-28 20:46:49,693 - DEBUG :     - python_version
2021-07-28 20:46:49,693 - DEBUG :     - win32api_is_installed
2021-07-28 20:46:49,693 - DEBUG :     - win32com_is_installed
2021-07-28 20:46:49,693 - DEBUG :     - numpy_is_installed
2021-07-28 20:46:49,693 - DEBUG :     - pyxll_logfile
2021-07-28 20:46:49,693 - DEBUG :     - get_formula
2021-07-28 20:46:49,693 - DEBUG :     - get_array_formula
2021-07-28 20:46:49,693 - DEBUG :     - get_last_error
2021-07-28 20:46:49,693 - DEBUG :     - basic_pyxll_function_1
2021-07-28 20:46:49,693 - DEBUG :     - basic_pyxll_function_2
2021-07-28 20:46:49,693 - DEBUG :     - basic_pyxll_function_3
2021-07-28 20:46:49,694 - DEBUG :     - var_pyxll_function_1
2021-07-28 20:46:49,694 - DEBUG :     - var_pyxll_function_2
2021-07-28 20:46:49,694 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 20:46:49,694 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 20:46:49,694 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 20:46:49,694 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 20:46:49,694 - DEBUG :     - xl_cell_example
2021-07-28 20:46:49,694 - DEBUG :     - recalc_on_open_test
2021-07-28 20:46:49,694 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 20:46:49,694 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 20:46:49,694 - DEBUG :     - one_cell_one_sim
2021-07-28 20:46:49,694 - DEBUG :     - one_row_one_sim
2021-07-28 20:46:49,700 - DEBUG : Adding menus to Excel:
2021-07-28 20:46:49,700 - DEBUG :   - PyXLL
2021-07-28 20:46:49,700 - DEBUG :     - Reload PyXLL
2021-07-28 20:46:49,700 - DEBUG :     - Another example menu item
2021-07-28 20:46:49,700 - DEBUG :     - More Examples
2021-07-28 20:46:49,700 - DEBUG :       - Click me
2021-07-28 20:46:49,700 - DEBUG :       - Unicode Test
2021-07-28 20:46:49,700 - DEBUG :     - Open log file
2021-07-28 20:46:49,700 - DEBUG :     - Attach To VS Code
2021-07-28 20:46:49,700 - DEBUG :     - Custom Task Panes
2021-07-28 20:46:49,700 - DEBUG :       - Qt
2021-07-28 20:46:49,700 - DEBUG :       - Tk
2021-07-28 20:46:49,700 - DEBUG :       - Wx
2021-07-28 20:46:49,700 - DEBUG :     - Example Menu Item 1
2021-07-28 20:46:49,700 - DEBUG :     - Show last error
2021-07-28 20:46:49,700 - DEBUG :     - About PyXLL...
2021-07-28 20:46:49,700 - DEBUG :   - PyXLL example menu
2021-07-28 20:46:49,700 - DEBUG :     - Click me
2021-07-28 20:46:49,705 - DEBUG : Finished binding Python functions
2021-07-28 20:46:49,705 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 20:46:50,981 - DEBUG : pyxll._post_open complete.
2021-07-28 20:46:50,985 - DEBUG : PyXLL initialization complete.
2021-07-28 20:46:53,327 - DEBUG : Loading PyXLL COM Addin
2021-07-28 20:46:53,327 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 20:46:53,335 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 20:46:53,360 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 20:46:53,364 - DEBUG : Loading PyXLL COM Addin
2021-07-28 20:46:53,364 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 20:46:53,367 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 20:46:53,371 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 20:47:14,919 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 20:47:14,919 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,934 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,934 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,934 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,934 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,934 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,935 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 20:47:14,936 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,937 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,953 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,957 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,973 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,974 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,975 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,976 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,986 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 20:47:14,988 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 20:47:14,988 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:01:34,873 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 21:01:34,874 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:01:34,875 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:01:34,875 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:01:34,875 - DEBUG : -------- PyXLL config --------
2021-07-28 21:01:34,875 - DEBUG : [LOG]
2021-07-28 21:01:34,875 - DEBUG : encoding = utf-8
2021-07-28 21:01:34,875 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:01:34,875 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:01:34,875 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:01:34,875 - DEBUG : verbosity = debug
2021-07-28 21:01:34,875 - DEBUG : 
2021-07-28 21:01:34,875 - DEBUG : [PYTHON]
2021-07-28 21:01:34,875 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:01:34,875 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:01:34,875 - DEBUG : 
2021-07-28 21:01:34,875 - DEBUG : [PYXLL]
2021-07-28 21:01:34,875 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:01:34,875 - DEBUG : developer_mode = 1
2021-07-28 21:01:34,875 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:01:34,875 - DEBUG : modules = 
2021-07-28 21:01:34,875 - DEBUG :     misc
2021-07-28 21:01:34,875 - DEBUG :     worksheetfuncs
2021-07-28 21:01:34,875 - DEBUG :     menus
2021-07-28 21:01:34,875 - DEBUG :     callbacks
2021-07-28 21:01:34,875 - DEBUG :     custom_task_panes
2021-07-28 21:01:34,875 - DEBUG :     test
2021-07-28 21:01:34,875 - DEBUG :     ribbon_functions
2021-07-28 21:01:34,875 - DEBUG :     debugging
2021-07-28 21:01:34,875 - DEBUG :     meta_variables
2021-07-28 21:01:34,875 - DEBUG :     selectiontools
2021-07-28 21:01:34,875 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:01:34,875 - DEBUG : ------------------------------
2021-07-28 21:01:34,875 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:01:34,877 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:01:34,877 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:01:34,877 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:01:34,878 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:01:34,879 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:01:34,879 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:01:35,001 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:01:35,001 - DEBUG : Reloading misc
2021-07-28 21:01:35,004 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:01:35,004 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:01:35,006 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:01:35,006 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:01:35,006 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:01:35,006 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:01:35,008 - DEBUG : Reloaded misc
2021-07-28 21:01:35,008 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:01:35,008 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:01:35,016 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:01:35,016 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:01:35,016 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:01:35,016 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:01:35,017 - DEBUG : Reloading menus
2021-07-28 21:01:35,018 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:01:35,018 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:01:35,018 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:01:35,019 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:01:35,019 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:01:35,019 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:01:35,019 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:01:35,019 - DEBUG : Reloaded menus
2021-07-28 21:01:35,020 - DEBUG : Reloading callbacks
2021-07-28 21:01:35,020 - DEBUG : Reloaded callbacks
2021-07-28 21:01:35,020 - DEBUG : Reloading custom_task_panes
2021-07-28 21:01:35,020 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:01:35,020 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:01:35,020 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:01:35,020 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:01:35,020 - DEBUG : Reloading test
2021-07-28 21:01:35,020 - DEBUG : Reloaded test
2021-07-28 21:01:35,020 - DEBUG : Reloading meta_variables
2021-07-28 21:01:35,020 - DEBUG : Reloaded meta_variables
2021-07-28 21:01:35,020 - DEBUG : Reloading dependency error_functions
2021-07-28 21:01:35,020 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:01:35,020 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:01:35,027 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:01:35,027 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:01:35,027 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:01:35,027 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:01:35,029 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:01:35,029 - DEBUG : Reloading dependency examples
2021-07-28 21:01:35,029 - DEBUG : Reloaded dependency examples
2021-07-28 21:01:35,029 - DEBUG : Reloading ribbon_functions
2021-07-28 21:01:35,029 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002B42FFC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002B430010C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002B430014B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002B4300B02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002B430062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002B43009AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002B430048070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002B4300968E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002B43009A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002B430081490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002B43007AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002B430075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002B42FFCFFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002B4300753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002B42FFC0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002B430010C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002B430014B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000002B4300B02E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000002B430062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002B43009AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000002B430048070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002B4300968E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002B43009A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000002B430081490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002B43007AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000002B430075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000002B42FFCFFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000002B4300753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:01:35,029 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:01:35,029 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:01:35,029 - DEBUG : Reloading debugging
2021-07-28 21:01:35,029 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:01:35,029 - DEBUG : Reloaded debugging
2021-07-28 21:01:35,029 - DEBUG : Reloading selectiontools
2021-07-28 21:01:35,029 - DEBUG : Reloaded selectiontools
2021-07-28 21:01:35,070 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:01:35,081 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:01:35,099 - INFO : This product is licensed to 
2021-07-28 21:01:35,099 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:01:35,100 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:01:35,100 - DEBUG : Binding Python functions to Excel
2021-07-28 21:01:35,101 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:01:35,101 - DEBUG :     - pyxll_version
2021-07-28 21:01:35,101 - DEBUG :     - python_version
2021-07-28 21:01:35,101 - DEBUG :     - win32api_is_installed
2021-07-28 21:01:35,101 - DEBUG :     - win32com_is_installed
2021-07-28 21:01:35,101 - DEBUG :     - numpy_is_installed
2021-07-28 21:01:35,101 - DEBUG :     - pyxll_logfile
2021-07-28 21:01:35,101 - DEBUG :     - get_formula
2021-07-28 21:01:35,101 - DEBUG :     - get_array_formula
2021-07-28 21:01:35,101 - DEBUG :     - get_last_error
2021-07-28 21:01:35,101 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:01:35,101 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:01:35,101 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:01:35,101 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:01:35,101 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:01:35,101 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:01:35,101 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:01:35,102 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:01:35,102 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:01:35,102 - DEBUG :     - xl_cell_example
2021-07-28 21:01:35,102 - DEBUG :     - recalc_on_open_test
2021-07-28 21:01:35,102 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:01:35,102 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:01:35,102 - DEBUG :     - one_cell_one_sim
2021-07-28 21:01:35,102 - DEBUG :     - one_row_one_sim
2021-07-28 21:01:35,105 - DEBUG : Adding menus to Excel:
2021-07-28 21:01:35,105 - DEBUG :   - PyXLL
2021-07-28 21:01:35,105 - DEBUG :     - Reload PyXLL
2021-07-28 21:01:35,105 - DEBUG :     - Another example menu item
2021-07-28 21:01:35,105 - DEBUG :     - More Examples
2021-07-28 21:01:35,105 - DEBUG :       - Click me
2021-07-28 21:01:35,105 - DEBUG :       - Unicode Test
2021-07-28 21:01:35,105 - DEBUG :     - Open log file
2021-07-28 21:01:35,105 - DEBUG :     - Attach To VS Code
2021-07-28 21:01:35,105 - DEBUG :     - Custom Task Panes
2021-07-28 21:01:35,105 - DEBUG :       - Qt
2021-07-28 21:01:35,105 - DEBUG :       - Tk
2021-07-28 21:01:35,105 - DEBUG :       - Wx
2021-07-28 21:01:35,105 - DEBUG :     - Example Menu Item 1
2021-07-28 21:01:35,105 - DEBUG :     - Show last error
2021-07-28 21:01:35,105 - DEBUG :     - About PyXLL...
2021-07-28 21:01:35,105 - DEBUG :   - PyXLL example menu
2021-07-28 21:01:35,105 - DEBUG :     - Click me
2021-07-28 21:01:35,109 - DEBUG : Finished binding Python functions
2021-07-28 21:01:35,109 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:01:36,014 - DEBUG : pyxll._post_open complete.
2021-07-28 21:01:36,015 - DEBUG : PyXLL initialization complete.
2021-07-28 21:01:36,026 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:01:36,026 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:01:36,028 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:01:36,091 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:01:41,907 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:01:41,908 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:01:41,908 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:01:41,908 - DEBUG : PyXLL Python module closed.
2021-07-28 21:01:45,079 - DEBUG : 
Wed Jul 28 21:01:45 2021
---------- PyXLL Stopped ----------
2021-07-28 21:01:56,825 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:01:56,826 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:01:56,826 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:01:56,826 - DEBUG : -------- PyXLL config --------
2021-07-28 21:01:56,826 - DEBUG : [LOG]
2021-07-28 21:01:56,826 - DEBUG : encoding = utf-8
2021-07-28 21:01:56,826 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:01:56,826 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:01:56,826 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:01:56,826 - DEBUG : verbosity = debug
2021-07-28 21:01:56,826 - DEBUG : 
2021-07-28 21:01:56,826 - DEBUG : [PYTHON]
2021-07-28 21:01:56,826 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:01:56,826 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:01:56,826 - DEBUG : 
2021-07-28 21:01:56,826 - DEBUG : [PYXLL]
2021-07-28 21:01:56,826 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:01:56,826 - DEBUG : developer_mode = 1
2021-07-28 21:01:56,826 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:01:56,826 - DEBUG : modules = 
2021-07-28 21:01:56,826 - DEBUG :     misc
2021-07-28 21:01:56,826 - DEBUG :     worksheetfuncs
2021-07-28 21:01:56,826 - DEBUG :     menus
2021-07-28 21:01:56,826 - DEBUG :     callbacks
2021-07-28 21:01:56,826 - DEBUG :     custom_task_panes
2021-07-28 21:01:56,826 - DEBUG :     test
2021-07-28 21:01:56,826 - DEBUG :     ribbon_functions
2021-07-28 21:01:56,827 - DEBUG :     debugging
2021-07-28 21:01:56,827 - DEBUG :     meta_variables
2021-07-28 21:01:56,827 - DEBUG :     selectiontools
2021-07-28 21:01:56,827 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:01:56,827 - DEBUG : ------------------------------
2021-07-28 21:01:56,828 - DEBUG : Attempting to load python38.dll
2021-07-28 21:01:56,831 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:01:56,833 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:01:56,833 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:01:57,062 - DEBUG : Calling Py_Initialize...
2021-07-28 21:01:57,221 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:01:57,221 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:01:57,222 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:01:57,222 - DEBUG : Python is initialized.
2021-07-28 21:01:57,222 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:01:57,224 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:01:57,224 - DEBUG : Looking for module 'site'...
2021-07-28 21:01:57,252 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:01:57,252 - DEBUG : Importing pyxll module
2021-07-28 21:01:57,252 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:01:57,252 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:01:57,252 - DEBUG :   Detected Python3
2021-07-28 21:01:57,290 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:01:57,290 - DEBUG : pyxll module imported
2021-07-28 21:01:57,290 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:01:57,290 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:01:57,290 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:01:57,297 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:01:57,297 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:01:57,601 - DEBUG : Importing misc
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:01:57,603 - DEBUG : Imported misc
2021-07-28 21:01:57,603 - DEBUG : Importing worksheetfuncs
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:01:57,603 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:01:57,603 - DEBUG : Imported worksheetfuncs
2021-07-28 21:01:57,603 - DEBUG : Importing menus
2021-07-28 21:01:57,611 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:01:57,611 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:01:57,611 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:01:57,611 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:01:57,611 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:01:57,611 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:01:57,613 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:01:57,613 - DEBUG : Imported menus
2021-07-28 21:01:57,613 - DEBUG : Importing callbacks
2021-07-28 21:01:57,613 - DEBUG : Imported callbacks
2021-07-28 21:01:57,614 - DEBUG : Importing custom_task_panes
2021-07-28 21:01:57,614 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:01:57,614 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:01:57,614 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:01:57,614 - DEBUG : Imported custom_task_panes
2021-07-28 21:01:57,614 - DEBUG : Importing test
2021-07-28 21:01:57,614 - DEBUG : Imported test
2021-07-28 21:01:57,615 - DEBUG : Importing ribbon_functions
2021-07-28 21:01:58,857 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:01:58,899 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:01:58,907 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:01:58,907 - DEBUG : interactive is False
2021-07-28 21:01:58,907 - DEBUG : platform is win32
2021-07-28 21:01:58,907 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_300000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_300000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:01:58,977 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:01:58,987 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:01:59,256 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:01:59,257 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:01:59,257 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:01:59,257 - DEBUG : Imported ribbon_functions
2021-07-28 21:01:59,257 - DEBUG : Importing debugging
2021-07-28 21:01:59,783 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:01:59,783 - DEBUG : Imported debugging
2021-07-28 21:01:59,783 - DEBUG : Importing meta_variables
2021-07-28 21:01:59,783 - DEBUG : Imported meta_variables
2021-07-28 21:01:59,783 - DEBUG : Importing selectiontools
2021-07-28 21:01:59,787 - DEBUG : Imported selectiontools
2021-07-28 21:01:59,827 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:01:59,833 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:01:59,847 - INFO : This product is licensed to 
2021-07-28 21:01:59,847 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:01:59,849 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:01:59,849 - DEBUG : Binding Python functions to Excel
2021-07-28 21:01:59,849 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:01:59,849 - DEBUG :     - pyxll_version
2021-07-28 21:01:59,849 - DEBUG :     - python_version
2021-07-28 21:01:59,849 - DEBUG :     - win32api_is_installed
2021-07-28 21:01:59,849 - DEBUG :     - win32com_is_installed
2021-07-28 21:01:59,849 - DEBUG :     - numpy_is_installed
2021-07-28 21:01:59,849 - DEBUG :     - pyxll_logfile
2021-07-28 21:01:59,849 - DEBUG :     - get_formula
2021-07-28 21:01:59,849 - DEBUG :     - get_array_formula
2021-07-28 21:01:59,849 - DEBUG :     - get_last_error
2021-07-28 21:01:59,849 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:01:59,849 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:01:59,849 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:01:59,849 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:01:59,850 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:01:59,850 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:01:59,850 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:01:59,850 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:01:59,850 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:01:59,850 - DEBUG :     - xl_cell_example
2021-07-28 21:01:59,850 - DEBUG :     - recalc_on_open_test
2021-07-28 21:01:59,851 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:01:59,851 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:01:59,851 - DEBUG :     - one_cell_one_sim
2021-07-28 21:01:59,851 - DEBUG :     - one_row_one_sim
2021-07-28 21:01:59,856 - DEBUG : Adding menus to Excel:
2021-07-28 21:01:59,856 - DEBUG :   - PyXLL
2021-07-28 21:01:59,856 - DEBUG :     - Reload PyXLL
2021-07-28 21:01:59,856 - DEBUG :     - Another example menu item
2021-07-28 21:01:59,856 - DEBUG :     - More Examples
2021-07-28 21:01:59,856 - DEBUG :       - Click me
2021-07-28 21:01:59,856 - DEBUG :       - Unicode Test
2021-07-28 21:01:59,856 - DEBUG :     - Open log file
2021-07-28 21:01:59,856 - DEBUG :     - Attach To VS Code
2021-07-28 21:01:59,856 - DEBUG :     - Custom Task Panes
2021-07-28 21:01:59,856 - DEBUG :       - Qt
2021-07-28 21:01:59,856 - DEBUG :       - Tk
2021-07-28 21:01:59,856 - DEBUG :       - Wx
2021-07-28 21:01:59,856 - DEBUG :     - Example Menu Item 1
2021-07-28 21:01:59,856 - DEBUG :     - Show last error
2021-07-28 21:01:59,856 - DEBUG :     - About PyXLL...
2021-07-28 21:01:59,856 - DEBUG :   - PyXLL example menu
2021-07-28 21:01:59,856 - DEBUG :     - Click me
2021-07-28 21:01:59,901 - DEBUG : Finished binding Python functions
2021-07-28 21:01:59,901 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:01:59,902 - DEBUG : pyxll._post_open complete.
2021-07-28 21:01:59,906 - DEBUG : PyXLL initialization complete.
2021-07-28 21:02:00,243 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:02:00,243 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:02:00,243 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:02:00,244 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:02:00,245 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:02:00,245 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:02:00,309 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:02:00,310 - DEBUG : Reloading misc
2021-07-28 21:02:00,310 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:02:00,313 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:02:00,313 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:02:00,314 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:02:00,315 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:02:00,315 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:02:00,316 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:02:00,316 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:02:00,317 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:02:00,317 - DEBUG : Reloaded misc
2021-07-28 21:02:00,319 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:02:00,319 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:02:00,319 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:02:00,319 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:02:00,319 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:02:00,323 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:02:00,324 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:02:00,325 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:02:00,326 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:02:00,327 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:02:00,327 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:02:00,327 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:02:00,327 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:02:00,327 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:02:00,330 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:02:00,330 - DEBUG : Reloading menus
2021-07-28 21:02:00,332 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:02:00,333 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:02:00,333 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:02:00,334 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:02:00,334 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:02:00,334 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:02:00,335 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:02:00,335 - DEBUG : Reloaded menus
2021-07-28 21:02:00,336 - DEBUG : Reloading callbacks
2021-07-28 21:02:00,338 - DEBUG : Reloaded callbacks
2021-07-28 21:02:00,338 - DEBUG : Reloading custom_task_panes
2021-07-28 21:02:00,338 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:02:00,338 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:02:00,338 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:02:00,338 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:02:00,338 - DEBUG : Reloading test
2021-07-28 21:02:00,338 - DEBUG : Reloaded test
2021-07-28 21:02:00,338 - DEBUG : Reloading meta_variables
2021-07-28 21:02:00,346 - DEBUG : Reloaded meta_variables
2021-07-28 21:02:00,348 - DEBUG : Reloading dependency error_functions
2021-07-28 21:02:00,350 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:02:00,350 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:02:00,350 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:02:00,350 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:02:00,355 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:02:00,356 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:02:00,358 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:02:00,358 - DEBUG : Reloading dependency examples
2021-07-28 21:02:00,363 - DEBUG : Reloaded dependency examples
2021-07-28 21:02:00,363 - DEBUG : Reloading ribbon_functions
2021-07-28 21:02:00,365 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:02:00,365 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:02:00,365 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:02:00,365 - DEBUG : Reloading debugging
2021-07-28 21:02:00,365 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:02:00,365 - DEBUG : Reloaded debugging
2021-07-28 21:02:00,365 - DEBUG : Reloading selectiontools
2021-07-28 21:02:00,373 - DEBUG : Reloaded selectiontools
2021-07-28 21:02:00,522 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:02:00,531 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:02:00,563 - INFO : This product is licensed to 
2021-07-28 21:02:00,563 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:02:00,566 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:02:00,566 - DEBUG : Binding Python functions to Excel
2021-07-28 21:02:00,567 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:02:00,567 - DEBUG :     - pyxll_version
2021-07-28 21:02:00,567 - DEBUG :     - python_version
2021-07-28 21:02:00,567 - DEBUG :     - win32api_is_installed
2021-07-28 21:02:00,567 - DEBUG :     - win32com_is_installed
2021-07-28 21:02:00,567 - DEBUG :     - numpy_is_installed
2021-07-28 21:02:00,568 - DEBUG :     - pyxll_logfile
2021-07-28 21:02:00,568 - DEBUG :     - get_formula
2021-07-28 21:02:00,568 - DEBUG :     - get_array_formula
2021-07-28 21:02:00,568 - DEBUG :     - get_last_error
2021-07-28 21:02:00,568 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:02:00,568 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:02:00,568 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:02:00,568 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:02:00,568 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:02:00,568 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:02:00,568 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:02:00,569 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:02:00,569 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:02:00,569 - DEBUG :     - xl_cell_example
2021-07-28 21:02:00,569 - DEBUG :     - recalc_on_open_test
2021-07-28 21:02:00,569 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:02:00,569 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:02:00,569 - DEBUG :     - one_cell_one_sim
2021-07-28 21:02:00,569 - DEBUG :     - one_row_one_sim
2021-07-28 21:02:00,573 - DEBUG : Adding menus to Excel:
2021-07-28 21:02:00,573 - DEBUG :   - PyXLL
2021-07-28 21:02:00,573 - DEBUG :     - Reload PyXLL
2021-07-28 21:02:00,573 - DEBUG :     - Another example menu item
2021-07-28 21:02:00,573 - DEBUG :     - More Examples
2021-07-28 21:02:00,573 - DEBUG :       - Click me
2021-07-28 21:02:00,573 - DEBUG :       - Unicode Test
2021-07-28 21:02:00,573 - DEBUG :     - Open log file
2021-07-28 21:02:00,573 - DEBUG :     - Attach To VS Code
2021-07-28 21:02:00,573 - DEBUG :     - Custom Task Panes
2021-07-28 21:02:00,573 - DEBUG :       - Qt
2021-07-28 21:02:00,573 - DEBUG :       - Tk
2021-07-28 21:02:00,573 - DEBUG :       - Wx
2021-07-28 21:02:00,573 - DEBUG :     - Example Menu Item 1
2021-07-28 21:02:00,573 - DEBUG :     - Show last error
2021-07-28 21:02:00,573 - DEBUG :     - About PyXLL...
2021-07-28 21:02:00,573 - DEBUG :   - PyXLL example menu
2021-07-28 21:02:00,573 - DEBUG :     - Click me
2021-07-28 21:02:00,582 - DEBUG : Finished binding Python functions
2021-07-28 21:02:00,583 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:02:01,835 - DEBUG : pyxll._post_open complete.
2021-07-28 21:02:01,843 - DEBUG : PyXLL initialization complete.
2021-07-28 21:02:04,438 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:02:04,438 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:02:04,460 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:02:04,529 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:02:04,540 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:02:04,540 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:02:04,548 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:02:04,561 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:02:39,569 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,569 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:02:39,585 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,600 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,616 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,631 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,632 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:02:39,633 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,634 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,649 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,654 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,656 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,664 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,666 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,674 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,676 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,684 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:02:39,686 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:02:39,687 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:02:39,687 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:04:06,608 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 21:04:06,611 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:04:06,611 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:04:06,611 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:04:06,611 - DEBUG : -------- PyXLL config --------
2021-07-28 21:04:06,611 - DEBUG : [LOG]
2021-07-28 21:04:06,611 - DEBUG : encoding = utf-8
2021-07-28 21:04:06,611 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:04:06,611 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:04:06,611 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:04:06,611 - DEBUG : verbosity = debug
2021-07-28 21:04:06,611 - DEBUG : 
2021-07-28 21:04:06,611 - DEBUG : [PYTHON]
2021-07-28 21:04:06,611 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:04:06,611 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:04:06,611 - DEBUG : 
2021-07-28 21:04:06,611 - DEBUG : [PYXLL]
2021-07-28 21:04:06,611 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:04:06,611 - DEBUG : developer_mode = 1
2021-07-28 21:04:06,611 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:04:06,611 - DEBUG : modules = 
2021-07-28 21:04:06,611 - DEBUG :     misc
2021-07-28 21:04:06,611 - DEBUG :     worksheetfuncs
2021-07-28 21:04:06,611 - DEBUG :     menus
2021-07-28 21:04:06,611 - DEBUG :     callbacks
2021-07-28 21:04:06,611 - DEBUG :     custom_task_panes
2021-07-28 21:04:06,611 - DEBUG :     test
2021-07-28 21:04:06,611 - DEBUG :     ribbon_functions
2021-07-28 21:04:06,611 - DEBUG :     debugging
2021-07-28 21:04:06,611 - DEBUG :     meta_variables
2021-07-28 21:04:06,611 - DEBUG :     selectiontools
2021-07-28 21:04:06,611 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:04:06,611 - DEBUG : ------------------------------
2021-07-28 21:04:06,611 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:04:06,612 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:04:06,612 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:04:06,612 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:04:06,614 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:04:06,615 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:04:06,615 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:04:06,680 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:04:06,680 - DEBUG : Reloading misc
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:04:06,680 - DEBUG : Reloaded misc
2021-07-28 21:04:06,680 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:04:06,680 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:04:06,692 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:04:06,692 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:04:06,692 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:04:06,693 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:04:06,693 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:04:06,693 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:04:06,694 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:04:06,694 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:04:06,694 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:04:06,694 - DEBUG : Reloading menus
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:04:06,695 - DEBUG : Reloaded menus
2021-07-28 21:04:06,695 - DEBUG : Reloading callbacks
2021-07-28 21:04:06,695 - DEBUG : Reloaded callbacks
2021-07-28 21:04:06,695 - DEBUG : Reloading custom_task_panes
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:04:06,695 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:04:06,695 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:04:06,695 - DEBUG : Reloading test
2021-07-28 21:04:06,695 - DEBUG : Reloaded test
2021-07-28 21:04:06,695 - DEBUG : Reloading meta_variables
2021-07-28 21:04:06,721 - DEBUG : Reloaded meta_variables
2021-07-28 21:04:06,721 - DEBUG : Reloading dependency error_functions
2021-07-28 21:04:06,723 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:04:06,723 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:04:06,724 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:04:06,724 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:04:06,725 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:04:06,725 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:04:06,739 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:04:06,739 - DEBUG : Reloading dependency examples
2021-07-28 21:04:06,740 - DEBUG : Reloaded dependency examples
2021-07-28 21:04:06,740 - DEBUG : Reloading ribbon_functions
2021-07-28 21:04:06,740 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:04:06,740 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:04:06,740 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:04:06,740 - DEBUG : Reloading debugging
2021-07-28 21:04:06,740 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:04:06,740 - DEBUG : Reloaded debugging
2021-07-28 21:04:06,740 - DEBUG : Reloading selectiontools
2021-07-28 21:04:06,740 - DEBUG : Reloaded selectiontools
2021-07-28 21:04:06,823 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:04:06,825 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:04:06,847 - INFO : This product is licensed to 
2021-07-28 21:04:06,847 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:04:06,854 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:04:06,854 - DEBUG : Binding Python functions to Excel
2021-07-28 21:04:06,854 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:04:06,854 - DEBUG :     - pyxll_version
2021-07-28 21:04:06,854 - DEBUG :     - python_version
2021-07-28 21:04:06,854 - DEBUG :     - win32api_is_installed
2021-07-28 21:04:06,854 - DEBUG :     - win32com_is_installed
2021-07-28 21:04:06,854 - DEBUG :     - numpy_is_installed
2021-07-28 21:04:06,854 - DEBUG :     - pyxll_logfile
2021-07-28 21:04:06,854 - DEBUG :     - get_formula
2021-07-28 21:04:06,854 - DEBUG :     - get_array_formula
2021-07-28 21:04:06,854 - DEBUG :     - get_last_error
2021-07-28 21:04:06,854 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:04:06,854 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:04:06,854 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:04:06,855 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:04:06,855 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:04:06,855 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:04:06,855 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:04:06,855 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:04:06,855 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:04:06,855 - DEBUG :     - xl_cell_example
2021-07-28 21:04:06,855 - DEBUG :     - recalc_on_open_test
2021-07-28 21:04:06,855 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:04:06,855 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:04:06,855 - DEBUG :     - one_cell_one_sim
2021-07-28 21:04:06,855 - DEBUG :     - one_row_one_sim
2021-07-28 21:04:06,858 - DEBUG : Adding menus to Excel:
2021-07-28 21:04:06,858 - DEBUG :   - PyXLL
2021-07-28 21:04:06,858 - DEBUG :     - Reload PyXLL
2021-07-28 21:04:06,858 - DEBUG :     - Another example menu item
2021-07-28 21:04:06,858 - DEBUG :     - More Examples
2021-07-28 21:04:06,858 - DEBUG :       - Click me
2021-07-28 21:04:06,858 - DEBUG :       - Unicode Test
2021-07-28 21:04:06,858 - DEBUG :     - Open log file
2021-07-28 21:04:06,858 - DEBUG :     - Attach To VS Code
2021-07-28 21:04:06,858 - DEBUG :     - Custom Task Panes
2021-07-28 21:04:06,858 - DEBUG :       - Qt
2021-07-28 21:04:06,858 - DEBUG :       - Tk
2021-07-28 21:04:06,858 - DEBUG :       - Wx
2021-07-28 21:04:06,858 - DEBUG :     - Example Menu Item 1
2021-07-28 21:04:06,858 - DEBUG :     - Show last error
2021-07-28 21:04:06,858 - DEBUG :     - About PyXLL...
2021-07-28 21:04:06,858 - DEBUG :   - PyXLL example menu
2021-07-28 21:04:06,858 - DEBUG :     - Click me
2021-07-28 21:04:06,864 - DEBUG : Finished binding Python functions
2021-07-28 21:04:06,864 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:04:07,619 - DEBUG : pyxll._post_open complete.
2021-07-28 21:04:07,619 - DEBUG : PyXLL initialization complete.
2021-07-28 21:04:07,621 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:04:07,621 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:04:07,623 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:04:07,723 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:04:15,523 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 21:04:15,523 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:04:15,523 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:04:15,523 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:04:15,523 - DEBUG : -------- PyXLL config --------
2021-07-28 21:04:15,523 - DEBUG : [LOG]
2021-07-28 21:04:15,523 - DEBUG : encoding = utf-8
2021-07-28 21:04:15,523 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:04:15,523 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:04:15,523 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:04:15,523 - DEBUG : verbosity = debug
2021-07-28 21:04:15,523 - DEBUG : 
2021-07-28 21:04:15,523 - DEBUG : [PYTHON]
2021-07-28 21:04:15,523 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:04:15,523 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:04:15,523 - DEBUG : 
2021-07-28 21:04:15,523 - DEBUG : [PYXLL]
2021-07-28 21:04:15,523 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:04:15,523 - DEBUG : developer_mode = 1
2021-07-28 21:04:15,523 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:04:15,523 - DEBUG : modules = 
2021-07-28 21:04:15,523 - DEBUG :     misc
2021-07-28 21:04:15,523 - DEBUG :     worksheetfuncs
2021-07-28 21:04:15,523 - DEBUG :     menus
2021-07-28 21:04:15,523 - DEBUG :     callbacks
2021-07-28 21:04:15,523 - DEBUG :     custom_task_panes
2021-07-28 21:04:15,523 - DEBUG :     test
2021-07-28 21:04:15,523 - DEBUG :     ribbon_functions
2021-07-28 21:04:15,523 - DEBUG :     debugging
2021-07-28 21:04:15,523 - DEBUG :     meta_variables
2021-07-28 21:04:15,523 - DEBUG :     selectiontools
2021-07-28 21:04:15,523 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:04:15,523 - DEBUG : ------------------------------
2021-07-28 21:04:15,523 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:04:15,523 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:04:15,523 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:04:15,523 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:04:15,527 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:04:15,528 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:04:15,528 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:04:15,584 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:04:15,600 - DEBUG : Reloading misc
2021-07-28 21:04:15,601 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:04:15,601 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:04:15,602 - DEBUG : Reloaded misc
2021-07-28 21:04:15,602 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:04:15,602 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:04:15,602 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:04:15,602 - DEBUG : Reloading menus
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:04:15,602 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:04:15,602 - DEBUG : Reloaded menus
2021-07-28 21:04:15,602 - DEBUG : Reloading callbacks
2021-07-28 21:04:15,612 - DEBUG : Reloaded callbacks
2021-07-28 21:04:15,612 - DEBUG : Reloading custom_task_panes
2021-07-28 21:04:15,613 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:04:15,613 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:04:15,613 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:04:15,613 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:04:15,613 - DEBUG : Reloading test
2021-07-28 21:04:15,613 - DEBUG : Reloaded test
2021-07-28 21:04:15,613 - DEBUG : Reloading meta_variables
2021-07-28 21:04:15,613 - DEBUG : Reloaded meta_variables
2021-07-28 21:04:15,613 - DEBUG : Reloading dependency error_functions
2021-07-28 21:04:15,613 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:04:15,613 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:04:15,613 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:04:15,618 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:04:15,618 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:04:15,618 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:04:15,619 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:04:15,619 - DEBUG : Reloading dependency examples
2021-07-28 21:04:15,619 - DEBUG : Reloaded dependency examples
2021-07-28 21:04:15,619 - DEBUG : Reloading ribbon_functions
2021-07-28 21:04:15,619 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F8E0FC1FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F8E100CC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F8E1012B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001F8E10B22E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001F8E1062580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001F8E109AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001F8E1044070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F8E10A38E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001F8E109A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001F8E108D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001F8E107FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001F8E1075F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001F8E0FCCFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001F8E10753A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:04:15,619 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:04:15,619 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:04:15,619 - DEBUG : Reloading debugging
2021-07-28 21:04:15,619 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:04:15,619 - DEBUG : Reloaded debugging
2021-07-28 21:04:15,619 - DEBUG : Reloading selectiontools
2021-07-28 21:04:15,619 - DEBUG : Reloaded selectiontools
2021-07-28 21:04:15,663 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:04:15,667 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:04:15,686 - INFO : This product is licensed to 
2021-07-28 21:04:15,686 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:04:15,690 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:04:15,690 - DEBUG : Binding Python functions to Excel
2021-07-28 21:04:15,690 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:04:15,690 - DEBUG :     - pyxll_version
2021-07-28 21:04:15,690 - DEBUG :     - python_version
2021-07-28 21:04:15,690 - DEBUG :     - win32api_is_installed
2021-07-28 21:04:15,690 - DEBUG :     - win32com_is_installed
2021-07-28 21:04:15,690 - DEBUG :     - numpy_is_installed
2021-07-28 21:04:15,690 - DEBUG :     - pyxll_logfile
2021-07-28 21:04:15,690 - DEBUG :     - get_formula
2021-07-28 21:04:15,690 - DEBUG :     - get_array_formula
2021-07-28 21:04:15,690 - DEBUG :     - get_last_error
2021-07-28 21:04:15,690 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:04:15,690 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:04:15,690 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:04:15,690 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:04:15,690 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:04:15,690 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:04:15,690 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:04:15,690 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:04:15,690 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:04:15,690 - DEBUG :     - xl_cell_example
2021-07-28 21:04:15,690 - DEBUG :     - recalc_on_open_test
2021-07-28 21:04:15,690 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:04:15,690 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:04:15,690 - DEBUG :     - one_cell_one_sim
2021-07-28 21:04:15,690 - DEBUG :     - one_row_one_sim
2021-07-28 21:04:15,697 - DEBUG : Adding menus to Excel:
2021-07-28 21:04:15,697 - DEBUG :   - PyXLL
2021-07-28 21:04:15,697 - DEBUG :     - Reload PyXLL
2021-07-28 21:04:15,697 - DEBUG :     - Another example menu item
2021-07-28 21:04:15,697 - DEBUG :     - More Examples
2021-07-28 21:04:15,697 - DEBUG :       - Click me
2021-07-28 21:04:15,697 - DEBUG :       - Unicode Test
2021-07-28 21:04:15,697 - DEBUG :     - Open log file
2021-07-28 21:04:15,697 - DEBUG :     - Attach To VS Code
2021-07-28 21:04:15,697 - DEBUG :     - Custom Task Panes
2021-07-28 21:04:15,697 - DEBUG :       - Qt
2021-07-28 21:04:15,697 - DEBUG :       - Tk
2021-07-28 21:04:15,697 - DEBUG :       - Wx
2021-07-28 21:04:15,697 - DEBUG :     - Example Menu Item 1
2021-07-28 21:04:15,697 - DEBUG :     - Show last error
2021-07-28 21:04:15,697 - DEBUG :     - About PyXLL...
2021-07-28 21:04:15,697 - DEBUG :   - PyXLL example menu
2021-07-28 21:04:15,697 - DEBUG :     - Click me
2021-07-28 21:04:15,708 - DEBUG : Finished binding Python functions
2021-07-28 21:04:15,708 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:04:16,677 - DEBUG : pyxll._post_open complete.
2021-07-28 21:04:16,678 - DEBUG : PyXLL initialization complete.
2021-07-28 21:04:16,683 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:04:16,683 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:04:16,685 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:04:16,691 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:04:23,769 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:04:23,770 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:04:23,770 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:04:23,770 - DEBUG : PyXLL Python module closed.
2021-07-28 21:04:25,947 - DEBUG : 
Wed Jul 28 21:04:25 2021
---------- PyXLL Stopped ----------
2021-07-28 21:04:28,335 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:04:28,335 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:04:28,336 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:04:28,336 - DEBUG : -------- PyXLL config --------
2021-07-28 21:04:28,336 - DEBUG : [LOG]
2021-07-28 21:04:28,336 - DEBUG : encoding = utf-8
2021-07-28 21:04:28,336 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:04:28,336 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:04:28,336 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:04:28,336 - DEBUG : verbosity = debug
2021-07-28 21:04:28,336 - DEBUG : 
2021-07-28 21:04:28,336 - DEBUG : [PYTHON]
2021-07-28 21:04:28,336 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:04:28,336 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:04:28,336 - DEBUG : 
2021-07-28 21:04:28,336 - DEBUG : [PYXLL]
2021-07-28 21:04:28,336 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:04:28,336 - DEBUG : developer_mode = 1
2021-07-28 21:04:28,336 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:04:28,336 - DEBUG : modules = 
2021-07-28 21:04:28,336 - DEBUG :     misc
2021-07-28 21:04:28,336 - DEBUG :     worksheetfuncs
2021-07-28 21:04:28,336 - DEBUG :     menus
2021-07-28 21:04:28,336 - DEBUG :     callbacks
2021-07-28 21:04:28,336 - DEBUG :     custom_task_panes
2021-07-28 21:04:28,336 - DEBUG :     test
2021-07-28 21:04:28,336 - DEBUG :     ribbon_functions
2021-07-28 21:04:28,336 - DEBUG :     debugging
2021-07-28 21:04:28,336 - DEBUG :     meta_variables
2021-07-28 21:04:28,336 - DEBUG :     selectiontools
2021-07-28 21:04:28,336 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:04:28,336 - DEBUG : ------------------------------
2021-07-28 21:04:28,338 - DEBUG : Attempting to load python38.dll
2021-07-28 21:04:28,341 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:04:28,342 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:04:28,342 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:04:28,505 - DEBUG : Calling Py_Initialize...
2021-07-28 21:04:28,662 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:04:28,662 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:04:28,662 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:04:28,662 - DEBUG : Python is initialized.
2021-07-28 21:04:28,663 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:04:28,665 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:04:28,665 - DEBUG : Looking for module 'site'...
2021-07-28 21:04:28,687 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:04:28,697 - DEBUG : Importing pyxll module
2021-07-28 21:04:28,697 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:04:28,697 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:04:28,697 - DEBUG :   Detected Python3
2021-07-28 21:04:28,736 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:04:28,741 - DEBUG : pyxll module imported
2021-07-28 21:04:28,741 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:04:28,741 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:04:28,741 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:04:28,743 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:04:28,744 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:04:29,078 - DEBUG : Importing misc
2021-07-28 21:04:29,078 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:04:29,078 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:04:29,078 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:04:29,079 - DEBUG : Imported misc
2021-07-28 21:04:29,079 - DEBUG : Importing worksheetfuncs
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:04:29,079 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:04:29,079 - DEBUG : Imported worksheetfuncs
2021-07-28 21:04:29,079 - DEBUG : Importing menus
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:04:29,089 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:04:29,089 - DEBUG : Imported menus
2021-07-28 21:04:29,089 - DEBUG : Importing callbacks
2021-07-28 21:04:29,090 - DEBUG : Imported callbacks
2021-07-28 21:04:29,090 - DEBUG : Importing custom_task_panes
2021-07-28 21:04:29,090 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:04:29,091 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:04:29,091 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:04:29,091 - DEBUG : Imported custom_task_panes
2021-07-28 21:04:29,091 - DEBUG : Importing test
2021-07-28 21:04:29,092 - DEBUG : Imported test
2021-07-28 21:04:29,092 - DEBUG : Importing ribbon_functions
2021-07-28 21:04:30,868 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:04:30,929 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:04:30,930 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:04:30,930 - DEBUG : interactive is False
2021-07-28 21:04:30,930 - DEBUG : platform is win32
2021-07-28 21:04:30,930 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_3c0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_3c0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:04:31,021 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:04:31,028 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:04:31,288 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:04:31,291 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001AA62091FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001AA620E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001AA620DDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001AA621822E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001AA62132580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001AA6216AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001AA62118070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001AA621738E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001AA6216A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001AA6215D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001AA6214FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001AA62140F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001AA6209CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001AA621403A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001AA62091FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001AA620E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001AA620DDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001AA621822E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001AA62132580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001AA6216AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001AA62118070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001AA621738E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001AA6216A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001AA6215D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001AA6214FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001AA62140F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001AA6209CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001AA621403A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:04:31,291 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:04:31,291 - DEBUG : Imported ribbon_functions
2021-07-28 21:04:31,291 - DEBUG : Importing debugging
2021-07-28 21:04:31,773 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:04:31,773 - DEBUG : Imported debugging
2021-07-28 21:04:31,773 - DEBUG : Importing meta_variables
2021-07-28 21:04:31,773 - DEBUG : Imported meta_variables
2021-07-28 21:04:31,773 - DEBUG : Importing selectiontools
2021-07-28 21:04:31,773 - DEBUG : Imported selectiontools
2021-07-28 21:04:31,812 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:04:31,814 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:04:31,832 - INFO : This product is licensed to 
2021-07-28 21:04:31,832 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:04:31,833 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:04:31,833 - DEBUG : Binding Python functions to Excel
2021-07-28 21:04:31,833 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:04:31,833 - DEBUG :     - pyxll_version
2021-07-28 21:04:31,833 - DEBUG :     - python_version
2021-07-28 21:04:31,833 - DEBUG :     - win32api_is_installed
2021-07-28 21:04:31,833 - DEBUG :     - win32com_is_installed
2021-07-28 21:04:31,833 - DEBUG :     - numpy_is_installed
2021-07-28 21:04:31,833 - DEBUG :     - pyxll_logfile
2021-07-28 21:04:31,833 - DEBUG :     - get_formula
2021-07-28 21:04:31,833 - DEBUG :     - get_array_formula
2021-07-28 21:04:31,834 - DEBUG :     - get_last_error
2021-07-28 21:04:31,834 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:04:31,834 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:04:31,834 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:04:31,834 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:04:31,834 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:04:31,834 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:04:31,834 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:04:31,834 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:04:31,834 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:04:31,834 - DEBUG :     - xl_cell_example
2021-07-28 21:04:31,834 - DEBUG :     - recalc_on_open_test
2021-07-28 21:04:31,834 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:04:31,834 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:04:31,835 - DEBUG :     - one_cell_one_sim
2021-07-28 21:04:31,835 - DEBUG :     - one_row_one_sim
2021-07-28 21:04:31,845 - DEBUG : Adding menus to Excel:
2021-07-28 21:04:31,845 - DEBUG :   - PyXLL
2021-07-28 21:04:31,845 - DEBUG :     - Reload PyXLL
2021-07-28 21:04:31,845 - DEBUG :     - Another example menu item
2021-07-28 21:04:31,845 - DEBUG :     - More Examples
2021-07-28 21:04:31,845 - DEBUG :       - Click me
2021-07-28 21:04:31,845 - DEBUG :       - Unicode Test
2021-07-28 21:04:31,845 - DEBUG :     - Open log file
2021-07-28 21:04:31,845 - DEBUG :     - Attach To VS Code
2021-07-28 21:04:31,845 - DEBUG :     - Custom Task Panes
2021-07-28 21:04:31,845 - DEBUG :       - Qt
2021-07-28 21:04:31,845 - DEBUG :       - Tk
2021-07-28 21:04:31,845 - DEBUG :       - Wx
2021-07-28 21:04:31,845 - DEBUG :     - Example Menu Item 1
2021-07-28 21:04:31,845 - DEBUG :     - Show last error
2021-07-28 21:04:31,845 - DEBUG :     - About PyXLL...
2021-07-28 21:04:31,845 - DEBUG :   - PyXLL example menu
2021-07-28 21:04:31,845 - DEBUG :     - Click me
2021-07-28 21:04:31,891 - DEBUG : Finished binding Python functions
2021-07-28 21:04:31,891 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:04:31,891 - DEBUG : pyxll._post_open complete.
2021-07-28 21:04:31,901 - DEBUG : PyXLL initialization complete.
2021-07-28 21:04:34,038 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:04:34,038 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:04:34,046 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:04:34,075 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:04:54,837 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,837 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,844 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,845 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,846 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,847 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,854 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:04:54,856 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,856 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,857 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,858 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,859 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,860 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,861 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,864 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,865 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,867 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,868 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,869 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:04:54,874 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,875 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,876 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,877 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,878 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,885 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,887 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,891 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:04:54,892 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,895 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,897 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,898 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,899 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,905 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,906 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,907 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:04:54,908 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:04:54,909 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:04:54,909 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:23:27,653 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 21:23:27,654 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:23:27,654 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:23:27,654 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:23:27,654 - DEBUG : -------- PyXLL config --------
2021-07-28 21:23:27,654 - DEBUG : [LOG]
2021-07-28 21:23:27,654 - DEBUG : encoding = utf-8
2021-07-28 21:23:27,654 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:23:27,654 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:23:27,654 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:23:27,654 - DEBUG : verbosity = debug
2021-07-28 21:23:27,654 - DEBUG : 
2021-07-28 21:23:27,654 - DEBUG : [PYTHON]
2021-07-28 21:23:27,654 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:23:27,654 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:23:27,654 - DEBUG : 
2021-07-28 21:23:27,654 - DEBUG : [PYXLL]
2021-07-28 21:23:27,654 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:23:27,654 - DEBUG : developer_mode = 1
2021-07-28 21:23:27,654 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:23:27,654 - DEBUG : modules = 
2021-07-28 21:23:27,654 - DEBUG :     misc
2021-07-28 21:23:27,654 - DEBUG :     worksheetfuncs
2021-07-28 21:23:27,654 - DEBUG :     menus
2021-07-28 21:23:27,654 - DEBUG :     callbacks
2021-07-28 21:23:27,654 - DEBUG :     custom_task_panes
2021-07-28 21:23:27,654 - DEBUG :     test
2021-07-28 21:23:27,654 - DEBUG :     ribbon_functions
2021-07-28 21:23:27,654 - DEBUG :     debugging
2021-07-28 21:23:27,654 - DEBUG :     meta_variables
2021-07-28 21:23:27,656 - DEBUG :     selectiontools
2021-07-28 21:23:27,656 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:23:27,656 - DEBUG : ------------------------------
2021-07-28 21:23:27,656 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:23:27,656 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:23:27,656 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:23:27,657 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:23:27,658 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:23:27,659 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:23:27,659 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:23:27,732 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:23:27,732 - DEBUG : Reloading misc
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:23:27,732 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:23:27,738 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:23:27,738 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:23:27,738 - DEBUG : Reloaded misc
2021-07-28 21:23:27,739 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:23:27,739 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:23:27,739 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:23:27,739 - DEBUG : Reloading menus
2021-07-28 21:23:27,739 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:23:27,739 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:23:27,739 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:23:27,739 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:23:27,739 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:23:27,739 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:23:27,747 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:23:27,747 - DEBUG : Reloaded menus
2021-07-28 21:23:27,747 - DEBUG : Reloading callbacks
2021-07-28 21:23:27,748 - DEBUG : Reloaded callbacks
2021-07-28 21:23:27,748 - DEBUG : Reloading custom_task_panes
2021-07-28 21:23:27,748 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:23:27,748 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:23:27,748 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:23:27,748 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:23:27,748 - DEBUG : Reloading test
2021-07-28 21:23:27,748 - DEBUG : Reloaded test
2021-07-28 21:23:27,748 - DEBUG : Reloading meta_variables
2021-07-28 21:23:27,748 - DEBUG : Reloaded meta_variables
2021-07-28 21:23:27,748 - DEBUG : Reloading dependency error_functions
2021-07-28 21:23:27,748 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:23:27,748 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:23:27,748 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:23:27,748 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:23:27,748 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:23:27,748 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:23:27,755 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:23:27,755 - DEBUG : Reloading dependency examples
2021-07-28 21:23:27,756 - DEBUG : Reloaded dependency examples
2021-07-28 21:23:27,756 - DEBUG : Reloading ribbon_functions
2021-07-28 21:23:27,756 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001AA62091FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001AA620E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001AA620DDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001AA621822E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001AA62132580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001AA6216AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001AA62118070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001AA621738E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001AA6216A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001AA6215D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001AA6214FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001AA62140F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001AA6209CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001AA621403A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001AA62091FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001AA620E0C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001AA620DDB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001AA621822E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001AA62132580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001AA6216AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001AA62118070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001AA621738E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001AA6216A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001AA6215D490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001AA6214FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001AA62140F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001AA6209CFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001AA621403A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:23:27,756 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:23:27,756 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:23:27,756 - DEBUG : Reloading debugging
2021-07-28 21:23:27,756 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:23:27,756 - DEBUG : Reloaded debugging
2021-07-28 21:23:27,756 - DEBUG : Reloading selectiontools
2021-07-28 21:23:27,756 - DEBUG : Reloaded selectiontools
2021-07-28 21:23:27,796 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:23:27,803 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:23:27,835 - INFO : This product is licensed to 
2021-07-28 21:23:27,835 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:23:27,838 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:23:27,838 - DEBUG : Binding Python functions to Excel
2021-07-28 21:23:27,838 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:23:27,838 - DEBUG :     - pyxll_version
2021-07-28 21:23:27,838 - DEBUG :     - python_version
2021-07-28 21:23:27,838 - DEBUG :     - win32api_is_installed
2021-07-28 21:23:27,838 - DEBUG :     - win32com_is_installed
2021-07-28 21:23:27,838 - DEBUG :     - numpy_is_installed
2021-07-28 21:23:27,838 - DEBUG :     - pyxll_logfile
2021-07-28 21:23:27,838 - DEBUG :     - get_formula
2021-07-28 21:23:27,838 - DEBUG :     - get_array_formula
2021-07-28 21:23:27,838 - DEBUG :     - get_last_error
2021-07-28 21:23:27,838 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:23:27,838 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:23:27,838 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:23:27,838 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:23:27,838 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:23:27,838 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:23:27,838 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:23:27,838 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:23:27,838 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:23:27,838 - DEBUG :     - xl_cell_example
2021-07-28 21:23:27,838 - DEBUG :     - recalc_on_open_test
2021-07-28 21:23:27,838 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:23:27,838 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:23:27,838 - DEBUG :     - one_cell_one_sim
2021-07-28 21:23:27,838 - DEBUG :     - one_row_one_sim
2021-07-28 21:23:27,846 - DEBUG : Adding menus to Excel:
2021-07-28 21:23:27,846 - DEBUG :   - PyXLL
2021-07-28 21:23:27,846 - DEBUG :     - Reload PyXLL
2021-07-28 21:23:27,846 - DEBUG :     - Another example menu item
2021-07-28 21:23:27,846 - DEBUG :     - More Examples
2021-07-28 21:23:27,846 - DEBUG :       - Click me
2021-07-28 21:23:27,846 - DEBUG :       - Unicode Test
2021-07-28 21:23:27,846 - DEBUG :     - Open log file
2021-07-28 21:23:27,846 - DEBUG :     - Attach To VS Code
2021-07-28 21:23:27,846 - DEBUG :     - Custom Task Panes
2021-07-28 21:23:27,846 - DEBUG :       - Qt
2021-07-28 21:23:27,846 - DEBUG :       - Tk
2021-07-28 21:23:27,846 - DEBUG :       - Wx
2021-07-28 21:23:27,846 - DEBUG :     - Example Menu Item 1
2021-07-28 21:23:27,846 - DEBUG :     - Show last error
2021-07-28 21:23:27,846 - DEBUG :     - About PyXLL...
2021-07-28 21:23:27,846 - DEBUG :   - PyXLL example menu
2021-07-28 21:23:27,846 - DEBUG :     - Click me
2021-07-28 21:23:27,856 - DEBUG : Finished binding Python functions
2021-07-28 21:23:27,856 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:23:28,665 - DEBUG : pyxll._post_open complete.
2021-07-28 21:23:28,666 - DEBUG : PyXLL initialization complete.
2021-07-28 21:23:28,678 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:23:28,678 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:23:28,680 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:23:28,834 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:23:53,318 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:23:53,318 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:23:53,319 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:23:53,319 - DEBUG : PyXLL Python module closed.
2021-07-28 21:23:54,975 - DEBUG : 
Wed Jul 28 21:23:54 2021
---------- PyXLL Stopped ----------
2021-07-28 21:24:00,782 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:24:00,782 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:24:00,782 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:24:00,782 - DEBUG : -------- PyXLL config --------
2021-07-28 21:24:00,782 - DEBUG : [LOG]
2021-07-28 21:24:00,782 - DEBUG : encoding = utf-8
2021-07-28 21:24:00,782 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:24:00,783 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:24:00,783 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:24:00,783 - DEBUG : verbosity = debug
2021-07-28 21:24:00,783 - DEBUG : 
2021-07-28 21:24:00,783 - DEBUG : [PYTHON]
2021-07-28 21:24:00,783 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:24:00,783 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:24:00,783 - DEBUG : 
2021-07-28 21:24:00,783 - DEBUG : [PYXLL]
2021-07-28 21:24:00,783 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:24:00,783 - DEBUG : developer_mode = 1
2021-07-28 21:24:00,783 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:24:00,783 - DEBUG : modules = 
2021-07-28 21:24:00,783 - DEBUG :     misc
2021-07-28 21:24:00,783 - DEBUG :     worksheetfuncs
2021-07-28 21:24:00,783 - DEBUG :     menus
2021-07-28 21:24:00,783 - DEBUG :     callbacks
2021-07-28 21:24:00,783 - DEBUG :     custom_task_panes
2021-07-28 21:24:00,783 - DEBUG :     test
2021-07-28 21:24:00,783 - DEBUG :     ribbon_functions
2021-07-28 21:24:00,783 - DEBUG :     debugging
2021-07-28 21:24:00,783 - DEBUG :     meta_variables
2021-07-28 21:24:00,783 - DEBUG :     selectiontools
2021-07-28 21:24:00,783 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:24:00,783 - DEBUG : ------------------------------
2021-07-28 21:24:00,783 - DEBUG : Attempting to load python38.dll
2021-07-28 21:24:00,785 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:24:00,786 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:24:00,786 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:24:00,996 - DEBUG : Calling Py_Initialize...
2021-07-28 21:24:01,209 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:24:01,209 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:24:01,209 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:24:01,209 - DEBUG : Python is initialized.
2021-07-28 21:24:01,210 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:24:01,212 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:24:01,212 - DEBUG : Looking for module 'site'...
2021-07-28 21:24:01,241 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:24:01,243 - DEBUG : Importing pyxll module
2021-07-28 21:24:01,243 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:24:01,243 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:24:01,243 - DEBUG :   Detected Python3
2021-07-28 21:24:01,282 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:24:01,283 - DEBUG : pyxll module imported
2021-07-28 21:24:01,283 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:24:01,283 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:24:01,283 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:24:01,289 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:24:01,289 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:24:01,557 - DEBUG : Importing misc
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:24:01,558 - DEBUG : Imported misc
2021-07-28 21:24:01,558 - DEBUG : Importing worksheetfuncs
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:24:01,558 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:24:01,563 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:24:01,563 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:24:01,563 - DEBUG : Imported worksheetfuncs
2021-07-28 21:24:01,563 - DEBUG : Importing menus
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:24:01,568 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:24:01,568 - DEBUG : Imported menus
2021-07-28 21:24:01,568 - DEBUG : Importing callbacks
2021-07-28 21:24:01,570 - DEBUG : Imported callbacks
2021-07-28 21:24:01,570 - DEBUG : Importing custom_task_panes
2021-07-28 21:24:01,570 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:24:01,570 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:24:01,570 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:24:01,571 - DEBUG : Imported custom_task_panes
2021-07-28 21:24:01,571 - DEBUG : Importing test
2021-07-28 21:24:01,571 - DEBUG : Imported test
2021-07-28 21:24:01,571 - DEBUG : Importing ribbon_functions
2021-07-28 21:24:03,358 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:24:03,400 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:24:03,400 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:24:03,400 - DEBUG : interactive is False
2021-07-28 21:24:03,400 - DEBUG : platform is win32
2021-07-28 21:24:03,400 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_fb0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_fb0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:24:03,462 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:24:03,479 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:24:03,660 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:24:03,664 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000209FFEA0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000209FFEEDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000209FFEE8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000209FFF902E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000209FFF42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000209FFF7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000209FFF29070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000209FFF838E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000209FFF7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000209FFF62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000209FFF54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000209FFF56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000209FFEABFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000209FFF563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000209FFEA0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000209FFEEDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000209FFEE8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000209FFF902E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000209FFF42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000209FFF7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000209FFF29070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000209FFF838E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000209FFF7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000209FFF62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000209FFF54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000209FFF56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000209FFEABFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000209FFF563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:24:03,664 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:24:03,664 - DEBUG : Imported ribbon_functions
2021-07-28 21:24:03,664 - DEBUG : Importing debugging
2021-07-28 21:24:04,136 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:24:04,136 - DEBUG : Imported debugging
2021-07-28 21:24:04,136 - DEBUG : Importing meta_variables
2021-07-28 21:24:04,136 - DEBUG : Imported meta_variables
2021-07-28 21:24:04,136 - DEBUG : Importing selectiontools
2021-07-28 21:24:04,136 - DEBUG : Imported selectiontools
2021-07-28 21:24:04,179 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:24:04,179 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:24:04,200 - INFO : This product is licensed to 
2021-07-28 21:24:04,200 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:24:04,202 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:24:04,202 - DEBUG : Binding Python functions to Excel
2021-07-28 21:24:04,202 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:24:04,202 - DEBUG :     - pyxll_version
2021-07-28 21:24:04,202 - DEBUG :     - python_version
2021-07-28 21:24:04,202 - DEBUG :     - win32api_is_installed
2021-07-28 21:24:04,202 - DEBUG :     - win32com_is_installed
2021-07-28 21:24:04,202 - DEBUG :     - numpy_is_installed
2021-07-28 21:24:04,202 - DEBUG :     - pyxll_logfile
2021-07-28 21:24:04,202 - DEBUG :     - get_formula
2021-07-28 21:24:04,202 - DEBUG :     - get_array_formula
2021-07-28 21:24:04,202 - DEBUG :     - get_last_error
2021-07-28 21:24:04,202 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:24:04,202 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:24:04,202 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:24:04,202 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:24:04,202 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:24:04,203 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:24:04,203 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:24:04,203 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:24:04,203 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:24:04,203 - DEBUG :     - xl_cell_example
2021-07-28 21:24:04,203 - DEBUG :     - recalc_on_open_test
2021-07-28 21:24:04,203 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:24:04,203 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:24:04,203 - DEBUG :     - one_cell_one_sim
2021-07-28 21:24:04,203 - DEBUG :     - one_row_one_sim
2021-07-28 21:24:04,216 - DEBUG : Adding menus to Excel:
2021-07-28 21:24:04,216 - DEBUG :   - PyXLL
2021-07-28 21:24:04,216 - DEBUG :     - Reload PyXLL
2021-07-28 21:24:04,216 - DEBUG :     - Another example menu item
2021-07-28 21:24:04,216 - DEBUG :     - More Examples
2021-07-28 21:24:04,216 - DEBUG :       - Click me
2021-07-28 21:24:04,216 - DEBUG :       - Unicode Test
2021-07-28 21:24:04,216 - DEBUG :     - Open log file
2021-07-28 21:24:04,216 - DEBUG :     - Attach To VS Code
2021-07-28 21:24:04,216 - DEBUG :     - Custom Task Panes
2021-07-28 21:24:04,216 - DEBUG :       - Qt
2021-07-28 21:24:04,216 - DEBUG :       - Tk
2021-07-28 21:24:04,216 - DEBUG :       - Wx
2021-07-28 21:24:04,216 - DEBUG :     - Example Menu Item 1
2021-07-28 21:24:04,216 - DEBUG :     - Show last error
2021-07-28 21:24:04,216 - DEBUG :     - About PyXLL...
2021-07-28 21:24:04,216 - DEBUG :   - PyXLL example menu
2021-07-28 21:24:04,216 - DEBUG :     - Click me
2021-07-28 21:24:04,261 - DEBUG : Finished binding Python functions
2021-07-28 21:24:04,261 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:24:04,261 - DEBUG : pyxll._post_open complete.
2021-07-28 21:24:04,274 - DEBUG : PyXLL initialization complete.
2021-07-28 21:24:04,579 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:24:04,579 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:24:04,580 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:24:04,581 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:24:04,582 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:24:04,583 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:24:04,662 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:24:04,662 - DEBUG : Reloading misc
2021-07-28 21:24:04,664 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:24:04,664 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:24:04,665 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:24:04,665 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:24:04,666 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:24:04,666 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:24:04,667 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:24:04,667 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:24:04,668 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:24:04,668 - DEBUG : Reloaded misc
2021-07-28 21:24:04,669 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:24:04,671 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:24:04,671 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:24:04,672 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:24:04,672 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:24:04,672 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:24:04,672 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:24:04,673 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:24:04,673 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:24:04,673 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:24:04,675 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:24:04,675 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:24:04,675 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:24:04,675 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:24:04,675 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:24:04,675 - DEBUG : Reloading menus
2021-07-28 21:24:04,675 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:24:04,675 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:24:04,678 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:24:04,678 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:24:04,678 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:24:04,678 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:24:04,678 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:24:04,679 - DEBUG : Reloaded menus
2021-07-28 21:24:04,679 - DEBUG : Reloading callbacks
2021-07-28 21:24:04,679 - DEBUG : Reloaded callbacks
2021-07-28 21:24:04,680 - DEBUG : Reloading custom_task_panes
2021-07-28 21:24:04,681 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:24:04,682 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:24:04,682 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:24:04,682 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:24:04,682 - DEBUG : Reloading test
2021-07-28 21:24:04,685 - DEBUG : Reloaded test
2021-07-28 21:24:04,685 - DEBUG : Reloading meta_variables
2021-07-28 21:24:04,686 - DEBUG : Reloaded meta_variables
2021-07-28 21:24:04,687 - DEBUG : Reloading dependency error_functions
2021-07-28 21:24:04,689 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:24:04,689 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:24:04,690 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:24:04,690 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:24:04,691 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:24:04,692 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:24:04,693 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:24:04,693 - DEBUG : Reloading dependency examples
2021-07-28 21:24:04,695 - DEBUG : Reloaded dependency examples
2021-07-28 21:24:04,695 - DEBUG : Reloading ribbon_functions
2021-07-28 21:24:04,696 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000209FFEA0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000209FFEEDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000209FFEE8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000209FFF902E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000209FFF42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000209FFF7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000209FFF29070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000209FFF838E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000209FFF7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000209FFF62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000209FFF54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000209FFF56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000209FFEABFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000209FFF563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000209FFEA0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000209FFEEDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000209FFEE8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000209FFF902E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000209FFF42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000209FFF7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000209FFF29070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000209FFF838E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000209FFF7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000209FFF62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000209FFF54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000209FFF56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000209FFEABFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000209FFF563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:24:04,696 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:24:04,696 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:24:04,696 - DEBUG : Reloading debugging
2021-07-28 21:24:04,696 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:24:04,701 - DEBUG : Reloaded debugging
2021-07-28 21:24:04,701 - DEBUG : Reloading selectiontools
2021-07-28 21:24:04,702 - DEBUG : Reloaded selectiontools
2021-07-28 21:24:04,789 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:24:04,797 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:24:04,822 - INFO : This product is licensed to 
2021-07-28 21:24:04,823 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:24:04,824 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:24:04,824 - DEBUG : Binding Python functions to Excel
2021-07-28 21:24:04,825 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:24:04,825 - DEBUG :     - pyxll_version
2021-07-28 21:24:04,825 - DEBUG :     - python_version
2021-07-28 21:24:04,825 - DEBUG :     - win32api_is_installed
2021-07-28 21:24:04,825 - DEBUG :     - win32com_is_installed
2021-07-28 21:24:04,825 - DEBUG :     - numpy_is_installed
2021-07-28 21:24:04,825 - DEBUG :     - pyxll_logfile
2021-07-28 21:24:04,825 - DEBUG :     - get_formula
2021-07-28 21:24:04,825 - DEBUG :     - get_array_formula
2021-07-28 21:24:04,825 - DEBUG :     - get_last_error
2021-07-28 21:24:04,825 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:24:04,825 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:24:04,825 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:24:04,825 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:24:04,825 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:24:04,825 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:24:04,825 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:24:04,825 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:24:04,825 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:24:04,825 - DEBUG :     - xl_cell_example
2021-07-28 21:24:04,825 - DEBUG :     - recalc_on_open_test
2021-07-28 21:24:04,825 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:24:04,825 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:24:04,825 - DEBUG :     - one_cell_one_sim
2021-07-28 21:24:04,825 - DEBUG :     - one_row_one_sim
2021-07-28 21:24:04,830 - DEBUG : Adding menus to Excel:
2021-07-28 21:24:04,830 - DEBUG :   - PyXLL
2021-07-28 21:24:04,830 - DEBUG :     - Reload PyXLL
2021-07-28 21:24:04,830 - DEBUG :     - Another example menu item
2021-07-28 21:24:04,830 - DEBUG :     - More Examples
2021-07-28 21:24:04,830 - DEBUG :       - Click me
2021-07-28 21:24:04,830 - DEBUG :       - Unicode Test
2021-07-28 21:24:04,830 - DEBUG :     - Open log file
2021-07-28 21:24:04,830 - DEBUG :     - Attach To VS Code
2021-07-28 21:24:04,830 - DEBUG :     - Custom Task Panes
2021-07-28 21:24:04,830 - DEBUG :       - Qt
2021-07-28 21:24:04,830 - DEBUG :       - Tk
2021-07-28 21:24:04,830 - DEBUG :       - Wx
2021-07-28 21:24:04,830 - DEBUG :     - Example Menu Item 1
2021-07-28 21:24:04,830 - DEBUG :     - Show last error
2021-07-28 21:24:04,830 - DEBUG :     - About PyXLL...
2021-07-28 21:24:04,830 - DEBUG :   - PyXLL example menu
2021-07-28 21:24:04,830 - DEBUG :     - Click me
2021-07-28 21:24:04,835 - DEBUG : Finished binding Python functions
2021-07-28 21:24:04,835 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:24:06,274 - DEBUG : pyxll._post_open complete.
2021-07-28 21:24:06,277 - DEBUG : PyXLL initialization complete.
2021-07-28 21:24:11,507 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:24:11,507 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:24:11,519 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:24:11,548 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:24:11,552 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:24:11,552 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:24:11,555 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:24:11,560 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:24:14,684 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,684 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,689 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:24:14,690 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,691 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,692 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,693 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,694 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,708 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,709 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,709 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,709 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,710 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,711 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,712 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,713 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,714 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,725 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,726 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,727 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,729 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,730 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,742 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,743 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,744 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,744 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,744 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,744 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,745 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,746 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,758 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,759 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:24:14,760 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:24:14,760 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:26:10,132 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 21:26:10,135 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:26:10,135 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:26:10,135 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:26:10,135 - DEBUG : -------- PyXLL config --------
2021-07-28 21:26:10,135 - DEBUG : [LOG]
2021-07-28 21:26:10,135 - DEBUG : encoding = utf-8
2021-07-28 21:26:10,135 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:26:10,135 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:26:10,135 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:26:10,135 - DEBUG : verbosity = debug
2021-07-28 21:26:10,135 - DEBUG : 
2021-07-28 21:26:10,135 - DEBUG : [PYTHON]
2021-07-28 21:26:10,135 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:26:10,135 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:26:10,135 - DEBUG : 
2021-07-28 21:26:10,135 - DEBUG : [PYXLL]
2021-07-28 21:26:10,135 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:26:10,135 - DEBUG : developer_mode = 1
2021-07-28 21:26:10,135 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:26:10,135 - DEBUG : modules = 
2021-07-28 21:26:10,135 - DEBUG :     misc
2021-07-28 21:26:10,135 - DEBUG :     worksheetfuncs
2021-07-28 21:26:10,135 - DEBUG :     menus
2021-07-28 21:26:10,135 - DEBUG :     callbacks
2021-07-28 21:26:10,135 - DEBUG :     custom_task_panes
2021-07-28 21:26:10,135 - DEBUG :     test
2021-07-28 21:26:10,135 - DEBUG :     ribbon_functions
2021-07-28 21:26:10,135 - DEBUG :     debugging
2021-07-28 21:26:10,135 - DEBUG :     meta_variables
2021-07-28 21:26:10,135 - DEBUG :     selectiontools
2021-07-28 21:26:10,135 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:26:10,135 - DEBUG : ------------------------------
2021-07-28 21:26:10,135 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:26:10,136 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:26:10,136 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:26:10,136 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:26:10,138 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:26:10,139 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:26:10,139 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:26:10,197 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:26:10,197 - DEBUG : Reloading misc
2021-07-28 21:26:10,197 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:26:10,213 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:26:10,213 - DEBUG : Reloaded misc
2021-07-28 21:26:10,213 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:26:10,217 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:26:10,217 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:26:10,217 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:26:10,218 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:26:10,218 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:26:10,218 - DEBUG : Reloading menus
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:26:10,218 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:26:10,218 - DEBUG : Reloaded menus
2021-07-28 21:26:10,218 - DEBUG : Reloading callbacks
2021-07-28 21:26:10,218 - DEBUG : Reloaded callbacks
2021-07-28 21:26:10,218 - DEBUG : Reloading custom_task_panes
2021-07-28 21:26:10,225 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:26:10,225 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:26:10,225 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:26:10,225 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:26:10,225 - DEBUG : Reloading test
2021-07-28 21:26:10,226 - DEBUG : Reloaded test
2021-07-28 21:26:10,226 - DEBUG : Reloading meta_variables
2021-07-28 21:26:10,226 - DEBUG : Reloaded meta_variables
2021-07-28 21:26:10,226 - DEBUG : Reloading dependency error_functions
2021-07-28 21:26:10,226 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:26:10,226 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:26:10,226 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:26:10,226 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:26:10,226 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:26:10,226 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:26:10,226 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:26:10,226 - DEBUG : Reloading dependency examples
2021-07-28 21:26:10,233 - DEBUG : Reloaded dependency examples
2021-07-28 21:26:10,233 - DEBUG : Reloading ribbon_functions
2021-07-28 21:26:10,234 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000209FFEA0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000209FFEEDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000209FFEE8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000209FFF902E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000209FFF42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000209FFF7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000209FFF29070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000209FFF838E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000209FFF7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000209FFF62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000209FFF54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000209FFF56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000209FFEABFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000209FFF563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000209FFEA0FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000209FFEEDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000209FFEE8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000209FFF902E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000209FFF42580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000209FFF7AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000209FFF29070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000209FFF838E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000209FFF7A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000209FFF62490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000209FFF54CD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000209FFF56F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000209FFEABFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000209FFF563A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:26:10,234 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:26:10,234 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:26:10,234 - DEBUG : Reloading debugging
2021-07-28 21:26:10,234 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:26:10,234 - DEBUG : Reloaded debugging
2021-07-28 21:26:10,234 - DEBUG : Reloading selectiontools
2021-07-28 21:26:10,234 - DEBUG : Reloaded selectiontools
2021-07-28 21:26:10,271 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:26:10,278 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:26:10,302 - INFO : This product is licensed to 
2021-07-28 21:26:10,302 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:26:10,305 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:26:10,305 - DEBUG : Binding Python functions to Excel
2021-07-28 21:26:10,305 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:26:10,305 - DEBUG :     - pyxll_version
2021-07-28 21:26:10,305 - DEBUG :     - python_version
2021-07-28 21:26:10,305 - DEBUG :     - win32api_is_installed
2021-07-28 21:26:10,305 - DEBUG :     - win32com_is_installed
2021-07-28 21:26:10,305 - DEBUG :     - numpy_is_installed
2021-07-28 21:26:10,305 - DEBUG :     - pyxll_logfile
2021-07-28 21:26:10,305 - DEBUG :     - get_formula
2021-07-28 21:26:10,306 - DEBUG :     - get_array_formula
2021-07-28 21:26:10,306 - DEBUG :     - get_last_error
2021-07-28 21:26:10,306 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:26:10,306 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:26:10,306 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:26:10,306 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:26:10,306 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:26:10,306 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:26:10,306 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:26:10,306 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:26:10,306 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:26:10,306 - DEBUG :     - xl_cell_example
2021-07-28 21:26:10,306 - DEBUG :     - recalc_on_open_test
2021-07-28 21:26:10,306 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:26:10,306 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:26:10,306 - DEBUG :     - one_cell_one_sim
2021-07-28 21:26:10,306 - DEBUG :     - one_row_one_sim
2021-07-28 21:26:10,310 - DEBUG : Adding menus to Excel:
2021-07-28 21:26:10,310 - DEBUG :   - PyXLL
2021-07-28 21:26:10,310 - DEBUG :     - Reload PyXLL
2021-07-28 21:26:10,310 - DEBUG :     - Another example menu item
2021-07-28 21:26:10,310 - DEBUG :     - More Examples
2021-07-28 21:26:10,310 - DEBUG :       - Click me
2021-07-28 21:26:10,310 - DEBUG :       - Unicode Test
2021-07-28 21:26:10,310 - DEBUG :     - Open log file
2021-07-28 21:26:10,310 - DEBUG :     - Attach To VS Code
2021-07-28 21:26:10,310 - DEBUG :     - Custom Task Panes
2021-07-28 21:26:10,310 - DEBUG :       - Qt
2021-07-28 21:26:10,310 - DEBUG :       - Tk
2021-07-28 21:26:10,310 - DEBUG :       - Wx
2021-07-28 21:26:10,310 - DEBUG :     - Example Menu Item 1
2021-07-28 21:26:10,310 - DEBUG :     - Show last error
2021-07-28 21:26:10,310 - DEBUG :     - About PyXLL...
2021-07-28 21:26:10,310 - DEBUG :   - PyXLL example menu
2021-07-28 21:26:10,310 - DEBUG :     - Click me
2021-07-28 21:26:10,319 - DEBUG : Finished binding Python functions
2021-07-28 21:26:10,319 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-28 21:26:11,176 - DEBUG : pyxll._post_open complete.
2021-07-28 21:26:11,177 - DEBUG : PyXLL initialization complete.
2021-07-28 21:26:11,180 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:26:11,180 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:26:11,183 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:26:11,297 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:26:24,187 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:26:24,187 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:26:24,187 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:26:24,187 - DEBUG : PyXLL Python module closed.
2021-07-28 21:26:28,821 - DEBUG : 
Wed Jul 28 21:26:28 2021
---------- PyXLL Stopped ----------
2021-07-28 21:26:49,284 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:26:49,284 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:26:49,284 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:26:49,284 - DEBUG : -------- PyXLL config --------
2021-07-28 21:26:49,284 - DEBUG : [LOG]
2021-07-28 21:26:49,284 - DEBUG : encoding = utf-8
2021-07-28 21:26:49,284 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:26:49,284 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:26:49,284 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:26:49,284 - DEBUG : verbosity = debug
2021-07-28 21:26:49,284 - DEBUG : 
2021-07-28 21:26:49,284 - DEBUG : [PYTHON]
2021-07-28 21:26:49,284 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:26:49,284 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:26:49,284 - DEBUG : 
2021-07-28 21:26:49,284 - DEBUG : [PYXLL]
2021-07-28 21:26:49,284 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:26:49,284 - DEBUG : developer_mode = 1
2021-07-28 21:26:49,284 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:26:49,284 - DEBUG : modules = 
2021-07-28 21:26:49,284 - DEBUG :     misc
2021-07-28 21:26:49,284 - DEBUG :     worksheetfuncs
2021-07-28 21:26:49,284 - DEBUG :     menus
2021-07-28 21:26:49,284 - DEBUG :     callbacks
2021-07-28 21:26:49,284 - DEBUG :     custom_task_panes
2021-07-28 21:26:49,284 - DEBUG :     test
2021-07-28 21:26:49,284 - DEBUG :     ribbon_functions
2021-07-28 21:26:49,284 - DEBUG :     debugging
2021-07-28 21:26:49,284 - DEBUG :     meta_variables
2021-07-28 21:26:49,284 - DEBUG :     selectiontools
2021-07-28 21:26:49,284 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:26:49,284 - DEBUG : ------------------------------
2021-07-28 21:26:49,285 - DEBUG : Attempting to load python38.dll
2021-07-28 21:26:49,288 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:26:49,289 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:26:49,289 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:26:49,482 - DEBUG : Calling Py_Initialize...
2021-07-28 21:26:49,669 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:26:49,670 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:26:49,670 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:26:49,670 - DEBUG : Python is initialized.
2021-07-28 21:26:49,671 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:26:49,672 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:26:49,672 - DEBUG : Looking for module 'site'...
2021-07-28 21:26:49,700 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:26:49,702 - DEBUG : Importing pyxll module
2021-07-28 21:26:49,702 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:26:49,702 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:26:49,702 - DEBUG :   Detected Python3
2021-07-28 21:26:49,740 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:26:49,745 - DEBUG : pyxll module imported
2021-07-28 21:26:49,745 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:26:49,745 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:26:49,746 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:26:49,747 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:26:49,747 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:26:50,068 - DEBUG : Importing misc
2021-07-28 21:26:50,069 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:26:50,069 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:26:50,069 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:26:50,070 - DEBUG : Imported misc
2021-07-28 21:26:50,070 - DEBUG : Importing worksheetfuncs
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:26:50,070 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:26:50,074 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:26:50,074 - DEBUG : Imported worksheetfuncs
2021-07-28 21:26:50,074 - DEBUG : Importing menus
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:26:50,080 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:26:50,080 - DEBUG : Imported menus
2021-07-28 21:26:50,080 - DEBUG : Importing callbacks
2021-07-28 21:26:50,080 - DEBUG : Imported callbacks
2021-07-28 21:26:50,080 - DEBUG : Importing custom_task_panes
2021-07-28 21:26:50,082 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:26:50,082 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:26:50,082 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:26:50,082 - DEBUG : Imported custom_task_panes
2021-07-28 21:26:50,082 - DEBUG : Importing test
2021-07-28 21:26:50,083 - DEBUG : Imported test
2021-07-28 21:26:50,083 - DEBUG : Importing ribbon_functions
2021-07-28 21:26:51,798 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:26:51,838 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:26:51,838 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:26:51,838 - DEBUG : interactive is False
2021-07-28 21:26:51,838 - DEBUG : platform is win32
2021-07-28 21:26:51,838 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_7e0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_7e0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:26:51,904 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:26:51,922 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:26:52,145 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:26:52,148 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001B1A042FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001B1A047FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001B1A0489B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001B1A05202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001B1A04D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001B1A050AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001B1A04B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001B1A05138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001B1A050A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001B1A04F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001B1A04EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001B1A04E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001B1A043BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001B1A04E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001B1A042FFD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001B1A047FC10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001B1A0489B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001B1A05202E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001B1A04D1580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001B1A050AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001B1A04B9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001B1A05138E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001B1A050A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001B1A04F7490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001B1A04EDCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001B1A04E6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001B1A043BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001B1A04E63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:26:52,149 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:26:52,149 - DEBUG : Imported ribbon_functions
2021-07-28 21:26:52,149 - DEBUG : Importing debugging
2021-07-28 21:26:52,613 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:26:52,613 - DEBUG : Imported debugging
2021-07-28 21:26:52,613 - DEBUG : Importing meta_variables
2021-07-28 21:26:52,613 - DEBUG : Imported meta_variables
2021-07-28 21:26:52,613 - DEBUG : Importing selectiontools
2021-07-28 21:26:52,613 - DEBUG : Imported selectiontools
2021-07-28 21:26:52,653 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:26:52,653 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:26:52,673 - INFO : This product is licensed to 
2021-07-28 21:26:52,673 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:26:52,674 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:26:52,674 - DEBUG : Binding Python functions to Excel
2021-07-28 21:26:52,674 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:26:52,674 - DEBUG :     - pyxll_version
2021-07-28 21:26:52,674 - DEBUG :     - python_version
2021-07-28 21:26:52,674 - DEBUG :     - win32api_is_installed
2021-07-28 21:26:52,675 - DEBUG :     - win32com_is_installed
2021-07-28 21:26:52,675 - DEBUG :     - numpy_is_installed
2021-07-28 21:26:52,675 - DEBUG :     - pyxll_logfile
2021-07-28 21:26:52,675 - DEBUG :     - get_formula
2021-07-28 21:26:52,675 - DEBUG :     - get_array_formula
2021-07-28 21:26:52,675 - DEBUG :     - get_last_error
2021-07-28 21:26:52,675 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:26:52,675 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:26:52,675 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:26:52,675 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:26:52,675 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:26:52,675 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:26:52,675 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:26:52,675 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:26:52,675 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:26:52,675 - DEBUG :     - xl_cell_example
2021-07-28 21:26:52,675 - DEBUG :     - recalc_on_open_test
2021-07-28 21:26:52,675 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:26:52,675 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:26:52,675 - DEBUG :     - one_cell_one_sim
2021-07-28 21:26:52,675 - DEBUG :     - one_row_one_sim
2021-07-28 21:26:52,684 - DEBUG : Adding menus to Excel:
2021-07-28 21:26:52,684 - DEBUG :   - PyXLL
2021-07-28 21:26:52,684 - DEBUG :     - Reload PyXLL
2021-07-28 21:26:52,684 - DEBUG :     - Another example menu item
2021-07-28 21:26:52,684 - DEBUG :     - More Examples
2021-07-28 21:26:52,684 - DEBUG :       - Click me
2021-07-28 21:26:52,684 - DEBUG :       - Unicode Test
2021-07-28 21:26:52,684 - DEBUG :     - Open log file
2021-07-28 21:26:52,684 - DEBUG :     - Attach To VS Code
2021-07-28 21:26:52,684 - DEBUG :     - Custom Task Panes
2021-07-28 21:26:52,684 - DEBUG :       - Qt
2021-07-28 21:26:52,684 - DEBUG :       - Tk
2021-07-28 21:26:52,684 - DEBUG :       - Wx
2021-07-28 21:26:52,684 - DEBUG :     - Example Menu Item 1
2021-07-28 21:26:52,684 - DEBUG :     - Show last error
2021-07-28 21:26:52,684 - DEBUG :     - About PyXLL...
2021-07-28 21:26:52,684 - DEBUG :   - PyXLL example menu
2021-07-28 21:26:52,684 - DEBUG :     - Click me
2021-07-28 21:26:52,732 - DEBUG : Finished binding Python functions
2021-07-28 21:26:52,732 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:26:52,732 - DEBUG : pyxll._post_open complete.
2021-07-28 21:26:52,747 - DEBUG : PyXLL initialization complete.
2021-07-28 21:26:55,376 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:26:55,376 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:26:55,395 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:26:55,450 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:26:58,834 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:26:58,834 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,834 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,835 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,836 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,842 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,843 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,851 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,851 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:26:58,851 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,851 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,851 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,852 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,853 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:26:58,854 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,868 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,869 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,870 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,884 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:26:58,885 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,886 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,886 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,886 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,886 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,886 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,886 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,887 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,888 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,889 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:26:58,890 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,890 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,890 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,891 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,892 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,893 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:26:58,894 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,895 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,896 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,897 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,898 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,899 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,901 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,902 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,903 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:26:58,904 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:26:58,904 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:36:25,624 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:36:25,624 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:36:25,624 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:36:25,625 - DEBUG : -------- PyXLL config --------
2021-07-28 21:36:25,625 - DEBUG : [LOG]
2021-07-28 21:36:25,625 - DEBUG : encoding = utf-8
2021-07-28 21:36:25,625 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:36:25,625 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:36:25,625 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:36:25,625 - DEBUG : verbosity = debug
2021-07-28 21:36:25,625 - DEBUG : 
2021-07-28 21:36:25,625 - DEBUG : [PYTHON]
2021-07-28 21:36:25,625 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:36:25,625 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:36:25,625 - DEBUG : 
2021-07-28 21:36:25,625 - DEBUG : [PYXLL]
2021-07-28 21:36:25,625 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:36:25,625 - DEBUG : developer_mode = 1
2021-07-28 21:36:25,625 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:36:25,625 - DEBUG : modules = 
2021-07-28 21:36:25,625 - DEBUG :     misc
2021-07-28 21:36:25,625 - DEBUG :     worksheetfuncs
2021-07-28 21:36:25,625 - DEBUG :     menus
2021-07-28 21:36:25,625 - DEBUG :     callbacks
2021-07-28 21:36:25,625 - DEBUG :     custom_task_panes
2021-07-28 21:36:25,625 - DEBUG :     test
2021-07-28 21:36:25,625 - DEBUG :     ribbon_functions
2021-07-28 21:36:25,625 - DEBUG :     debugging
2021-07-28 21:36:25,625 - DEBUG :     meta_variables
2021-07-28 21:36:25,625 - DEBUG :     selectiontools
2021-07-28 21:36:25,625 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:36:25,625 - DEBUG : ------------------------------
2021-07-28 21:36:25,627 - DEBUG : Attempting to load python38.dll
2021-07-28 21:36:25,629 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:36:25,630 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:36:25,630 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:36:25,817 - DEBUG : Calling Py_Initialize...
2021-07-28 21:36:26,019 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:36:26,019 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:36:26,019 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:36:26,019 - DEBUG : Python is initialized.
2021-07-28 21:36:26,020 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:36:26,024 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:36:26,024 - DEBUG : Looking for module 'site'...
2021-07-28 21:36:26,062 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:36:26,063 - DEBUG : Importing pyxll module
2021-07-28 21:36:26,063 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:36:26,063 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:36:26,063 - DEBUG :   Detected Python3
2021-07-28 21:36:26,113 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:36:26,117 - DEBUG : pyxll module imported
2021-07-28 21:36:26,117 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:36:26,117 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:36:26,118 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:36:26,120 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:36:26,120 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:36:26,371 - DEBUG : Importing misc
2021-07-28 21:36:26,372 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:36:26,372 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:36:26,373 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:36:26,373 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:36:26,373 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:36:26,373 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:36:26,374 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:36:26,374 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:36:26,374 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:36:26,374 - DEBUG : Imported misc
2021-07-28 21:36:26,374 - DEBUG : Importing worksheetfuncs
2021-07-28 21:36:26,375 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:36:26,375 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:36:26,375 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:36:26,375 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:36:26,376 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:36:26,376 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:36:26,376 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:36:26,376 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:36:26,376 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:36:26,377 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:36:26,377 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:36:26,377 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:36:26,377 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:36:26,377 - DEBUG : Imported worksheetfuncs
2021-07-28 21:36:26,377 - DEBUG : Importing menus
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:36:26,382 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:36:26,382 - DEBUG : Imported menus
2021-07-28 21:36:26,382 - DEBUG : Importing callbacks
2021-07-28 21:36:26,382 - DEBUG : Imported callbacks
2021-07-28 21:36:26,382 - DEBUG : Importing custom_task_panes
2021-07-28 21:36:26,385 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:36:26,385 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:36:26,385 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:36:26,385 - DEBUG : Imported custom_task_panes
2021-07-28 21:36:26,385 - DEBUG : Importing test
2021-07-28 21:36:26,386 - DEBUG : Imported test
2021-07-28 21:36:26,386 - DEBUG : Importing ribbon_functions
2021-07-28 21:36:28,096 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:36:28,142 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:36:28,155 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:36:28,156 - DEBUG : interactive is False
2021-07-28 21:36:28,156 - DEBUG : platform is win32
2021-07-28 21:36:28,156 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_1c0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_1c0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:36:28,207 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:36:28,223 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:36:28,532 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:36:28,533 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000025B8FC70FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000025B8FCBDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000025B8FCC8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000025B8FD602E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000025B8FD02580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000025B8FD4AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000025B8FCF8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000025B8FD538E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000025B8FD4A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000025B8FD37490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000025B8FD2AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000025B8FD21F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000025B8FC7EFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000025B8FD213A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000025B8FC70FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000025B8FCBDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000025B8FCC8B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x0000025B8FD602E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000025B8FD02580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x0000025B8FD4AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000025B8FCF8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000025B8FD538E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x0000025B8FD4A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000025B8FD37490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x0000025B8FD2AD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000025B8FD21F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000025B8FC7EFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x0000025B8FD213A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:36:28,533 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:36:28,533 - DEBUG : Imported ribbon_functions
2021-07-28 21:36:28,533 - DEBUG : Importing debugging
2021-07-28 21:36:29,054 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:36:29,054 - DEBUG : Imported debugging
2021-07-28 21:36:29,054 - DEBUG : Importing meta_variables
2021-07-28 21:36:29,054 - DEBUG : Imported meta_variables
2021-07-28 21:36:29,054 - DEBUG : Importing selectiontools
2021-07-28 21:36:29,054 - DEBUG : Imported selectiontools
2021-07-28 21:36:29,093 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:36:29,097 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:36:29,125 - INFO : This product is licensed to 
2021-07-28 21:36:29,125 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:36:29,126 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:36:29,126 - DEBUG : Binding Python functions to Excel
2021-07-28 21:36:29,126 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:36:29,127 - DEBUG :     - pyxll_version
2021-07-28 21:36:29,127 - DEBUG :     - python_version
2021-07-28 21:36:29,127 - DEBUG :     - win32api_is_installed
2021-07-28 21:36:29,127 - DEBUG :     - win32com_is_installed
2021-07-28 21:36:29,127 - DEBUG :     - numpy_is_installed
2021-07-28 21:36:29,127 - DEBUG :     - pyxll_logfile
2021-07-28 21:36:29,127 - DEBUG :     - get_formula
2021-07-28 21:36:29,127 - DEBUG :     - get_array_formula
2021-07-28 21:36:29,127 - DEBUG :     - get_last_error
2021-07-28 21:36:29,127 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:36:29,127 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:36:29,127 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:36:29,127 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:36:29,127 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:36:29,127 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:36:29,127 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:36:29,127 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:36:29,127 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:36:29,127 - DEBUG :     - xl_cell_example
2021-07-28 21:36:29,127 - DEBUG :     - recalc_on_open_test
2021-07-28 21:36:29,127 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:36:29,127 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:36:29,127 - DEBUG :     - one_cell_one_sim
2021-07-28 21:36:29,127 - DEBUG :     - one_row_one_sim
2021-07-28 21:36:29,151 - DEBUG : Adding menus to Excel:
2021-07-28 21:36:29,151 - DEBUG :   - PyXLL
2021-07-28 21:36:29,151 - DEBUG :     - Reload PyXLL
2021-07-28 21:36:29,151 - DEBUG :     - Another example menu item
2021-07-28 21:36:29,151 - DEBUG :     - More Examples
2021-07-28 21:36:29,151 - DEBUG :       - Click me
2021-07-28 21:36:29,151 - DEBUG :       - Unicode Test
2021-07-28 21:36:29,151 - DEBUG :     - Open log file
2021-07-28 21:36:29,151 - DEBUG :     - Attach To VS Code
2021-07-28 21:36:29,151 - DEBUG :     - Custom Task Panes
2021-07-28 21:36:29,151 - DEBUG :       - Qt
2021-07-28 21:36:29,151 - DEBUG :       - Tk
2021-07-28 21:36:29,151 - DEBUG :       - Wx
2021-07-28 21:36:29,151 - DEBUG :     - Example Menu Item 1
2021-07-28 21:36:29,151 - DEBUG :     - Show last error
2021-07-28 21:36:29,151 - DEBUG :     - About PyXLL...
2021-07-28 21:36:29,151 - DEBUG :   - PyXLL example menu
2021-07-28 21:36:29,151 - DEBUG :     - Click me
2021-07-28 21:36:29,202 - DEBUG : Finished binding Python functions
2021-07-28 21:36:29,202 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:36:29,202 - DEBUG : pyxll._post_open complete.
2021-07-28 21:36:29,219 - DEBUG : PyXLL initialization complete.
2021-07-28 21:36:31,506 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:36:31,506 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:36:31,516 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:36:31,535 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:37:12,124 - ERROR : C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py:194: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
2021-07-28 21:37:12,125 - ERROR :   summary_stats = np.array(scipy.stats.describe(hist_data))
2021-07-28 21:37:52,886 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:37:52,886 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,886 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:37:52,895 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,895 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,896 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,897 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,897 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,897 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,897 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:37:52,899 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,899 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,899 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,900 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,901 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,901 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,902 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,910 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,916 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:52,916 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,917 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,917 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,918 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,919 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,920 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,928 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,929 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,929 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,929 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,929 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,929 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:52,932 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:37:52,932 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,933 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,934 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,935 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,936 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,944 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,944 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:37:52,947 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,948 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,948 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,948 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,949 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,950 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,950 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,950 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,952 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,952 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,953 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,962 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,963 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:37:52,963 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:37:52,963 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,963 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,963 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,966 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:52,967 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,967 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,968 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,977 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,977 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:37:52,978 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:37:52,982 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,983 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:37:52,983 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:52,984 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,985 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,986 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:52,995 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:37:52,999 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:37:53,000 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,001 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,001 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,002 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,002 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,003 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,011 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,016 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,016 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,017 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:37:53,018 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,019 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,020 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,028 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,028 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,028 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,028 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,028 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:53,032 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,033 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,034 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,035 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,036 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,037 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,045 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,045 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:37:53,045 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,045 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,045 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,049 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,050 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,051 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,052 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,053 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,053 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,054 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,055 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,056 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,064 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,064 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,065 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,066 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,067 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,068 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,069 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,077 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,077 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,077 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:53,077 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,077 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,077 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,083 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,084 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,086 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,087 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,088 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,096 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:37:53,096 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,096 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,099 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,100 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,101 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,104 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,105 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,113 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,113 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,113 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,116 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,118 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:53,120 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,121 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,130 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,131 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,134 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,135 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,136 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,137 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,138 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,139 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,140 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,148 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,149 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,151 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,152 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,153 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,154 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,162 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,162 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,166 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,167 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,168 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,169 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,170 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,171 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,172 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,180 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,182 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:37:53,184 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,185 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,186 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,186 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,189 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,190 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,198 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,201 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,202 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,202 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:37:53,205 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,213 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,213 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,217 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,218 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,219 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,220 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,221 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,230 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,231 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,232 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,233 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,234 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:37:53,237 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,238 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,246 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,246 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,246 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,246 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,250 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,251 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,254 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,255 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:37:53,263 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,263 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,263 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:37:53,266 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,268 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,270 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,271 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,280 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,280 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,280 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,283 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,284 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,285 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,286 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,288 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,288 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,290 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,298 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,298 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,300 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,301 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,303 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:37:53,304 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,313 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,313 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,313 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,317 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,318 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,319 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,321 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,329 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,329 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:53,329 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,329 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,333 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,334 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,335 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,336 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,337 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,345 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,345 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:53,345 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,345 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,345 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,350 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,352 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,353 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,354 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,355 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,363 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,363 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,363 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,363 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,366 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,368 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,369 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,370 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,371 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,379 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:37:53,379 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:37:53,379 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,379 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,379 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,382 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,383 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,385 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,386 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,386 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:37:53,386 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,388 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,396 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,396 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,397 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:37:53,397 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,398 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,398 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,400 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,401 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,402 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,402 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,403 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,403 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,404 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,413 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,414 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,414 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,416 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,417 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,417 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,418 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,418 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,420 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,420 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,421 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:37:53,422 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,422 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,423 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,431 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,432 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:37:53,434 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,435 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:37:53,443 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:37:53,443 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,443 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,445 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,446 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,449 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,449 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,450 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,450 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,451 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,451 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,453 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,454 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:37:53,462 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,466 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,466 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,467 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,482 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,483 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,483 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,484 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,500 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,501 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,501 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,502 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,507 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,507 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:37:53,508 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,517 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,517 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,518 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,533 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,533 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,534 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,550 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,551 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,551 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,551 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,552 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,553 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,553 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,554 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,554 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:37:53,554 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,555 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:37:53,566 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,566 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,567 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,567 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,567 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:37:53,568 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,568 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:37:53,569 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:37:53,569 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:43:09,421 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:43:09,421 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:43:09,422 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:43:09,422 - DEBUG : PyXLL Python module closed.
2021-07-28 21:43:10,637 - DEBUG : 
Wed Jul 28 21:43:10 2021
---------- PyXLL Stopped ----------
2021-07-28 21:43:15,845 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:43:15,846 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:43:15,846 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:43:15,846 - DEBUG : -------- PyXLL config --------
2021-07-28 21:43:15,846 - DEBUG : [LOG]
2021-07-28 21:43:15,846 - DEBUG : encoding = utf-8
2021-07-28 21:43:15,846 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:43:15,846 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:43:15,846 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:43:15,846 - DEBUG : verbosity = debug
2021-07-28 21:43:15,846 - DEBUG : 
2021-07-28 21:43:15,846 - DEBUG : [PYTHON]
2021-07-28 21:43:15,846 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:43:15,846 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:43:15,846 - DEBUG : 
2021-07-28 21:43:15,846 - DEBUG : [PYXLL]
2021-07-28 21:43:15,846 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:43:15,846 - DEBUG : developer_mode = 1
2021-07-28 21:43:15,846 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:43:15,846 - DEBUG : modules = 
2021-07-28 21:43:15,846 - DEBUG :     misc
2021-07-28 21:43:15,846 - DEBUG :     worksheetfuncs
2021-07-28 21:43:15,846 - DEBUG :     menus
2021-07-28 21:43:15,846 - DEBUG :     callbacks
2021-07-28 21:43:15,846 - DEBUG :     custom_task_panes
2021-07-28 21:43:15,846 - DEBUG :     test
2021-07-28 21:43:15,846 - DEBUG :     ribbon_functions
2021-07-28 21:43:15,846 - DEBUG :     debugging
2021-07-28 21:43:15,846 - DEBUG :     meta_variables
2021-07-28 21:43:15,846 - DEBUG :     selectiontools
2021-07-28 21:43:15,846 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:43:15,847 - DEBUG : ------------------------------
2021-07-28 21:43:15,847 - DEBUG : Attempting to load python38.dll
2021-07-28 21:43:15,850 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:43:15,851 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:43:15,851 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:43:16,055 - DEBUG : Calling Py_Initialize...
2021-07-28 21:43:16,405 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:43:16,406 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:43:16,406 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:43:16,406 - DEBUG : Python is initialized.
2021-07-28 21:43:16,408 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:43:16,409 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:43:16,409 - DEBUG : Looking for module 'site'...
2021-07-28 21:43:16,473 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:43:16,485 - DEBUG : Importing pyxll module
2021-07-28 21:43:16,485 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:43:16,486 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:43:16,486 - DEBUG :   Detected Python3
2021-07-28 21:43:16,531 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:43:16,536 - DEBUG : pyxll module imported
2021-07-28 21:43:16,536 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:43:16,536 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:43:16,536 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:43:16,538 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:43:16,539 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:43:16,838 - DEBUG : Importing misc
2021-07-28 21:43:16,841 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:43:16,841 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:43:16,841 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:43:16,842 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:43:16,842 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:43:16,842 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:43:16,843 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:43:16,843 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:43:16,844 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:43:16,844 - DEBUG : Imported misc
2021-07-28 21:43:16,844 - DEBUG : Importing worksheetfuncs
2021-07-28 21:43:16,845 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:43:16,847 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:43:16,847 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:43:16,847 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:43:16,847 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:43:16,848 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:43:16,848 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:43:16,848 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:43:16,848 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:43:16,848 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:43:16,849 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:43:16,849 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:43:16,849 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:43:16,850 - DEBUG : Imported worksheetfuncs
2021-07-28 21:43:16,850 - DEBUG : Importing menus
2021-07-28 21:43:16,856 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:43:16,857 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:43:16,857 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:43:16,857 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:43:16,857 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:43:16,857 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:43:16,857 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:43:16,857 - DEBUG : Imported menus
2021-07-28 21:43:16,857 - DEBUG : Importing callbacks
2021-07-28 21:43:16,858 - DEBUG : Imported callbacks
2021-07-28 21:43:16,859 - DEBUG : Importing custom_task_panes
2021-07-28 21:43:16,860 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:43:16,860 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:43:16,860 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:43:16,860 - DEBUG : Imported custom_task_panes
2021-07-28 21:43:16,861 - DEBUG : Importing test
2021-07-28 21:43:16,862 - DEBUG : Imported test
2021-07-28 21:43:16,862 - DEBUG : Importing ribbon_functions
2021-07-28 21:43:18,335 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:43:18,373 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:43:18,373 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:43:18,373 - DEBUG : interactive is False
2021-07-28 21:43:18,373 - DEBUG : platform is win32
2021-07-28 21:43:18,373 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_570000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_570000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:43:18,474 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:43:18,490 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:43:18,841 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:43:18,853 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FD8E420FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FD8E470C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FD8E46DB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FD8E5102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FD8E4C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FD8E4FAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FD8E4A9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FD8E5038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FD8E4FA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FD8E4E9490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FD8E4DAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FD8E4D1F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FD8E42BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FD8E4D13A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001FD8E420FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001FD8E470C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001FD8E46DB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x000001FD8E5102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x000001FD8E4C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001FD8E4FAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x000001FD8E4A9070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001FD8E5038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001FD8E4FA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x000001FD8E4E9490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000001FD8E4DAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x000001FD8E4D1F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001FD8E42BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x000001FD8E4D13A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:43:18,853 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:43:18,854 - DEBUG : Imported ribbon_functions
2021-07-28 21:43:18,854 - DEBUG : Importing debugging
2021-07-28 21:43:19,588 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:43:19,588 - DEBUG : Imported debugging
2021-07-28 21:43:19,588 - DEBUG : Importing meta_variables
2021-07-28 21:43:19,588 - DEBUG : Imported meta_variables
2021-07-28 21:43:19,588 - DEBUG : Importing selectiontools
2021-07-28 21:43:19,588 - DEBUG : Imported selectiontools
2021-07-28 21:43:19,671 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:43:19,681 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:43:19,711 - INFO : This product is licensed to 
2021-07-28 21:43:19,711 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:43:19,716 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:43:19,716 - DEBUG : Binding Python functions to Excel
2021-07-28 21:43:19,716 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:43:19,716 - DEBUG :     - pyxll_version
2021-07-28 21:43:19,716 - DEBUG :     - python_version
2021-07-28 21:43:19,716 - DEBUG :     - win32api_is_installed
2021-07-28 21:43:19,716 - DEBUG :     - win32com_is_installed
2021-07-28 21:43:19,716 - DEBUG :     - numpy_is_installed
2021-07-28 21:43:19,716 - DEBUG :     - pyxll_logfile
2021-07-28 21:43:19,716 - DEBUG :     - get_formula
2021-07-28 21:43:19,716 - DEBUG :     - get_array_formula
2021-07-28 21:43:19,716 - DEBUG :     - get_last_error
2021-07-28 21:43:19,716 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:43:19,718 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:43:19,718 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:43:19,718 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:43:19,718 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:43:19,718 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:43:19,718 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:43:19,718 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:43:19,718 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:43:19,718 - DEBUG :     - xl_cell_example
2021-07-28 21:43:19,719 - DEBUG :     - recalc_on_open_test
2021-07-28 21:43:19,719 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:43:19,719 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:43:19,719 - DEBUG :     - one_cell_one_sim
2021-07-28 21:43:19,719 - DEBUG :     - one_row_one_sim
2021-07-28 21:43:19,742 - DEBUG : Adding menus to Excel:
2021-07-28 21:43:19,742 - DEBUG :   - PyXLL
2021-07-28 21:43:19,742 - DEBUG :     - Reload PyXLL
2021-07-28 21:43:19,742 - DEBUG :     - Another example menu item
2021-07-28 21:43:19,742 - DEBUG :     - More Examples
2021-07-28 21:43:19,742 - DEBUG :       - Click me
2021-07-28 21:43:19,742 - DEBUG :       - Unicode Test
2021-07-28 21:43:19,742 - DEBUG :     - Open log file
2021-07-28 21:43:19,742 - DEBUG :     - Attach To VS Code
2021-07-28 21:43:19,742 - DEBUG :     - Custom Task Panes
2021-07-28 21:43:19,742 - DEBUG :       - Qt
2021-07-28 21:43:19,742 - DEBUG :       - Tk
2021-07-28 21:43:19,742 - DEBUG :       - Wx
2021-07-28 21:43:19,742 - DEBUG :     - Example Menu Item 1
2021-07-28 21:43:19,742 - DEBUG :     - Show last error
2021-07-28 21:43:19,742 - DEBUG :     - About PyXLL...
2021-07-28 21:43:19,742 - DEBUG :   - PyXLL example menu
2021-07-28 21:43:19,742 - DEBUG :     - Click me
2021-07-28 21:43:19,814 - DEBUG : Finished binding Python functions
2021-07-28 21:43:19,814 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:43:19,814 - DEBUG : pyxll._post_open complete.
2021-07-28 21:43:19,834 - DEBUG : PyXLL initialization complete.
2021-07-28 21:43:22,624 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:43:22,624 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:43:22,636 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:43:22,685 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:43:34,616 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 21:43:55,052 - ERROR : Traceback (most recent call last):
2021-07-28 21:43:55,052 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 196, in advanced_simulation_cell_wrapper
2021-07-28 21:43:55,053 - ERROR :     stats = [stats[0]] + [stats[1][0], stats[1][1]] + stats[2:]
2021-07-28 21:43:55,053 - ERROR : TypeError: can only concatenate list (not "tuple") to list
2021-07-28 21:44:09,699 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:44:09,699 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:44:09,699 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:44:09,699 - DEBUG : PyXLL Python module closed.
2021-07-28 21:44:11,882 - DEBUG : 
Wed Jul 28 21:44:11 2021
---------- PyXLL Stopped ----------
2021-07-28 21:44:14,790 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:44:14,790 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:44:14,791 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:44:14,792 - DEBUG : -------- PyXLL config --------
2021-07-28 21:44:14,792 - DEBUG : [LOG]
2021-07-28 21:44:14,792 - DEBUG : encoding = utf-8
2021-07-28 21:44:14,792 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:44:14,792 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:44:14,792 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:44:14,792 - DEBUG : verbosity = debug
2021-07-28 21:44:14,792 - DEBUG : 
2021-07-28 21:44:14,792 - DEBUG : [PYTHON]
2021-07-28 21:44:14,792 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:44:14,792 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:44:14,792 - DEBUG : 
2021-07-28 21:44:14,792 - DEBUG : [PYXLL]
2021-07-28 21:44:14,792 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:44:14,792 - DEBUG : developer_mode = 1
2021-07-28 21:44:14,792 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:44:14,792 - DEBUG : modules = 
2021-07-28 21:44:14,792 - DEBUG :     misc
2021-07-28 21:44:14,792 - DEBUG :     worksheetfuncs
2021-07-28 21:44:14,792 - DEBUG :     menus
2021-07-28 21:44:14,793 - DEBUG :     callbacks
2021-07-28 21:44:14,793 - DEBUG :     custom_task_panes
2021-07-28 21:44:14,793 - DEBUG :     test
2021-07-28 21:44:14,793 - DEBUG :     ribbon_functions
2021-07-28 21:44:14,793 - DEBUG :     debugging
2021-07-28 21:44:14,793 - DEBUG :     meta_variables
2021-07-28 21:44:14,793 - DEBUG :     selectiontools
2021-07-28 21:44:14,793 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:44:14,793 - DEBUG : ------------------------------
2021-07-28 21:44:14,794 - DEBUG : Attempting to load python38.dll
2021-07-28 21:44:14,797 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:44:14,799 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:44:14,799 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:44:15,086 - DEBUG : Calling Py_Initialize...
2021-07-28 21:44:15,514 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:44:15,514 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:44:15,514 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:44:15,514 - DEBUG : Python is initialized.
2021-07-28 21:44:15,515 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:44:15,520 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:44:15,520 - DEBUG : Looking for module 'site'...
2021-07-28 21:44:15,564 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:44:15,565 - DEBUG : Importing pyxll module
2021-07-28 21:44:15,565 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:44:15,565 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:44:15,565 - DEBUG :   Detected Python3
2021-07-28 21:44:15,612 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:44:15,616 - DEBUG : pyxll module imported
2021-07-28 21:44:15,618 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:44:15,618 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:44:15,618 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:44:15,620 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:44:15,621 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:44:15,919 - DEBUG : Importing misc
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:44:15,927 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:44:15,927 - DEBUG : Imported misc
2021-07-28 21:44:15,927 - DEBUG : Importing worksheetfuncs
2021-07-28 21:44:15,935 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:44:15,935 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:44:15,935 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:44:15,936 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:44:15,936 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:44:15,936 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:44:15,937 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:44:15,937 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:44:15,938 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:44:15,938 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:44:15,938 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:44:15,939 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:44:15,939 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:44:15,939 - DEBUG : Imported worksheetfuncs
2021-07-28 21:44:15,940 - DEBUG : Importing menus
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:44:15,948 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:44:15,948 - DEBUG : Imported menus
2021-07-28 21:44:15,948 - DEBUG : Importing callbacks
2021-07-28 21:44:15,952 - DEBUG : Imported callbacks
2021-07-28 21:44:15,952 - DEBUG : Importing custom_task_panes
2021-07-28 21:44:15,953 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:44:15,953 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:44:15,953 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:44:15,953 - DEBUG : Imported custom_task_panes
2021-07-28 21:44:15,953 - DEBUG : Importing test
2021-07-28 21:44:15,953 - DEBUG : Imported test
2021-07-28 21:44:15,953 - DEBUG : Importing ribbon_functions
2021-07-28 21:44:17,546 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:44:17,574 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:44:17,574 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:44:17,574 - DEBUG : interactive is False
2021-07-28 21:44:17,574 - DEBUG : platform is win32
2021-07-28 21:44:17,574 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_50000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_50000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:44:17,655 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:44:17,682 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:44:17,914 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:44:17,915 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021532F70FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021532FBDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021532FC2B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000215330602E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021533012580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002153304AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021532FF7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000215330478E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002153304A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021533037490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002153302FD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021533026F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021532F7BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000215330263A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000021532F70FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000021532FBDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000021532FC2B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000215330602E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x0000021533012580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000002153304AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x0000021532FF7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000215330478E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000002153304A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000021533037490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x000002153302FD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x0000021533026F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x0000021532F7BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000215330263A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:44:17,919 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:44:17,919 - DEBUG : Imported ribbon_functions
2021-07-28 21:44:17,919 - DEBUG : Importing debugging
2021-07-28 21:44:18,483 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:44:18,483 - DEBUG : Imported debugging
2021-07-28 21:44:18,483 - DEBUG : Importing meta_variables
2021-07-28 21:44:18,483 - DEBUG : Imported meta_variables
2021-07-28 21:44:18,483 - DEBUG : Importing selectiontools
2021-07-28 21:44:18,484 - DEBUG : Imported selectiontools
2021-07-28 21:44:18,532 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:44:18,541 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:44:18,571 - INFO : This product is licensed to 
2021-07-28 21:44:18,571 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:44:18,575 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:44:18,575 - DEBUG : Binding Python functions to Excel
2021-07-28 21:44:18,575 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:44:18,575 - DEBUG :     - pyxll_version
2021-07-28 21:44:18,575 - DEBUG :     - python_version
2021-07-28 21:44:18,576 - DEBUG :     - win32api_is_installed
2021-07-28 21:44:18,576 - DEBUG :     - win32com_is_installed
2021-07-28 21:44:18,576 - DEBUG :     - numpy_is_installed
2021-07-28 21:44:18,576 - DEBUG :     - pyxll_logfile
2021-07-28 21:44:18,576 - DEBUG :     - get_formula
2021-07-28 21:44:18,576 - DEBUG :     - get_array_formula
2021-07-28 21:44:18,576 - DEBUG :     - get_last_error
2021-07-28 21:44:18,576 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:44:18,576 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:44:18,577 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:44:18,577 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:44:18,577 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:44:18,577 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:44:18,577 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:44:18,577 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:44:18,577 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:44:18,577 - DEBUG :     - xl_cell_example
2021-07-28 21:44:18,577 - DEBUG :     - recalc_on_open_test
2021-07-28 21:44:18,577 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:44:18,577 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:44:18,577 - DEBUG :     - one_cell_one_sim
2021-07-28 21:44:18,577 - DEBUG :     - one_row_one_sim
2021-07-28 21:44:18,601 - DEBUG : Adding menus to Excel:
2021-07-28 21:44:18,601 - DEBUG :   - PyXLL
2021-07-28 21:44:18,601 - DEBUG :     - Reload PyXLL
2021-07-28 21:44:18,601 - DEBUG :     - Another example menu item
2021-07-28 21:44:18,601 - DEBUG :     - More Examples
2021-07-28 21:44:18,601 - DEBUG :       - Click me
2021-07-28 21:44:18,601 - DEBUG :       - Unicode Test
2021-07-28 21:44:18,601 - DEBUG :     - Open log file
2021-07-28 21:44:18,601 - DEBUG :     - Attach To VS Code
2021-07-28 21:44:18,601 - DEBUG :     - Custom Task Panes
2021-07-28 21:44:18,601 - DEBUG :       - Qt
2021-07-28 21:44:18,601 - DEBUG :       - Tk
2021-07-28 21:44:18,601 - DEBUG :       - Wx
2021-07-28 21:44:18,601 - DEBUG :     - Example Menu Item 1
2021-07-28 21:44:18,601 - DEBUG :     - Show last error
2021-07-28 21:44:18,601 - DEBUG :     - About PyXLL...
2021-07-28 21:44:18,601 - DEBUG :   - PyXLL example menu
2021-07-28 21:44:18,601 - DEBUG :     - Click me
2021-07-28 21:44:18,670 - DEBUG : Finished binding Python functions
2021-07-28 21:44:18,671 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:44:18,671 - DEBUG : pyxll._post_open complete.
2021-07-28 21:44:18,678 - DEBUG : PyXLL initialization complete.
2021-07-28 21:44:20,540 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:44:20,540 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:44:20,550 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:44:20,573 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:44:25,043 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:44:25,043 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,043 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:44:25,043 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,043 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,043 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,043 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,047 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,048 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,055 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,056 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,056 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:44:25,056 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,056 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,056 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,056 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,057 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,057 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,057 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,057 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:44:25,058 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:44:25,059 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,063 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,064 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,073 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,074 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,075 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,076 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,089 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,089 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,090 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,091 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,092 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,099 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,100 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,105 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,106 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,106 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,106 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,106 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,107 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,108 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,109 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,113 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,114 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,117 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,121 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,122 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,122 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,122 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,122 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,122 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,122 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,123 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,124 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,125 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,133 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,134 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:44:25,140 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:44:25,141 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:44:25,142 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:44:25,142 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:45:56,235 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:45:56,235 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:45:56,236 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:45:56,236 - DEBUG : PyXLL Python module closed.
2021-07-28 21:45:59,407 - DEBUG : 
Wed Jul 28 21:45:59 2021
---------- PyXLL Stopped ----------
2021-07-28 21:46:00,265 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:46:00,267 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:46:00,267 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:46:00,267 - DEBUG : -------- PyXLL config --------
2021-07-28 21:46:00,267 - DEBUG : [LOG]
2021-07-28 21:46:00,267 - DEBUG : encoding = utf-8
2021-07-28 21:46:00,267 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:46:00,267 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:46:00,267 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:46:00,267 - DEBUG : verbosity = debug
2021-07-28 21:46:00,267 - DEBUG : 
2021-07-28 21:46:00,267 - DEBUG : [PYTHON]
2021-07-28 21:46:00,267 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:46:00,267 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:46:00,267 - DEBUG : 
2021-07-28 21:46:00,267 - DEBUG : [PYXLL]
2021-07-28 21:46:00,267 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:46:00,267 - DEBUG : developer_mode = 1
2021-07-28 21:46:00,267 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:46:00,267 - DEBUG : modules = 
2021-07-28 21:46:00,267 - DEBUG :     misc
2021-07-28 21:46:00,267 - DEBUG :     worksheetfuncs
2021-07-28 21:46:00,267 - DEBUG :     menus
2021-07-28 21:46:00,267 - DEBUG :     callbacks
2021-07-28 21:46:00,267 - DEBUG :     custom_task_panes
2021-07-28 21:46:00,267 - DEBUG :     test
2021-07-28 21:46:00,267 - DEBUG :     ribbon_functions
2021-07-28 21:46:00,267 - DEBUG :     debugging
2021-07-28 21:46:00,267 - DEBUG :     meta_variables
2021-07-28 21:46:00,267 - DEBUG :     selectiontools
2021-07-28 21:46:00,267 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:46:00,268 - DEBUG : ------------------------------
2021-07-28 21:46:00,268 - DEBUG : Attempting to load python38.dll
2021-07-28 21:46:00,272 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:46:00,273 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:46:00,273 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:46:00,483 - DEBUG : Calling Py_Initialize...
2021-07-28 21:46:00,796 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:46:00,797 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:46:00,797 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:46:00,798 - DEBUG : Python is initialized.
2021-07-28 21:46:00,799 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:46:00,809 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:46:00,809 - DEBUG : Looking for module 'site'...
2021-07-28 21:46:00,849 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:46:00,852 - DEBUG : Importing pyxll module
2021-07-28 21:46:00,852 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:46:00,852 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:46:00,852 - DEBUG :   Detected Python3
2021-07-28 21:46:00,883 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:46:00,883 - DEBUG : pyxll module imported
2021-07-28 21:46:00,883 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:46:00,883 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:46:00,883 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:46:00,895 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:46:00,895 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:46:01,170 - DEBUG : Importing misc
2021-07-28 21:46:01,170 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:46:01,172 - DEBUG : Imported misc
2021-07-28 21:46:01,172 - DEBUG : Importing worksheetfuncs
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:46:01,172 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:46:01,172 - DEBUG : Imported worksheetfuncs
2021-07-28 21:46:01,172 - DEBUG : Importing menus
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:46:01,180 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:46:01,180 - DEBUG : Imported menus
2021-07-28 21:46:01,180 - DEBUG : Importing callbacks
2021-07-28 21:46:01,180 - DEBUG : Imported callbacks
2021-07-28 21:46:01,182 - DEBUG : Importing custom_task_panes
2021-07-28 21:46:01,182 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:46:01,182 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:46:01,182 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:46:01,182 - DEBUG : Imported custom_task_panes
2021-07-28 21:46:01,182 - DEBUG : Importing test
2021-07-28 21:46:01,182 - DEBUG : Imported test
2021-07-28 21:46:01,182 - DEBUG : Importing ribbon_functions
2021-07-28 21:46:02,773 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:46:02,820 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:46:02,820 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:46:02,820 - DEBUG : interactive is False
2021-07-28 21:46:02,820 - DEBUG : platform is win32
2021-07-28 21:46:02,820 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_c50000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_c50000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:46:02,917 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:46:02,927 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:46:03,077 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:46:03,079 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000224BB920FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000224BB970C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000224BB978B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000224BBA102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000224BB9C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000224BB9FAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000224BB9A8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000224BBA038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000224BB9FA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000224BB9E2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000224BB9DAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000224BB9D6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000224BB92FFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000224BB9D63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000224BB920FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000224BB970C10>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000224BB978B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000224BBA102E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000224BB9C2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000224BB9FAD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000224BB9A8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000224BBA038E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000224BB9FA6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000224BB9E2490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000224BB9DAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000224BB9D6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000224BB92FFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000224BB9D63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:46:03,079 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:46:03,079 - DEBUG : Imported ribbon_functions
2021-07-28 21:46:03,079 - DEBUG : Importing debugging
2021-07-28 21:46:03,569 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:46:03,569 - DEBUG : Imported debugging
2021-07-28 21:46:03,569 - DEBUG : Importing meta_variables
2021-07-28 21:46:03,569 - DEBUG : Imported meta_variables
2021-07-28 21:46:03,569 - DEBUG : Importing selectiontools
2021-07-28 21:46:03,569 - DEBUG : Imported selectiontools
2021-07-28 21:46:03,613 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:46:03,617 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:46:03,630 - INFO : This product is licensed to 
2021-07-28 21:46:03,630 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:46:03,632 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:46:03,632 - DEBUG : Binding Python functions to Excel
2021-07-28 21:46:03,632 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:46:03,632 - DEBUG :     - pyxll_version
2021-07-28 21:46:03,632 - DEBUG :     - python_version
2021-07-28 21:46:03,632 - DEBUG :     - win32api_is_installed
2021-07-28 21:46:03,632 - DEBUG :     - win32com_is_installed
2021-07-28 21:46:03,632 - DEBUG :     - numpy_is_installed
2021-07-28 21:46:03,632 - DEBUG :     - pyxll_logfile
2021-07-28 21:46:03,633 - DEBUG :     - get_formula
2021-07-28 21:46:03,633 - DEBUG :     - get_array_formula
2021-07-28 21:46:03,633 - DEBUG :     - get_last_error
2021-07-28 21:46:03,633 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:46:03,633 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:46:03,633 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:46:03,633 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:46:03,633 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:46:03,633 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:46:03,633 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:46:03,633 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:46:03,633 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:46:03,633 - DEBUG :     - xl_cell_example
2021-07-28 21:46:03,633 - DEBUG :     - recalc_on_open_test
2021-07-28 21:46:03,633 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:46:03,633 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:46:03,633 - DEBUG :     - one_cell_one_sim
2021-07-28 21:46:03,633 - DEBUG :     - one_row_one_sim
2021-07-28 21:46:03,644 - DEBUG : Adding menus to Excel:
2021-07-28 21:46:03,644 - DEBUG :   - PyXLL
2021-07-28 21:46:03,644 - DEBUG :     - Reload PyXLL
2021-07-28 21:46:03,644 - DEBUG :     - Another example menu item
2021-07-28 21:46:03,644 - DEBUG :     - More Examples
2021-07-28 21:46:03,644 - DEBUG :       - Click me
2021-07-28 21:46:03,644 - DEBUG :       - Unicode Test
2021-07-28 21:46:03,644 - DEBUG :     - Open log file
2021-07-28 21:46:03,644 - DEBUG :     - Attach To VS Code
2021-07-28 21:46:03,644 - DEBUG :     - Custom Task Panes
2021-07-28 21:46:03,644 - DEBUG :       - Qt
2021-07-28 21:46:03,644 - DEBUG :       - Tk
2021-07-28 21:46:03,644 - DEBUG :       - Wx
2021-07-28 21:46:03,644 - DEBUG :     - Example Menu Item 1
2021-07-28 21:46:03,644 - DEBUG :     - Show last error
2021-07-28 21:46:03,644 - DEBUG :     - About PyXLL...
2021-07-28 21:46:03,644 - DEBUG :   - PyXLL example menu
2021-07-28 21:46:03,644 - DEBUG :     - Click me
2021-07-28 21:46:03,672 - DEBUG : Finished binding Python functions
2021-07-28 21:46:03,672 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:46:03,672 - DEBUG : pyxll._post_open complete.
2021-07-28 21:46:03,679 - DEBUG : PyXLL initialization complete.
2021-07-28 21:46:07,900 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:46:07,901 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:46:07,920 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:46:07,933 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:46:18,291 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 21:46:52,459 - ERROR : Traceback (most recent call last):
2021-07-28 21:46:52,459 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 207, in advanced_simulation_cell_wrapper
2021-07-28 21:46:52,460 - ERROR :     xl.ActiveSheet.Range(f"A{i}").Value = stats_names[i]
2021-07-28 21:46:52,460 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\_Worksheet.py", line 239, in Range
2021-07-28 21:46:52,461 - ERROR :     ret = self._oleobj_.InvokeTypes(197, LCID, 2, (9, 0), ((12, 1), (12, 17)),Cell1
2021-07-28 21:46:52,461 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2146827284), None)
2021-07-28 21:47:09,997 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:47:09,997 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:47:09,997 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:47:09,997 - DEBUG : PyXLL Python module closed.
2021-07-28 21:47:11,222 - DEBUG : 
Wed Jul 28 21:47:11 2021
---------- PyXLL Stopped ----------
2021-07-28 21:47:14,746 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:47:14,746 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:47:14,746 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:47:14,746 - DEBUG : -------- PyXLL config --------
2021-07-28 21:47:14,746 - DEBUG : [LOG]
2021-07-28 21:47:14,746 - DEBUG : encoding = utf-8
2021-07-28 21:47:14,746 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:47:14,746 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:47:14,747 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:47:14,747 - DEBUG : verbosity = debug
2021-07-28 21:47:14,747 - DEBUG : 
2021-07-28 21:47:14,747 - DEBUG : [PYTHON]
2021-07-28 21:47:14,747 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:47:14,747 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:47:14,747 - DEBUG : 
2021-07-28 21:47:14,747 - DEBUG : [PYXLL]
2021-07-28 21:47:14,747 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:47:14,747 - DEBUG : developer_mode = 1
2021-07-28 21:47:14,747 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:47:14,747 - DEBUG : modules = 
2021-07-28 21:47:14,747 - DEBUG :     misc
2021-07-28 21:47:14,747 - DEBUG :     worksheetfuncs
2021-07-28 21:47:14,747 - DEBUG :     menus
2021-07-28 21:47:14,747 - DEBUG :     callbacks
2021-07-28 21:47:14,747 - DEBUG :     custom_task_panes
2021-07-28 21:47:14,747 - DEBUG :     test
2021-07-28 21:47:14,747 - DEBUG :     ribbon_functions
2021-07-28 21:47:14,747 - DEBUG :     debugging
2021-07-28 21:47:14,747 - DEBUG :     meta_variables
2021-07-28 21:47:14,747 - DEBUG :     selectiontools
2021-07-28 21:47:14,747 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:47:14,747 - DEBUG : ------------------------------
2021-07-28 21:47:14,748 - DEBUG : Attempting to load python38.dll
2021-07-28 21:47:14,749 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:47:14,751 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:47:14,751 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:47:15,007 - DEBUG : Calling Py_Initialize...
2021-07-28 21:47:15,234 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:47:15,235 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:47:15,235 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:47:15,235 - DEBUG : Python is initialized.
2021-07-28 21:47:15,237 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:47:15,241 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:47:15,241 - DEBUG : Looking for module 'site'...
2021-07-28 21:47:15,300 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:47:15,304 - DEBUG : Importing pyxll module
2021-07-28 21:47:15,305 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:47:15,305 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:47:15,305 - DEBUG :   Detected Python3
2021-07-28 21:47:15,361 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:47:15,372 - DEBUG : pyxll module imported
2021-07-28 21:47:15,372 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:47:15,372 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:47:15,372 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:47:15,374 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:47:15,375 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:47:15,778 - DEBUG : Importing misc
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:47:15,778 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:47:15,778 - DEBUG : Imported misc
2021-07-28 21:47:15,778 - DEBUG : Importing worksheetfuncs
2021-07-28 21:47:15,786 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:47:15,786 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:47:15,787 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:47:15,787 - DEBUG : Imported worksheetfuncs
2021-07-28 21:47:15,787 - DEBUG : Importing menus
2021-07-28 21:47:15,795 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:47:15,795 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:47:15,802 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:47:15,802 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:47:15,802 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:47:15,802 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:47:15,803 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:47:15,803 - DEBUG : Imported menus
2021-07-28 21:47:15,803 - DEBUG : Importing callbacks
2021-07-28 21:47:15,804 - DEBUG : Imported callbacks
2021-07-28 21:47:15,804 - DEBUG : Importing custom_task_panes
2021-07-28 21:47:15,804 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:47:15,804 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:47:15,804 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:47:15,804 - DEBUG : Imported custom_task_panes
2021-07-28 21:47:15,804 - DEBUG : Importing test
2021-07-28 21:47:15,804 - DEBUG : Imported test
2021-07-28 21:47:15,804 - DEBUG : Importing ribbon_functions
2021-07-28 21:47:17,393 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:47:17,437 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:47:17,437 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:47:17,437 - DEBUG : interactive is False
2021-07-28 21:47:17,437 - DEBUG : platform is win32
2021-07-28 21:47:17,437 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_90000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_90000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:47:17,497 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:47:17,497 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:47:17,715 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:47:17,716 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000246F3D70FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000246F3DBDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000246F3DBEB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000246F3E43310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000246F3DFF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000246F3E4AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000246F3DF7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000246F3E518E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000246F3E4A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000246F3E3C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000246F3E2FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000246F3E26F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000246F3D7BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000246F3E263A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000246F3D70FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000246F3DBDC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000246F3DBEB80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000246F3E43310>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000246F3DFF580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x00000246F3E4AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000246F3DF7070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000246F3E518E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x00000246F3E4A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x00000246F3E3C490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000246F3E2FCD0>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000246F3E26F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x00000246F3D7BFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000246F3E263A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:47:17,716 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:47:17,716 - DEBUG : Imported ribbon_functions
2021-07-28 21:47:17,716 - DEBUG : Importing debugging
2021-07-28 21:47:18,241 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:47:18,241 - DEBUG : Imported debugging
2021-07-28 21:47:18,241 - DEBUG : Importing meta_variables
2021-07-28 21:47:18,241 - DEBUG : Imported meta_variables
2021-07-28 21:47:18,241 - DEBUG : Importing selectiontools
2021-07-28 21:47:18,243 - DEBUG : Imported selectiontools
2021-07-28 21:47:18,325 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:47:18,336 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:47:18,366 - INFO : This product is licensed to 
2021-07-28 21:47:18,366 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:47:18,368 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:47:18,368 - DEBUG : Binding Python functions to Excel
2021-07-28 21:47:18,369 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:47:18,369 - DEBUG :     - pyxll_version
2021-07-28 21:47:18,369 - DEBUG :     - python_version
2021-07-28 21:47:18,369 - DEBUG :     - win32api_is_installed
2021-07-28 21:47:18,369 - DEBUG :     - win32com_is_installed
2021-07-28 21:47:18,369 - DEBUG :     - numpy_is_installed
2021-07-28 21:47:18,369 - DEBUG :     - pyxll_logfile
2021-07-28 21:47:18,369 - DEBUG :     - get_formula
2021-07-28 21:47:18,369 - DEBUG :     - get_array_formula
2021-07-28 21:47:18,370 - DEBUG :     - get_last_error
2021-07-28 21:47:18,370 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:47:18,370 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:47:18,370 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:47:18,370 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:47:18,370 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:47:18,370 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:47:18,370 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:47:18,370 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:47:18,370 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:47:18,370 - DEBUG :     - xl_cell_example
2021-07-28 21:47:18,370 - DEBUG :     - recalc_on_open_test
2021-07-28 21:47:18,370 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:47:18,370 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:47:18,370 - DEBUG :     - one_cell_one_sim
2021-07-28 21:47:18,370 - DEBUG :     - one_row_one_sim
2021-07-28 21:47:18,387 - DEBUG : Adding menus to Excel:
2021-07-28 21:47:18,387 - DEBUG :   - PyXLL
2021-07-28 21:47:18,387 - DEBUG :     - Reload PyXLL
2021-07-28 21:47:18,387 - DEBUG :     - Another example menu item
2021-07-28 21:47:18,387 - DEBUG :     - More Examples
2021-07-28 21:47:18,387 - DEBUG :       - Click me
2021-07-28 21:47:18,387 - DEBUG :       - Unicode Test
2021-07-28 21:47:18,387 - DEBUG :     - Open log file
2021-07-28 21:47:18,387 - DEBUG :     - Attach To VS Code
2021-07-28 21:47:18,387 - DEBUG :     - Custom Task Panes
2021-07-28 21:47:18,387 - DEBUG :       - Qt
2021-07-28 21:47:18,387 - DEBUG :       - Tk
2021-07-28 21:47:18,387 - DEBUG :       - Wx
2021-07-28 21:47:18,387 - DEBUG :     - Example Menu Item 1
2021-07-28 21:47:18,387 - DEBUG :     - Show last error
2021-07-28 21:47:18,387 - DEBUG :     - About PyXLL...
2021-07-28 21:47:18,387 - DEBUG :   - PyXLL example menu
2021-07-28 21:47:18,387 - DEBUG :     - Click me
2021-07-28 21:47:18,440 - DEBUG : Finished binding Python functions
2021-07-28 21:47:18,440 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:47:18,440 - DEBUG : pyxll._post_open complete.
2021-07-28 21:47:18,454 - DEBUG : PyXLL initialization complete.
2021-07-28 21:47:21,336 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:47:21,336 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:47:21,350 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:47:21,378 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:47:36,145 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-28 21:47:36,145 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,145 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-28 21:47:36,145 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,145 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,145 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,157 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,158 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,159 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,160 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,161 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,173 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,174 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,174 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,174 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,175 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,176 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,177 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:47:36,190 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,191 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,192 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,207 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,208 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,223 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,224 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-28 21:47:36,225 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-28 21:47:36,225 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-28 21:49:07,792 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-28 21:49:08,928 - ERROR : Traceback (most recent call last):
2021-07-28 21:49:08,928 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 204, in advanced_simulation_cell_wrapper
2021-07-28 21:49:08,929 - ERROR :     xl.ActiveSheet.Name = f"Results for cell {user_selection},  {user_sheet_name}"
2021-07-28 21:49:08,929 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\win32com\client\__init__.py", line 493, in __setattr__
2021-07-28 21:49:08,930 - ERROR :     self._oleobj_.Invoke(*(args + (value,) + defArgs))
2021-07-28 21:49:08,930 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', 'That name is already taken. Try a different one.', 'xlmain11.chm', 0, -2146827284), None)
2021-07-28 21:53:44,027 - DEBUG : Closing PyXLL Python module.
2021-07-28 21:53:44,027 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-28 21:53:44,028 - INFO : callbacks.on_close: PyXLL is closing
2021-07-28 21:53:44,028 - DEBUG : PyXLL Python module closed.
2021-07-28 21:53:47,894 - DEBUG : 
Wed Jul 28 21:53:47 2021
---------- PyXLL Stopped ----------
2021-07-28 21:53:53,348 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:53:53,348 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:53:53,349 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:53:53,349 - DEBUG : -------- PyXLL config --------
2021-07-28 21:53:53,349 - DEBUG : [LOG]
2021-07-28 21:53:53,349 - DEBUG : encoding = utf-8
2021-07-28 21:53:53,349 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:53:53,349 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:53:53,349 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:53:53,349 - DEBUG : verbosity = debug
2021-07-28 21:53:53,349 - DEBUG : 
2021-07-28 21:53:53,349 - DEBUG : [PYTHON]
2021-07-28 21:53:53,349 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:53:53,349 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:53:53,349 - DEBUG : 
2021-07-28 21:53:53,349 - DEBUG : [PYXLL]
2021-07-28 21:53:53,349 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:53:53,349 - DEBUG : developer_mode = 1
2021-07-28 21:53:53,349 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:53:53,349 - DEBUG : modules = 
2021-07-28 21:53:53,349 - DEBUG :     misc
2021-07-28 21:53:53,349 - DEBUG :     worksheetfuncs
2021-07-28 21:53:53,349 - DEBUG :     menus
2021-07-28 21:53:53,349 - DEBUG :     callbacks
2021-07-28 21:53:53,349 - DEBUG :     custom_task_panes
2021-07-28 21:53:53,349 - DEBUG :     test
2021-07-28 21:53:53,349 - DEBUG :     ribbon_functions
2021-07-28 21:53:53,349 - DEBUG :     debugging
2021-07-28 21:53:53,349 - DEBUG :     meta_variables
2021-07-28 21:53:53,349 - DEBUG :     selectiontools
2021-07-28 21:53:53,349 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:53:53,349 - DEBUG : ------------------------------
2021-07-28 21:53:53,350 - DEBUG : Attempting to load python38.dll
2021-07-28 21:53:53,353 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-28 21:53:53,355 - DEBUG : Checking Py_IsInitialized...
2021-07-28 21:53:53,355 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-28 21:53:53,532 - DEBUG : Calling Py_Initialize...
2021-07-28 21:53:53,731 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-28 21:53:53,732 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-28 21:53:53,732 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:53:53,732 - DEBUG : Python is initialized.
2021-07-28 21:53:53,732 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-28 21:53:53,735 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-28 21:53:53,735 - DEBUG : Looking for module 'site'...
2021-07-28 21:53:53,763 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-28 21:53:53,763 - DEBUG : Importing pyxll module
2021-07-28 21:53:53,763 - DEBUG :   Python version is 3.8.0.final.0
2021-07-28 21:53:53,763 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-28 21:53:53,763 - DEBUG :   Detected Python3
2021-07-28 21:53:53,806 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-28 21:53:53,810 - DEBUG : pyxll module imported
2021-07-28 21:53:53,810 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:53:53,810 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:53:53,810 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:53:53,812 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:53:53,813 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:53:54,067 - DEBUG : Importing misc
2021-07-28 21:53:54,069 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:53:54,069 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:53:54,069 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:53:54,069 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:53:54,069 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:53:54,069 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:53:54,072 - DEBUG : Imported misc
2021-07-28 21:53:54,072 - DEBUG : Importing worksheetfuncs
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:53:54,072 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:53:54,076 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:53:54,076 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:53:54,077 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:53:54,077 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:53:54,077 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:53:54,077 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:53:54,078 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:53:54,078 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:53:54,078 - DEBUG : Imported worksheetfuncs
2021-07-28 21:53:54,078 - DEBUG : Importing menus
2021-07-28 21:53:54,086 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:53:54,088 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:53:54,088 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:53:54,088 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:53:54,088 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:53:54,088 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:53:54,088 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:53:54,089 - DEBUG : Imported menus
2021-07-28 21:53:54,089 - DEBUG : Importing callbacks
2021-07-28 21:53:54,089 - DEBUG : Imported callbacks
2021-07-28 21:53:54,089 - DEBUG : Importing custom_task_panes
2021-07-28 21:53:54,093 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:53:54,093 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:53:54,093 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:53:54,093 - DEBUG : Imported custom_task_panes
2021-07-28 21:53:54,093 - DEBUG : Importing test
2021-07-28 21:53:54,095 - DEBUG : Imported test
2021-07-28 21:53:54,095 - DEBUG : Importing ribbon_functions
2021-07-28 21:53:56,035 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-28 21:53:56,074 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:53:56,090 - DEBUG : matplotlib version 3.4.2
2021-07-28 21:53:56,090 - DEBUG : interactive is False
2021-07-28 21:53:56,091 - DEBUG : platform is win32
2021-07-28 21:53:56,091 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_8b0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_8b0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'examples.meta_variables', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-28 21:53:56,164 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-28 21:53:56,185 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-28 21:53:56,511 - DEBUG : Loaded backend agg version unknown.
2021-07-28 21:53:56,511 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016246540FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001624658DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016246593B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000162466302E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000162465E2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001624661AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000162465C8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000162466238E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001624661A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016246603490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000162465FAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000162465F6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001624654AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000162465F63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016246540FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001624658DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016246593B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000162466302E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000162465E2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001624661AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000162465C8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000162466238E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001624661A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016246603490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000162465FAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000162465F6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001624654AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000162465F63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:53:56,519 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:53:56,519 - DEBUG : Imported ribbon_functions
2021-07-28 21:53:56,519 - DEBUG : Importing debugging
2021-07-28 21:53:57,211 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:53:57,211 - DEBUG : Imported debugging
2021-07-28 21:53:57,211 - DEBUG : Importing meta_variables
2021-07-28 21:53:57,219 - DEBUG : Imported meta_variables
2021-07-28 21:53:57,219 - DEBUG : Importing selectiontools
2021-07-28 21:53:57,219 - DEBUG : Imported selectiontools
2021-07-28 21:53:57,294 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:53:57,305 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:53:57,346 - INFO : This product is licensed to 
2021-07-28 21:53:57,346 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:53:57,350 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:53:57,350 - DEBUG : Binding Python functions to Excel
2021-07-28 21:53:57,351 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:53:57,351 - DEBUG :     - pyxll_version
2021-07-28 21:53:57,351 - DEBUG :     - python_version
2021-07-28 21:53:57,351 - DEBUG :     - win32api_is_installed
2021-07-28 21:53:57,351 - DEBUG :     - win32com_is_installed
2021-07-28 21:53:57,351 - DEBUG :     - numpy_is_installed
2021-07-28 21:53:57,351 - DEBUG :     - pyxll_logfile
2021-07-28 21:53:57,351 - DEBUG :     - get_formula
2021-07-28 21:53:57,351 - DEBUG :     - get_array_formula
2021-07-28 21:53:57,351 - DEBUG :     - get_last_error
2021-07-28 21:53:57,351 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:53:57,351 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:53:57,351 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:53:57,351 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:53:57,351 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:53:57,351 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:53:57,351 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:53:57,351 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:53:57,351 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:53:57,351 - DEBUG :     - xl_cell_example
2021-07-28 21:53:57,351 - DEBUG :     - recalc_on_open_test
2021-07-28 21:53:57,351 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:53:57,351 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:53:57,351 - DEBUG :     - one_cell_one_sim
2021-07-28 21:53:57,351 - DEBUG :     - one_row_one_sim
2021-07-28 21:53:57,366 - DEBUG : Adding menus to Excel:
2021-07-28 21:53:57,366 - DEBUG :   - PyXLL
2021-07-28 21:53:57,366 - DEBUG :     - Reload PyXLL
2021-07-28 21:53:57,366 - DEBUG :     - Another example menu item
2021-07-28 21:53:57,366 - DEBUG :     - More Examples
2021-07-28 21:53:57,366 - DEBUG :       - Click me
2021-07-28 21:53:57,366 - DEBUG :       - Unicode Test
2021-07-28 21:53:57,366 - DEBUG :     - Open log file
2021-07-28 21:53:57,366 - DEBUG :     - Attach To VS Code
2021-07-28 21:53:57,366 - DEBUG :     - Custom Task Panes
2021-07-28 21:53:57,366 - DEBUG :       - Qt
2021-07-28 21:53:57,366 - DEBUG :       - Tk
2021-07-28 21:53:57,366 - DEBUG :       - Wx
2021-07-28 21:53:57,366 - DEBUG :     - Example Menu Item 1
2021-07-28 21:53:57,366 - DEBUG :     - Show last error
2021-07-28 21:53:57,366 - DEBUG :     - About PyXLL...
2021-07-28 21:53:57,366 - DEBUG :   - PyXLL example menu
2021-07-28 21:53:57,366 - DEBUG :     - Click me
2021-07-28 21:53:57,427 - DEBUG : Finished binding Python functions
2021-07-28 21:53:57,427 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-28 21:53:57,427 - DEBUG : pyxll._post_open complete.
2021-07-28 21:53:57,444 - DEBUG : PyXLL initialization complete.
2021-07-28 21:53:58,999 - DEBUG : Loading PyXLL COM Addin
2021-07-28 21:53:58,999 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-28 21:53:59,015 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-28 21:53:59,053 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-28 21:54:52,030 - ERROR : Exception in Tkinter callback
2021-07-28 21:54:52,082 - ERROR : Traceback (most recent call last):
2021-07-28 21:54:52,082 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\tkinter\__init__.py", line 1883, in __call__
2021-07-28 21:54:52,082 - ERROR :     return self.func(*args)
2021-07-28 21:54:52,083 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83, in on_button1
2021-07-28 21:54:52,083 - ERROR :     self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection).Value = self.entry_value.get() + "," + self.distribution_id
2021-07-28 21:54:52,083 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 21:54:52,083 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 21:54:52,083 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 21:54:52,814 - ERROR : Exception in Tkinter callback
2021-07-28 21:54:52,814 - ERROR : Traceback (most recent call last):
2021-07-28 21:54:52,814 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\tkinter\__init__.py", line 1883, in __call__
2021-07-28 21:54:52,814 - ERROR :     return self.func(*args)
2021-07-28 21:54:52,814 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83, in on_button1
2021-07-28 21:54:52,814 - ERROR :     self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection).Value = self.entry_value.get() + "," + self.distribution_id
2021-07-28 21:54:52,814 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 21:54:52,814 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 21:54:52,814 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 21:54:53,897 - ERROR : Exception in Tkinter callback
2021-07-28 21:54:53,897 - ERROR : Traceback (most recent call last):
2021-07-28 21:54:53,897 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\tkinter\__init__.py", line 1883, in __call__
2021-07-28 21:54:53,897 - ERROR :     return self.func(*args)
2021-07-28 21:54:53,902 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83, in on_button1
2021-07-28 21:54:53,902 - ERROR :     self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection).Value = self.entry_value.get() + "," + self.distribution_id
2021-07-28 21:54:53,902 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 21:54:53,902 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 21:54:53,902 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 21:55:02,113 - ERROR : Exception in Tkinter callback
2021-07-28 21:55:02,113 - ERROR : Traceback (most recent call last):
2021-07-28 21:55:02,113 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\tkinter\__init__.py", line 1883, in __call__
2021-07-28 21:55:02,113 - ERROR :     return self.func(*args)
2021-07-28 21:55:02,113 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83, in on_button1
2021-07-28 21:55:02,113 - ERROR :     self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection).Value = self.entry_value.get() + "," + self.distribution_id
2021-07-28 21:55:02,113 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 21:55:02,113 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 21:55:02,114 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 21:55:03,101 - ERROR : Exception in Tkinter callback
2021-07-28 21:55:03,101 - ERROR : Traceback (most recent call last):
2021-07-28 21:55:03,101 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\tkinter\__init__.py", line 1883, in __call__
2021-07-28 21:55:03,101 - ERROR :     return self.func(*args)
2021-07-28 21:55:03,101 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\tkinter_frames.py", line 83, in on_button1
2021-07-28 21:55:03,101 - ERROR :     self.xl.Worksheets(self.distrInfoPageName).Range(self.user_selection).Value = self.entry_value.get() + "," + self.distribution_id
2021-07-28 21:55:03,101 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 120, in __call__
2021-07-28 21:55:03,101 - ERROR :     ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
2021-07-28 21:55:03,101 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, None, None, None, 0, -2147352565), None)
2021-07-28 21:55:09,111 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-28 21:55:09,114 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-28 21:55:09,114 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-28 21:55:09,114 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-28 21:55:09,114 - DEBUG : -------- PyXLL config --------
2021-07-28 21:55:09,114 - DEBUG : [LOG]
2021-07-28 21:55:09,114 - DEBUG : encoding = utf-8
2021-07-28 21:55:09,114 - DEBUG : file = pyxll.20210728.log
2021-07-28 21:55:09,114 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-28 21:55:09,114 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-28 21:55:09,114 - DEBUG : verbosity = debug
2021-07-28 21:55:09,114 - DEBUG : 
2021-07-28 21:55:09,114 - DEBUG : [PYTHON]
2021-07-28 21:55:09,114 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-28 21:55:09,114 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-28 21:55:09,114 - DEBUG : 
2021-07-28 21:55:09,114 - DEBUG : [PYXLL]
2021-07-28 21:55:09,114 - DEBUG : clear_object_cache_on_reload = 1
2021-07-28 21:55:09,114 - DEBUG : developer_mode = 1
2021-07-28 21:55:09,114 - DEBUG : error_handler = pyxll.error_handler
2021-07-28 21:55:09,114 - DEBUG : modules = 
2021-07-28 21:55:09,114 - DEBUG :     misc
2021-07-28 21:55:09,114 - DEBUG :     worksheetfuncs
2021-07-28 21:55:09,114 - DEBUG :     menus
2021-07-28 21:55:09,114 - DEBUG :     callbacks
2021-07-28 21:55:09,114 - DEBUG :     custom_task_panes
2021-07-28 21:55:09,114 - DEBUG :     test
2021-07-28 21:55:09,114 - DEBUG :     ribbon_functions
2021-07-28 21:55:09,114 - DEBUG :     debugging
2021-07-28 21:55:09,114 - DEBUG :     meta_variables
2021-07-28 21:55:09,114 - DEBUG :     selectiontools
2021-07-28 21:55:09,114 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-28 21:55:09,114 - DEBUG : ------------------------------
2021-07-28 21:55:09,114 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-28 21:55:09,115 - DEBUG : Initializing PyXLL Python module.
2021-07-28 21:55:09,115 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-28 21:55:09,115 - DEBUG : PyXLL Python module initialized.
2021-07-28 21:55:09,115 - DEBUG : Functions will not be cancellable by default.
2021-07-28 21:55:09,115 - DEBUG : Error handler set to pyxll.error_handler
2021-07-28 21:55:09,115 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables,selectiontools
2021-07-28 21:55:09,218 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples.meta_variables,examples,ribbon_functions,debugging,selectiontools
2021-07-28 21:55:09,218 - DEBUG : Reloading misc
2021-07-28 21:55:09,218 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-28 21:55:09,225 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-28 21:55:09,225 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-28 21:55:09,225 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-28 21:55:09,225 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-28 21:55:09,226 - DEBUG : Reloaded misc
2021-07-28 21:55:09,226 - DEBUG : Reloading worksheetfuncs
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-28 21:55:09,226 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-28 21:55:09,226 - DEBUG : Reloaded worksheetfuncs
2021-07-28 21:55:09,226 - DEBUG : Reloading menus
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-28 21:55:09,226 - DEBUG : Reloaded menus
2021-07-28 21:55:09,226 - DEBUG : Reloading callbacks
2021-07-28 21:55:09,226 - DEBUG : Reloaded callbacks
2021-07-28 21:55:09,226 - DEBUG : Reloading custom_task_panes
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-28 21:55:09,226 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-28 21:55:09,226 - DEBUG : Reloaded custom_task_panes
2021-07-28 21:55:09,226 - DEBUG : Reloading test
2021-07-28 21:55:09,226 - DEBUG : Reloaded test
2021-07-28 21:55:09,226 - DEBUG : Reloading meta_variables
2021-07-28 21:55:09,226 - DEBUG : Reloaded meta_variables
2021-07-28 21:55:09,226 - DEBUG : Reloading dependency error_functions
2021-07-28 21:55:09,226 - DEBUG : Reloaded dependency error_functions
2021-07-28 21:55:09,226 - DEBUG : Reloading dependency tkinter_frames
2021-07-28 21:55:09,226 - DEBUG : Reloaded dependency tkinter_frames
2021-07-28 21:55:09,226 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-28 21:55:09,226 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-28 21:55:09,226 - DEBUG : Reloading dependency examples.meta_variables
2021-07-28 21:55:09,226 - DEBUG : Reloaded dependency examples.meta_variables
2021-07-28 21:55:09,226 - DEBUG : Reloading dependency examples
2021-07-28 21:55:09,226 - DEBUG : Reloaded dependency examples
2021-07-28 21:55:09,226 - DEBUG : Reloading ribbon_functions
2021-07-28 21:55:09,241 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016246540FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001624658DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016246593B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000162466302E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000162465E2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001624661AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000162465C8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000162466238E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001624661A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016246603490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000162465FAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000162465F6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001624654AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000162465F63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000016246540FD0>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001624658DC40>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000016246593B80>, 'params': 'loc, scale', 'Name': 'Exponential'}, 'U': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.uniform_gen object at 0x00000162466302E0>, 'params': 'loc, scale', 'Name': 'Uniform'}, 'L': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.laplace_gen object at 0x00000162465E2580>, 'params': 'loc, scale', 'Name': 'Laplce'}, 'Semicircular': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.semicircular_gen object at 0x000001624661AD00>, 'params': 'loc, scale', 'Name': 'Semicircular'}, 'Gumble_r': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.gumbel_r_gen object at 0x00000162465C8070>, 'params': 'loc, scale', 'Name': 'Gumble_r'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000162466238E0>, 'params': 'c (centre of triangle), loc (of left edge), scale (width of triangle)', 'Name': 'Triangular'}, 'Rice': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.rice_gen object at 0x000001624661A6D0>, 'params': 'b, loc, scale', 'Name': 'Rice'}, 'Power_law': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.powerlaw_gen object at 0x0000016246603490>, 'params': 'a, loc, scale', 'Name': 'Power law'}, 'Pareto': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.pareto_gen object at 0x00000162465FAD00>, 'params': 'b, loc, scale', 'Name': 'Pareto'}, 'Nakagami': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.nakagami_gen object at 0x00000162465F6F70>, 'params': 'nu, loc, scale', 'Name': 'Nakagami'}, 'Bprime': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.betaprime_gen object at 0x000001624654AFA0>, 'params': 'a, b, loc, scale', 'Name': 'Beta prime'}, 'Mielke': {'num_params': 4, 'scipy_handle': <scipy.stats._continuous_distns.mielke_gen object at 0x00000162465F63A0>, 'params': 'k, s, loc, scale', 'Name': 'Mielke'}}) -> var'
2021-07-28 21:55:09,242 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-28 21:55:09,242 - DEBUG : Reloaded ribbon_functions
2021-07-28 21:55:09,242 - DEBUG : Reloading debugging
2021-07-28 21:55:09,242 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-28 21:55:09,242 - DEBUG : Reloaded debugging
2021-07-28 21:55:09,242 - DEBUG : Reloading selectiontools
2021-07-28 21:55:09,242 - DEBUG : Reloaded selectiontools
2021-07-28 21:55:09,281 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-28 21:55:09,282 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Advanced User Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload code base" onAction="pyxll.reload" size="large"/>
					<button id="Debug" label="Look inside" onAction="advancedusertools.switchDebugMode"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
					<button id="UniformDistribution" label="Uniform" onAction="ribbon_functions.inputUniform"/>
					<button id="SemicircularDistribution" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
					<button id="LaplaceDistribution" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
				</group>
				<group id="AdvancedDistributionData" label="Advanced input distribution">
					<menu id="twoParameters" label="Two parameter distributions">
						<button id="normal2" label="Normal" onAction="ribbon_functions.inputNormal"/>
						<button id="cauchy2" label="Cauchy" onAction="ribbon_functions.inputCauchy"/>
						<button id="exponential2" label="Exponential" onAction="ribbon_functions.inputExponential"/>
						<button id="uniform2" label="Uniform" onAction="ribbon_functions.inputUniform"/>
						<button id="laplace2" label="Laplace" onAction="ribbon_functions.inputLaplace"/>
						<button id="semicircular2" label="Semicircular" onAction="ribbon_functions.inputSemicircular"/>
						<button id="gumble_r2" label="Gumble r" onAction="ribbon_functions.inputGumble_r"/>
					</menu>
					<menu id="threeParameters" label="Three parameter distributions">
						<button id="triangular3" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
						<button id="rice3" label="Rice" onAction="ribbon_functions.inputRice"/>
						<button id="power_law3" label="Power law" onAction="ribbon_functions.inputPower_law"/>
						<button id="pareto3" label="Pareto" onAction="ribbon_functions.inputPareto"/>
						<button id="nakagami3" label="Nakagami" onAction="ribbon_functions.inputNakagami"/>
					</menu>
					<menu id="fourParameters" label="Four parameter distributions">
						<button id="bprime4" label="Beta prime" onAction="ribbon_functions.inputBetaPrime"/>
						<button id="mielke4" label="Mielke" onAction="ribbon_functions.inputMielke"/>
					</menu>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
					<button id="select_distribution" label="Select cells with distributions" onAction="selectiontools.selectDistrCells"/>
					<button id="delete_distribution" label="Delete distribution from cell(s)" onAction="selectiontools.deleteSelectCells"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-28 21:55:09,300 - INFO : This product is licensed to 
2021-07-28 21:55:09,300 - INFO : The license will expire on 2021-08-21 (24 days left)
2021-07-28 21:55:09,308 - DEBUG : Calling pyxll._post_open.
2021-07-28 21:55:09,308 - DEBUG : Binding Python functions to Excel
2021-07-28 21:55:09,308 - DEBUG : Adding worksheet functions to Excel:
2021-07-28 21:55:09,308 - DEBUG :     - pyxll_version
2021-07-28 21:55:09,308 - DEBUG :     - python_version
2021-07-28 21:55:09,308 - DEBUG :     - win32api_is_installed
2021-07-28 21:55:09,308 - DEBUG :     - win32com_is_installed
2021-07-28 21:55:09,308 - DEBUG :     - numpy_is_installed
2021-07-28 21:55:09,308 - DEBUG :     - pyxll_logfile
2021-07-28 21:55:09,309 - DEBUG :     - get_formula
2021-07-28 21:55:09,309 - DEBUG :     - get_array_formula
2021-07-28 21:55:09,309 - DEBUG :     - get_last_error
2021-07-28 21:55:09,309 - DEBUG :     - basic_pyxll_function_1
2021-07-28 21:55:09,309 - DEBUG :     - basic_pyxll_function_2
2021-07-28 21:55:09,309 - DEBUG :     - basic_pyxll_function_3
2021-07-28 21:55:09,309 - DEBUG :     - var_pyxll_function_1
2021-07-28 21:55:09,309 - DEBUG :     - var_pyxll_function_2
2021-07-28 21:55:09,309 - DEBUG :     - datetime_pyxll_function_1
2021-07-28 21:55:09,309 - DEBUG :     - datetime_pyxll_function_2
2021-07-28 21:55:09,309 - DEBUG :     - datetime_pyxll_function_3
2021-07-28 21:55:09,309 - DEBUG :     - datetime_pyxll_function_4
2021-07-28 21:55:09,309 - DEBUG :     - xl_cell_example
2021-07-28 21:55:09,309 - DEBUG :     - recalc_on_open_test
2021-07-28 21:55:09,309 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-28 21:55:09,309 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-28 21:55:09,309 - DEBUG :     - one_cell_one_sim
2021-07-28 21:55:09,309 - DEBUG :     - one_row_one_sim
2021-07-28 21:55:09,312 - DEBUG : Adding menus to Excel:
2021-07-28 21:55:09,312 - DEBUG :   - PyXLL
2021-07-28 21:55:09,312 - DEBUG :     - Reload PyXLL
2021-07-28 21:55:09,312 - DEBUG :     - Another example menu item
2021-07-28 21:55:09,312 - DEBUG :     - More Examples
2021-07-28 21:55:09,312 - DEBUG :       - Click me
2021-07-28 21:55:09,312 - DEBUG :       - Unicode Test
2021-07-28 21:55:09,312 - DEBUG :     - Open log file
2021-07-28 21:55:09,312 - DEBUG :     - Attach To VS Code
2021-07-28 21:55:09,312 - DEBUG :     - Custom Task Panes
2021-07-28 21:55:09,312 - DEBUG :       - Qt
2021-07-28 21:55:09,312 - DEBUG :       - Tk
2021-07-28 21:55:09,312 - DEBUG :       - Wx
2021-07-28 21:55:09,312 - DEBUG :     - Example Menu Item 1
2021-07-28 21:55:09,312 - DEBUG :     - Show last error
2021-07-28 21:55:09,312 - DEBUG :     - About PyXLL...
2021-07-28 21:55:09,312 - DEBUG :   - PyXLL example menu
2021-07-28 21:55:09,312 - DEBUG :     - Click me
2021-07-28 21:55:09,319 - DEBUG : Finished binding Python functions
2021-07-28 21:55:09,319 - DEBUG : Calling on reload callback 'callbacks.on_reload'
