2021-07-25 12:00:19,989 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 12:00:19,989 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 12:00:19,989 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 12:00:19,989 - DEBUG : -------- PyXLL config --------
2021-07-25 12:00:19,989 - DEBUG : [LOG]
2021-07-25 12:00:19,989 - DEBUG : encoding = utf-8
2021-07-25 12:00:19,989 - DEBUG : file = pyxll.20210725.log
2021-07-25 12:00:19,989 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 12:00:19,989 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 12:00:19,989 - DEBUG : verbosity = debug
2021-07-25 12:00:19,989 - DEBUG : 
2021-07-25 12:00:19,989 - DEBUG : [PYTHON]
2021-07-25 12:00:19,989 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 12:00:19,989 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 12:00:19,989 - DEBUG : 
2021-07-25 12:00:19,989 - DEBUG : [PYXLL]
2021-07-25 12:00:19,989 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 12:00:19,989 - DEBUG : developer_mode = 1
2021-07-25 12:00:19,989 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 12:00:19,989 - DEBUG : modules = 
2021-07-25 12:00:19,989 - DEBUG :     misc
2021-07-25 12:00:19,989 - DEBUG :     worksheetfuncs
2021-07-25 12:00:19,989 - DEBUG :     menus
2021-07-25 12:00:19,989 - DEBUG :     callbacks
2021-07-25 12:00:19,989 - DEBUG :     custom_task_panes
2021-07-25 12:00:19,989 - DEBUG :     test
2021-07-25 12:00:19,989 - DEBUG :     ribbon_functions
2021-07-25 12:00:19,989 - DEBUG :     debugging
2021-07-25 12:00:19,989 - DEBUG :     meta_variables
2021-07-25 12:00:19,989 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 12:00:19,989 - DEBUG : ------------------------------
2021-07-25 12:00:19,996 - DEBUG : Attempting to load python38.dll
2021-07-25 12:00:19,996 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 12:00:20,011 - DEBUG : Checking Py_IsInitialized...
2021-07-25 12:00:20,011 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 12:00:20,274 - DEBUG : Calling Py_Initialize...
2021-07-25 12:00:20,576 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 12:00:20,576 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 12:00:20,581 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 12:00:20,581 - DEBUG : Python is initialized.
2021-07-25 12:00:20,581 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 12:00:20,581 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 12:00:20,581 - DEBUG : Looking for module 'site'...
2021-07-25 12:00:20,675 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 12:00:20,675 - DEBUG : Importing pyxll module
2021-07-25 12:00:20,675 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 12:00:20,675 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 12:00:20,675 - DEBUG :   Detected Python3
2021-07-25 12:00:20,775 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 12:00:20,798 - DEBUG : pyxll module imported
2021-07-25 12:00:20,798 - DEBUG : Initializing PyXLL Python module.
2021-07-25 12:00:20,798 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 12:00:20,798 - DEBUG : PyXLL Python module initialized.
2021-07-25 12:00:20,813 - DEBUG : Functions will not be cancellable by default.
2021-07-25 12:00:20,813 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 12:00:21,435 - DEBUG : Importing misc
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 12:00:21,435 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 12:00:21,435 - DEBUG : Imported misc
2021-07-25 12:00:21,435 - DEBUG : Importing worksheetfuncs
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 12:00:21,450 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 12:00:21,450 - DEBUG : Imported worksheetfuncs
2021-07-25 12:00:21,450 - DEBUG : Importing menus
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 12:00:21,466 - DEBUG : Imported menus
2021-07-25 12:00:21,466 - DEBUG : Importing callbacks
2021-07-25 12:00:21,466 - DEBUG : Imported callbacks
2021-07-25 12:00:21,466 - DEBUG : Importing custom_task_panes
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 12:00:21,466 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 12:00:21,466 - DEBUG : Imported custom_task_panes
2021-07-25 12:00:21,482 - DEBUG : Importing test
2021-07-25 12:00:21,482 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 12:00:21,482 - DEBUG : Imported test
2021-07-25 12:00:21,482 - DEBUG : Importing ribbon_functions
2021-07-25 12:00:24,587 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 12:00:24,671 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 12:00:24,687 - DEBUG : matplotlib version 3.4.2
2021-07-25 12:00:24,687 - DEBUG : interactive is False
2021-07-25 12:00:24,687 - DEBUG : platform is win32
2021-07-25 12:00:24,687 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_3e0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_3e0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 12:00:24,803 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 12:00:24,819 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 12:00:25,289 - DEBUG : Loaded backend agg version unknown.
2021-07-25 12:00:25,304 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 12:00:25,304 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000024D65D2F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000024D65D8AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000024D65E13E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000024D65D9C250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000024D65D2F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000024D65D8AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000024D65E13E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000024D65D9C250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 12:00:25,304 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 12:00:25,304 - DEBUG : Imported ribbon_functions
2021-07-25 12:00:25,304 - DEBUG : Importing debugging
2021-07-25 12:00:27,856 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 12:00:27,856 - DEBUG : Imported debugging
2021-07-25 12:00:27,856 - DEBUG : Importing meta_variables
2021-07-25 12:00:27,856 - DEBUG : Imported meta_variables
2021-07-25 12:00:27,989 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 12:00:28,011 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 12:00:28,052 - INFO : This product is licensed to 
2021-07-25 12:00:28,052 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 12:00:28,072 - DEBUG : Calling pyxll._post_open.
2021-07-25 12:00:28,072 - DEBUG : Binding Python functions to Excel
2021-07-25 12:00:28,072 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 12:00:28,072 - DEBUG :     - pyxll_version
2021-07-25 12:00:28,072 - DEBUG :     - python_version
2021-07-25 12:00:28,080 - DEBUG :     - win32api_is_installed
2021-07-25 12:00:28,080 - DEBUG :     - win32com_is_installed
2021-07-25 12:00:28,080 - DEBUG :     - numpy_is_installed
2021-07-25 12:00:28,080 - DEBUG :     - pyxll_logfile
2021-07-25 12:00:28,080 - DEBUG :     - get_formula
2021-07-25 12:00:28,080 - DEBUG :     - get_array_formula
2021-07-25 12:00:28,080 - DEBUG :     - get_last_error
2021-07-25 12:00:28,080 - DEBUG :     - basic_pyxll_function_1
2021-07-25 12:00:28,080 - DEBUG :     - basic_pyxll_function_2
2021-07-25 12:00:28,080 - DEBUG :     - basic_pyxll_function_3
2021-07-25 12:00:28,080 - DEBUG :     - var_pyxll_function_1
2021-07-25 12:00:28,080 - DEBUG :     - var_pyxll_function_2
2021-07-25 12:00:28,080 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 12:00:28,080 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 12:00:28,080 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 12:00:28,080 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 12:00:28,080 - DEBUG :     - xl_cell_example
2021-07-25 12:00:28,080 - DEBUG :     - recalc_on_open_test
2021-07-25 12:00:28,080 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 12:00:28,080 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 12:00:28,080 - DEBUG :     - hello
2021-07-25 12:00:28,080 - DEBUG :     - one_cell_one_sim
2021-07-25 12:00:28,080 - DEBUG :     - one_row_one_sim
2021-07-25 12:00:28,123 - DEBUG : Adding menus to Excel:
2021-07-25 12:00:28,123 - DEBUG :   - PyXLL
2021-07-25 12:00:28,123 - DEBUG :     - Reload PyXLL
2021-07-25 12:00:28,123 - DEBUG :     - Another example menu item
2021-07-25 12:00:28,123 - DEBUG :     - More Examples
2021-07-25 12:00:28,123 - DEBUG :       - Click me
2021-07-25 12:00:28,123 - DEBUG :       - Unicode Test
2021-07-25 12:00:28,123 - DEBUG :     - Open log file
2021-07-25 12:00:28,123 - DEBUG :     - Attach To VS Code
2021-07-25 12:00:28,123 - DEBUG :     - Custom Task Panes
2021-07-25 12:00:28,123 - DEBUG :       - Qt
2021-07-25 12:00:28,123 - DEBUG :       - Tk
2021-07-25 12:00:28,123 - DEBUG :       - Wx
2021-07-25 12:00:28,123 - DEBUG :     - Example Menu Item 1
2021-07-25 12:00:28,123 - DEBUG :     - Example Tk CTP
2021-07-25 12:00:28,123 - DEBUG :     - Show last error
2021-07-25 12:00:28,123 - DEBUG :     - About PyXLL...
2021-07-25 12:00:28,123 - DEBUG :   - PyXLL example menu
2021-07-25 12:00:28,123 - DEBUG :     - Click me
2021-07-25 12:00:28,257 - DEBUG : Finished binding Python functions
2021-07-25 12:00:28,257 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 12:00:28,257 - DEBUG : pyxll._post_open complete.
2021-07-25 12:00:28,288 - DEBUG : PyXLL initialization complete.
2021-07-25 12:00:29,592 - DEBUG : Error checking license server.
2021-07-25 12:00:29,592 - DEBUG : Response code 0.
2021-07-25 12:00:29,592 - DEBUG : Error getting returned document
2021-07-25 12:00:29,592 - DEBUG : Connection blocked by a firewall?
2021-07-25 12:00:38,672 - DEBUG : Loading PyXLL COM Addin
2021-07-25 12:00:38,672 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 12:00:38,719 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 12:00:38,835 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 12:02:38,073 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 12:02:39,640 - ERROR : Traceback (most recent call last):
2021-07-25 12:02:39,641 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 85, in advanced_simulation_cell_wrapper
2021-07-25 12:02:39,642 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 12:02:39,642 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 68, in advanced_simulation_cell
2021-07-25 12:02:39,642 - ERROR :     variable_dict[transformed_cell_address] = advanced_simulation_cell(control=control,
2021-07-25 12:02:39,642 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 79, in advanced_simulation_cell
2021-07-25 12:02:39,642 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 12:02:39,642 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 12:02:39,642 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 12:02:39,647 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 12:02:39,647 - ERROR :     raise Exception(self.errormsg)
2021-07-25 12:02:39,647 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 13:05:11,273 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,288 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,294 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,295 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,311 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,312 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,313 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,329 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,330 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,331 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,332 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,348 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 13:05:11,364 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 13:05:11,373 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 13:05:11,375 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 13:05:11,375 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-25 13:54:15,034 - DEBUG : Error checking license server.
2021-07-25 13:54:15,034 - DEBUG : Response code 0.
2021-07-25 13:54:15,034 - DEBUG : Connection blocked by a firewall?
2021-07-25 15:11:52,154 - DEBUG : Error checking license server.
2021-07-25 15:11:52,154 - DEBUG : Response code 0.
2021-07-25 15:11:52,155 - DEBUG : Connection blocked by a firewall?
2021-07-25 15:21:52,345 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-25 15:21:52,347 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 15:21:52,347 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 15:21:52,347 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 15:21:52,347 - DEBUG : -------- PyXLL config --------
2021-07-25 15:21:52,347 - DEBUG : [LOG]
2021-07-25 15:21:52,347 - DEBUG : encoding = utf-8
2021-07-25 15:21:52,347 - DEBUG : file = pyxll.20210725.log
2021-07-25 15:21:52,347 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 15:21:52,347 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 15:21:52,347 - DEBUG : verbosity = debug
2021-07-25 15:21:52,347 - DEBUG : 
2021-07-25 15:21:52,347 - DEBUG : [PYTHON]
2021-07-25 15:21:52,347 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 15:21:52,347 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 15:21:52,347 - DEBUG : 
2021-07-25 15:21:52,347 - DEBUG : [PYXLL]
2021-07-25 15:21:52,347 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 15:21:52,347 - DEBUG : developer_mode = 1
2021-07-25 15:21:52,347 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 15:21:52,347 - DEBUG : modules = 
2021-07-25 15:21:52,347 - DEBUG :     misc
2021-07-25 15:21:52,347 - DEBUG :     worksheetfuncs
2021-07-25 15:21:52,347 - DEBUG :     menus
2021-07-25 15:21:52,347 - DEBUG :     callbacks
2021-07-25 15:21:52,347 - DEBUG :     custom_task_panes
2021-07-25 15:21:52,347 - DEBUG :     test
2021-07-25 15:21:52,347 - DEBUG :     ribbon_functions
2021-07-25 15:21:52,347 - DEBUG :     debugging
2021-07-25 15:21:52,347 - DEBUG :     meta_variables
2021-07-25 15:21:52,347 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 15:21:52,347 - DEBUG : ------------------------------
2021-07-25 15:21:52,347 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 15:21:52,347 - DEBUG : Initializing PyXLL Python module.
2021-07-25 15:21:52,347 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 15:21:52,366 - DEBUG : PyXLL Python module initialized.
2021-07-25 15:21:52,373 - DEBUG : Functions will not be cancellable by default.
2021-07-25 15:21:52,375 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 15:21:52,378 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 15:21:52,489 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 15:21:52,489 - DEBUG : Reloading misc
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 15:21:52,489 - DEBUG : Reloaded misc
2021-07-25 15:21:52,489 - DEBUG : Reloading worksheetfuncs
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 15:21:52,489 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 15:21:52,489 - DEBUG : Reloaded worksheetfuncs
2021-07-25 15:21:52,489 - DEBUG : Reloading menus
2021-07-25 15:21:52,489 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 15:21:52,489 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 15:21:52,505 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 15:21:52,505 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 15:21:52,505 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 15:21:52,505 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 15:21:52,505 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 15:21:52,505 - DEBUG : Reloaded menus
2021-07-25 15:21:52,505 - DEBUG : Reloading callbacks
2021-07-25 15:21:52,506 - DEBUG : Reloaded callbacks
2021-07-25 15:21:52,507 - DEBUG : Reloading custom_task_panes
2021-07-25 15:21:52,507 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 15:21:52,507 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 15:21:52,507 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 15:21:52,507 - DEBUG : Reloaded custom_task_panes
2021-07-25 15:21:52,507 - DEBUG : Reloading test
2021-07-25 15:21:52,507 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 15:21:52,507 - DEBUG : Reloaded test
2021-07-25 15:21:52,507 - DEBUG : Reloading meta_variables
2021-07-25 15:21:52,522 - DEBUG : Reloaded meta_variables
2021-07-25 15:21:52,522 - DEBUG : Reloading dependency error_functions
2021-07-25 15:21:52,539 - DEBUG : Reloaded dependency error_functions
2021-07-25 15:21:52,539 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 15:21:52,539 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 15:21:52,539 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 15:21:52,539 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 15:21:52,539 - DEBUG : Reloading dependency examples
2021-07-25 15:21:52,539 - DEBUG : Reloaded dependency examples
2021-07-25 15:21:52,539 - DEBUG : Reloading ribbon_functions
2021-07-25 15:21:52,539 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 15:21:52,539 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000024D65D2F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000024D65D8AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000024D65E13E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000024D65D9C250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000024D65D2F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000024D65D8AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000024D65E13E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000024D65D9C250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 15:21:52,539 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 15:21:52,539 - DEBUG : Reloaded ribbon_functions
2021-07-25 15:21:52,539 - DEBUG : Reloading debugging
2021-07-25 15:21:52,539 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 15:21:52,539 - DEBUG : Reloaded debugging
2021-07-25 15:21:52,601 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 15:21:52,620 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 15:21:52,628 - INFO : This product is licensed to 
2021-07-25 15:21:52,628 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 15:21:52,635 - DEBUG : Calling pyxll._post_open.
2021-07-25 15:21:52,635 - DEBUG : Binding Python functions to Excel
2021-07-25 15:21:52,635 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 15:21:52,635 - DEBUG :     - pyxll_version
2021-07-25 15:21:52,635 - DEBUG :     - python_version
2021-07-25 15:21:52,635 - DEBUG :     - win32api_is_installed
2021-07-25 15:21:52,635 - DEBUG :     - win32com_is_installed
2021-07-25 15:21:52,635 - DEBUG :     - numpy_is_installed
2021-07-25 15:21:52,635 - DEBUG :     - pyxll_logfile
2021-07-25 15:21:52,635 - DEBUG :     - get_formula
2021-07-25 15:21:52,635 - DEBUG :     - get_array_formula
2021-07-25 15:21:52,635 - DEBUG :     - get_last_error
2021-07-25 15:21:52,635 - DEBUG :     - basic_pyxll_function_1
2021-07-25 15:21:52,635 - DEBUG :     - basic_pyxll_function_2
2021-07-25 15:21:52,635 - DEBUG :     - basic_pyxll_function_3
2021-07-25 15:21:52,635 - DEBUG :     - var_pyxll_function_1
2021-07-25 15:21:52,635 - DEBUG :     - var_pyxll_function_2
2021-07-25 15:21:52,635 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 15:21:52,635 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 15:21:52,635 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 15:21:52,635 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 15:21:52,635 - DEBUG :     - xl_cell_example
2021-07-25 15:21:52,635 - DEBUG :     - recalc_on_open_test
2021-07-25 15:21:52,635 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 15:21:52,635 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 15:21:52,635 - DEBUG :     - hello
2021-07-25 15:21:52,635 - DEBUG :     - one_cell_one_sim
2021-07-25 15:21:52,635 - DEBUG :     - one_row_one_sim
2021-07-25 15:21:52,652 - DEBUG : Adding menus to Excel:
2021-07-25 15:21:52,652 - DEBUG :   - PyXLL
2021-07-25 15:21:52,652 - DEBUG :     - Reload PyXLL
2021-07-25 15:21:52,652 - DEBUG :     - Another example menu item
2021-07-25 15:21:52,652 - DEBUG :     - More Examples
2021-07-25 15:21:52,652 - DEBUG :       - Click me
2021-07-25 15:21:52,652 - DEBUG :       - Unicode Test
2021-07-25 15:21:52,652 - DEBUG :     - Open log file
2021-07-25 15:21:52,652 - DEBUG :     - Attach To VS Code
2021-07-25 15:21:52,652 - DEBUG :     - Custom Task Panes
2021-07-25 15:21:52,652 - DEBUG :       - Qt
2021-07-25 15:21:52,652 - DEBUG :       - Tk
2021-07-25 15:21:52,652 - DEBUG :       - Wx
2021-07-25 15:21:52,652 - DEBUG :     - Example Menu Item 1
2021-07-25 15:21:52,652 - DEBUG :     - Example Tk CTP
2021-07-25 15:21:52,652 - DEBUG :     - Show last error
2021-07-25 15:21:52,652 - DEBUG :     - About PyXLL...
2021-07-25 15:21:52,652 - DEBUG :   - PyXLL example menu
2021-07-25 15:21:52,652 - DEBUG :     - Click me
2021-07-25 15:21:52,665 - DEBUG : Finished binding Python functions
2021-07-25 15:21:52,665 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 15:21:53,977 - DEBUG : pyxll._post_open complete.
2021-07-25 15:21:53,979 - DEBUG : PyXLL initialization complete.
2021-07-25 15:21:53,982 - DEBUG : Loading PyXLL COM Addin
2021-07-25 15:21:53,982 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 15:21:53,989 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 15:21:54,125 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 15:21:54,134 - DEBUG : Error checking license server.
2021-07-25 15:21:54,134 - DEBUG : Response code 0.
2021-07-25 15:21:54,134 - DEBUG : Connection blocked by a firewall?
2021-07-25 15:22:02,472 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 15:22:12,281 - ERROR : Traceback (most recent call last):
2021-07-25 15:22:12,281 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 85, in advanced_simulation_cell_wrapper
2021-07-25 15:22:12,282 - ERROR :     #in recursive applications, we might already have simulated from the cell
2021-07-25 15:22:12,282 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 68, in advanced_simulation_cell
2021-07-25 15:22:12,282 - ERROR :     transformed_cell_address = re.sub(r"\$[A-Z]+\$[1-9]+", lambda x: x.group()[1] + x.group()[3], curr_cell_address)
2021-07-25 15:22:12,283 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 79, in advanced_simulation_cell
2021-07-25 15:22:12,283 - ERROR :     params = cell_information["params"] + [simulation_num]
2021-07-25 15:22:12,283 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 15:22:12,284 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 15:22:12,284 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 15:22:12,284 - ERROR :     raise Exception(self.errormsg)
2021-07-25 15:22:12,284 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 15:27:08,126 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 15:27:20,399 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-25 15:27:20,401 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 15:27:20,401 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 15:27:20,401 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 15:27:20,404 - DEBUG : -------- PyXLL config --------
2021-07-25 15:27:20,404 - DEBUG : [LOG]
2021-07-25 15:27:20,404 - DEBUG : encoding = utf-8
2021-07-25 15:27:20,404 - DEBUG : file = pyxll.20210725.log
2021-07-25 15:27:20,404 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 15:27:20,404 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 15:27:20,404 - DEBUG : verbosity = debug
2021-07-25 15:27:20,404 - DEBUG : 
2021-07-25 15:27:20,404 - DEBUG : [PYTHON]
2021-07-25 15:27:20,404 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 15:27:20,404 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 15:27:20,404 - DEBUG : 
2021-07-25 15:27:20,404 - DEBUG : [PYXLL]
2021-07-25 15:27:20,404 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 15:27:20,404 - DEBUG : developer_mode = 1
2021-07-25 15:27:20,404 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 15:27:20,404 - DEBUG : modules = 
2021-07-25 15:27:20,404 - DEBUG :     misc
2021-07-25 15:27:20,404 - DEBUG :     worksheetfuncs
2021-07-25 15:27:20,404 - DEBUG :     menus
2021-07-25 15:27:20,404 - DEBUG :     callbacks
2021-07-25 15:27:20,404 - DEBUG :     custom_task_panes
2021-07-25 15:27:20,404 - DEBUG :     test
2021-07-25 15:27:20,404 - DEBUG :     ribbon_functions
2021-07-25 15:27:20,404 - DEBUG :     debugging
2021-07-25 15:27:20,404 - DEBUG :     meta_variables
2021-07-25 15:27:20,404 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 15:27:20,404 - DEBUG : ------------------------------
2021-07-25 15:27:20,404 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 15:27:20,404 - DEBUG : Initializing PyXLL Python module.
2021-07-25 15:27:20,405 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 15:27:20,406 - DEBUG : PyXLL Python module initialized.
2021-07-25 15:27:20,412 - DEBUG : Functions will not be cancellable by default.
2021-07-25 15:27:20,415 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 15:27:20,415 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 15:27:20,505 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 15:27:20,505 - DEBUG : Reloading misc
2021-07-25 15:27:20,505 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 15:27:20,505 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 15:27:20,515 - DEBUG : Reloaded misc
2021-07-25 15:27:20,515 - DEBUG : Reloading worksheetfuncs
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 15:27:20,515 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 15:27:20,526 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 15:27:20,527 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 15:27:20,527 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 15:27:20,527 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 15:27:20,527 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 15:27:20,527 - DEBUG : Reloaded worksheetfuncs
2021-07-25 15:27:20,527 - DEBUG : Reloading menus
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 15:27:20,527 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 15:27:20,527 - DEBUG : Reloaded menus
2021-07-25 15:27:20,527 - DEBUG : Reloading callbacks
2021-07-25 15:27:20,535 - DEBUG : Reloaded callbacks
2021-07-25 15:27:20,535 - DEBUG : Reloading custom_task_panes
2021-07-25 15:27:20,535 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 15:27:20,535 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 15:27:20,535 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 15:27:20,535 - DEBUG : Reloaded custom_task_panes
2021-07-25 15:27:20,535 - DEBUG : Reloading test
2021-07-25 15:27:20,540 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 15:27:20,541 - DEBUG : Reloaded test
2021-07-25 15:27:20,541 - DEBUG : Reloading meta_variables
2021-07-25 15:27:20,541 - DEBUG : Reloaded meta_variables
2021-07-25 15:27:20,541 - DEBUG : Reloading dependency error_functions
2021-07-25 15:27:20,558 - DEBUG : Reloaded dependency error_functions
2021-07-25 15:27:20,558 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 15:27:20,558 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 15:27:20,558 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 15:27:20,558 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 15:27:20,558 - DEBUG : Reloading dependency examples
2021-07-25 15:27:20,558 - DEBUG : Reloaded dependency examples
2021-07-25 15:27:20,558 - DEBUG : Reloading ribbon_functions
2021-07-25 15:27:20,558 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 15:27:20,558 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000024D65D2F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000024D65D8AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000024D65E13E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000024D65D9C250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000024D65D2F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000024D65D8AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000024D65E13E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000024D65D9C250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 15:27:20,558 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 15:27:20,558 - DEBUG : Reloaded ribbon_functions
2021-07-25 15:27:20,558 - DEBUG : Reloading debugging
2021-07-25 15:27:20,558 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 15:27:20,558 - DEBUG : Reloaded debugging
2021-07-25 15:27:20,631 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 15:27:20,651 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 15:27:20,659 - INFO : This product is licensed to 
2021-07-25 15:27:20,659 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 15:27:20,672 - DEBUG : Calling pyxll._post_open.
2021-07-25 15:27:20,672 - DEBUG : Binding Python functions to Excel
2021-07-25 15:27:20,672 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 15:27:20,673 - DEBUG :     - pyxll_version
2021-07-25 15:27:20,673 - DEBUG :     - python_version
2021-07-25 15:27:20,673 - DEBUG :     - win32api_is_installed
2021-07-25 15:27:20,673 - DEBUG :     - win32com_is_installed
2021-07-25 15:27:20,673 - DEBUG :     - numpy_is_installed
2021-07-25 15:27:20,673 - DEBUG :     - pyxll_logfile
2021-07-25 15:27:20,674 - DEBUG :     - get_formula
2021-07-25 15:27:20,674 - DEBUG :     - get_array_formula
2021-07-25 15:27:20,674 - DEBUG :     - get_last_error
2021-07-25 15:27:20,674 - DEBUG :     - basic_pyxll_function_1
2021-07-25 15:27:20,674 - DEBUG :     - basic_pyxll_function_2
2021-07-25 15:27:20,674 - DEBUG :     - basic_pyxll_function_3
2021-07-25 15:27:20,674 - DEBUG :     - var_pyxll_function_1
2021-07-25 15:27:20,674 - DEBUG :     - var_pyxll_function_2
2021-07-25 15:27:20,674 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 15:27:20,674 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 15:27:20,674 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 15:27:20,674 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 15:27:20,674 - DEBUG :     - xl_cell_example
2021-07-25 15:27:20,674 - DEBUG :     - recalc_on_open_test
2021-07-25 15:27:20,674 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 15:27:20,674 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 15:27:20,674 - DEBUG :     - hello
2021-07-25 15:27:20,674 - DEBUG :     - one_cell_one_sim
2021-07-25 15:27:20,674 - DEBUG :     - one_row_one_sim
2021-07-25 15:27:20,697 - DEBUG : Adding menus to Excel:
2021-07-25 15:27:20,697 - DEBUG :   - PyXLL
2021-07-25 15:27:20,697 - DEBUG :     - Reload PyXLL
2021-07-25 15:27:20,697 - DEBUG :     - Another example menu item
2021-07-25 15:27:20,697 - DEBUG :     - More Examples
2021-07-25 15:27:20,697 - DEBUG :       - Click me
2021-07-25 15:27:20,697 - DEBUG :       - Unicode Test
2021-07-25 15:27:20,697 - DEBUG :     - Open log file
2021-07-25 15:27:20,697 - DEBUG :     - Attach To VS Code
2021-07-25 15:27:20,697 - DEBUG :     - Custom Task Panes
2021-07-25 15:27:20,697 - DEBUG :       - Qt
2021-07-25 15:27:20,697 - DEBUG :       - Tk
2021-07-25 15:27:20,697 - DEBUG :       - Wx
2021-07-25 15:27:20,697 - DEBUG :     - Example Menu Item 1
2021-07-25 15:27:20,697 - DEBUG :     - Example Tk CTP
2021-07-25 15:27:20,697 - DEBUG :     - Show last error
2021-07-25 15:27:20,697 - DEBUG :     - About PyXLL...
2021-07-25 15:27:20,697 - DEBUG :   - PyXLL example menu
2021-07-25 15:27:20,697 - DEBUG :     - Click me
2021-07-25 15:27:20,713 - DEBUG : Finished binding Python functions
2021-07-25 15:27:20,713 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 15:27:21,650 - DEBUG : pyxll._post_open complete.
2021-07-25 15:27:21,651 - DEBUG : PyXLL initialization complete.
2021-07-25 15:28:15,353 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 15:28:27,796 - DEBUG : Closing PyXLL Python module.
2021-07-25 15:28:27,796 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 15:28:27,796 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 15:28:27,796 - DEBUG : PyXLL Python module closed.
2021-07-25 15:28:45,629 - DEBUG : 
Sun Jul 25 15:28:45 2021
---------- PyXLL Stopped ----------
2021-07-25 15:28:53,235 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 15:28:53,235 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 15:28:53,236 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 15:28:53,236 - DEBUG : -------- PyXLL config --------
2021-07-25 15:28:53,236 - DEBUG : [LOG]
2021-07-25 15:28:53,236 - DEBUG : encoding = utf-8
2021-07-25 15:28:53,236 - DEBUG : file = pyxll.20210725.log
2021-07-25 15:28:53,236 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 15:28:53,236 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 15:28:53,236 - DEBUG : verbosity = debug
2021-07-25 15:28:53,236 - DEBUG : 
2021-07-25 15:28:53,236 - DEBUG : [PYTHON]
2021-07-25 15:28:53,236 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 15:28:53,236 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 15:28:53,236 - DEBUG : 
2021-07-25 15:28:53,236 - DEBUG : [PYXLL]
2021-07-25 15:28:53,236 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 15:28:53,236 - DEBUG : developer_mode = 1
2021-07-25 15:28:53,236 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 15:28:53,236 - DEBUG : modules = 
2021-07-25 15:28:53,236 - DEBUG :     misc
2021-07-25 15:28:53,237 - DEBUG :     worksheetfuncs
2021-07-25 15:28:53,237 - DEBUG :     menus
2021-07-25 15:28:53,237 - DEBUG :     callbacks
2021-07-25 15:28:53,237 - DEBUG :     custom_task_panes
2021-07-25 15:28:53,237 - DEBUG :     test
2021-07-25 15:28:53,237 - DEBUG :     ribbon_functions
2021-07-25 15:28:53,237 - DEBUG :     debugging
2021-07-25 15:28:53,237 - DEBUG :     meta_variables
2021-07-25 15:28:53,237 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 15:28:53,237 - DEBUG : ------------------------------
2021-07-25 15:28:53,239 - DEBUG : Attempting to load python38.dll
2021-07-25 15:28:53,242 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 15:28:53,244 - DEBUG : Checking Py_IsInitialized...
2021-07-25 15:28:53,244 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 15:28:53,365 - DEBUG : Calling Py_Initialize...
2021-07-25 15:28:53,479 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 15:28:53,479 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 15:28:53,479 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 15:28:53,479 - DEBUG : Python is initialized.
2021-07-25 15:28:53,481 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 15:28:53,482 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 15:28:53,482 - DEBUG : Looking for module 'site'...
2021-07-25 15:28:53,514 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 15:28:53,514 - DEBUG : Importing pyxll module
2021-07-25 15:28:53,514 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 15:28:53,514 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 15:28:53,514 - DEBUG :   Detected Python3
2021-07-25 15:28:53,565 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 15:28:53,565 - DEBUG : pyxll module imported
2021-07-25 15:28:53,565 - DEBUG : Initializing PyXLL Python module.
2021-07-25 15:28:53,565 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 15:28:53,565 - DEBUG : PyXLL Python module initialized.
2021-07-25 15:28:53,576 - DEBUG : Functions will not be cancellable by default.
2021-07-25 15:28:53,577 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 15:28:53,837 - DEBUG : Importing misc
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 15:28:53,838 - DEBUG : Imported misc
2021-07-25 15:28:53,838 - DEBUG : Importing worksheetfuncs
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 15:28:53,838 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 15:28:53,838 - DEBUG : Imported worksheetfuncs
2021-07-25 15:28:53,838 - DEBUG : Importing menus
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 15:28:53,849 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 15:28:53,849 - DEBUG : Imported menus
2021-07-25 15:28:53,849 - DEBUG : Importing callbacks
2021-07-25 15:28:53,849 - DEBUG : Imported callbacks
2021-07-25 15:28:53,849 - DEBUG : Importing custom_task_panes
2021-07-25 15:28:53,853 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 15:28:53,853 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 15:28:53,853 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 15:28:53,853 - DEBUG : Imported custom_task_panes
2021-07-25 15:28:53,853 - DEBUG : Importing test
2021-07-25 15:28:53,855 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 15:28:53,855 - DEBUG : Imported test
2021-07-25 15:28:53,855 - DEBUG : Importing ribbon_functions
2021-07-25 15:28:54,920 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 15:28:54,949 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 15:28:54,949 - DEBUG : matplotlib version 3.4.2
2021-07-25 15:28:54,949 - DEBUG : interactive is False
2021-07-25 15:28:54,949 - DEBUG : platform is win32
2021-07-25 15:28:54,949 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_160000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_160000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 15:28:54,999 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 15:28:55,008 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 15:28:55,203 - DEBUG : Loaded backend agg version unknown.
2021-07-25 15:28:55,204 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 15:28:55,204 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000025F3DCDD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000025F3DD39DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000025F3EDA6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000025F3DD47250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000025F3DCDD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000025F3DD39DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000025F3EDA6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000025F3DD47250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 15:28:55,204 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 15:28:55,204 - DEBUG : Imported ribbon_functions
2021-07-25 15:28:55,204 - DEBUG : Importing debugging
2021-07-25 15:28:56,214 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 15:28:56,215 - DEBUG : Imported debugging
2021-07-25 15:28:56,215 - DEBUG : Importing meta_variables
2021-07-25 15:28:56,215 - DEBUG : Imported meta_variables
2021-07-25 15:28:56,282 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 15:28:56,291 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 15:28:56,310 - INFO : This product is licensed to 
2021-07-25 15:28:56,310 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 15:28:56,320 - DEBUG : Calling pyxll._post_open.
2021-07-25 15:28:56,320 - DEBUG : Binding Python functions to Excel
2021-07-25 15:28:56,320 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 15:28:56,320 - DEBUG :     - pyxll_version
2021-07-25 15:28:56,320 - DEBUG :     - python_version
2021-07-25 15:28:56,320 - DEBUG :     - win32api_is_installed
2021-07-25 15:28:56,320 - DEBUG :     - win32com_is_installed
2021-07-25 15:28:56,320 - DEBUG :     - numpy_is_installed
2021-07-25 15:28:56,320 - DEBUG :     - pyxll_logfile
2021-07-25 15:28:56,320 - DEBUG :     - get_formula
2021-07-25 15:28:56,320 - DEBUG :     - get_array_formula
2021-07-25 15:28:56,320 - DEBUG :     - get_last_error
2021-07-25 15:28:56,320 - DEBUG :     - basic_pyxll_function_1
2021-07-25 15:28:56,320 - DEBUG :     - basic_pyxll_function_2
2021-07-25 15:28:56,320 - DEBUG :     - basic_pyxll_function_3
2021-07-25 15:28:56,320 - DEBUG :     - var_pyxll_function_1
2021-07-25 15:28:56,320 - DEBUG :     - var_pyxll_function_2
2021-07-25 15:28:56,320 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 15:28:56,320 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 15:28:56,320 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 15:28:56,320 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 15:28:56,320 - DEBUG :     - xl_cell_example
2021-07-25 15:28:56,320 - DEBUG :     - recalc_on_open_test
2021-07-25 15:28:56,320 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 15:28:56,320 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 15:28:56,320 - DEBUG :     - hello
2021-07-25 15:28:56,320 - DEBUG :     - one_cell_one_sim
2021-07-25 15:28:56,320 - DEBUG :     - one_row_one_sim
2021-07-25 15:28:56,342 - DEBUG : Adding menus to Excel:
2021-07-25 15:28:56,342 - DEBUG :   - PyXLL
2021-07-25 15:28:56,342 - DEBUG :     - Reload PyXLL
2021-07-25 15:28:56,342 - DEBUG :     - Another example menu item
2021-07-25 15:28:56,342 - DEBUG :     - More Examples
2021-07-25 15:28:56,342 - DEBUG :       - Click me
2021-07-25 15:28:56,342 - DEBUG :       - Unicode Test
2021-07-25 15:28:56,342 - DEBUG :     - Open log file
2021-07-25 15:28:56,342 - DEBUG :     - Attach To VS Code
2021-07-25 15:28:56,342 - DEBUG :     - Custom Task Panes
2021-07-25 15:28:56,342 - DEBUG :       - Qt
2021-07-25 15:28:56,342 - DEBUG :       - Tk
2021-07-25 15:28:56,342 - DEBUG :       - Wx
2021-07-25 15:28:56,342 - DEBUG :     - Example Menu Item 1
2021-07-25 15:28:56,342 - DEBUG :     - Example Tk CTP
2021-07-25 15:28:56,342 - DEBUG :     - Show last error
2021-07-25 15:28:56,342 - DEBUG :     - About PyXLL...
2021-07-25 15:28:56,342 - DEBUG :   - PyXLL example menu
2021-07-25 15:28:56,342 - DEBUG :     - Click me
2021-07-25 15:28:56,409 - DEBUG : Finished binding Python functions
2021-07-25 15:28:56,409 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 15:28:56,410 - DEBUG : pyxll._post_open complete.
2021-07-25 15:28:56,430 - DEBUG : PyXLL initialization complete.
2021-07-25 15:28:56,803 - DEBUG : Error checking license server.
2021-07-25 15:28:56,803 - DEBUG : Response code 0.
2021-07-25 15:28:56,803 - DEBUG : Error getting returned document
2021-07-25 15:28:56,803 - DEBUG : Connection blocked by a firewall?
2021-07-25 15:29:09,116 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 15:29:09,920 - DEBUG : Closing PyXLL Python module.
2021-07-25 15:29:09,920 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 15:29:09,920 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 15:29:09,920 - DEBUG : PyXLL Python module closed.
2021-07-25 15:29:14,702 - DEBUG : 
Sun Jul 25 15:29:14 2021
---------- PyXLL Stopped ----------
2021-07-25 15:29:17,145 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 15:29:17,145 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 15:29:17,145 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 15:29:17,146 - DEBUG : -------- PyXLL config --------
2021-07-25 15:29:17,146 - DEBUG : [LOG]
2021-07-25 15:29:17,146 - DEBUG : encoding = utf-8
2021-07-25 15:29:17,146 - DEBUG : file = pyxll.20210725.log
2021-07-25 15:29:17,146 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 15:29:17,146 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 15:29:17,146 - DEBUG : verbosity = debug
2021-07-25 15:29:17,146 - DEBUG : 
2021-07-25 15:29:17,146 - DEBUG : [PYTHON]
2021-07-25 15:29:17,146 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 15:29:17,146 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 15:29:17,146 - DEBUG : 
2021-07-25 15:29:17,146 - DEBUG : [PYXLL]
2021-07-25 15:29:17,146 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 15:29:17,146 - DEBUG : developer_mode = 1
2021-07-25 15:29:17,146 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 15:29:17,146 - DEBUG : modules = 
2021-07-25 15:29:17,146 - DEBUG :     misc
2021-07-25 15:29:17,146 - DEBUG :     worksheetfuncs
2021-07-25 15:29:17,146 - DEBUG :     menus
2021-07-25 15:29:17,146 - DEBUG :     callbacks
2021-07-25 15:29:17,146 - DEBUG :     custom_task_panes
2021-07-25 15:29:17,146 - DEBUG :     test
2021-07-25 15:29:17,146 - DEBUG :     ribbon_functions
2021-07-25 15:29:17,146 - DEBUG :     debugging
2021-07-25 15:29:17,146 - DEBUG :     meta_variables
2021-07-25 15:29:17,146 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 15:29:17,146 - DEBUG : ------------------------------
2021-07-25 15:29:17,148 - DEBUG : Attempting to load python38.dll
2021-07-25 15:29:17,153 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 15:29:17,155 - DEBUG : Checking Py_IsInitialized...
2021-07-25 15:29:17,155 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 15:29:17,287 - DEBUG : Calling Py_Initialize...
2021-07-25 15:29:17,406 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 15:29:17,406 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 15:29:17,406 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 15:29:17,406 - DEBUG : Python is initialized.
2021-07-25 15:29:17,407 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 15:29:17,408 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 15:29:17,408 - DEBUG : Looking for module 'site'...
2021-07-25 15:29:17,442 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 15:29:17,442 - DEBUG : Importing pyxll module
2021-07-25 15:29:17,442 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 15:29:17,442 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 15:29:17,442 - DEBUG :   Detected Python3
2021-07-25 15:29:17,490 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 15:29:17,499 - DEBUG : pyxll module imported
2021-07-25 15:29:17,499 - DEBUG : Initializing PyXLL Python module.
2021-07-25 15:29:17,499 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 15:29:17,503 - DEBUG : PyXLL Python module initialized.
2021-07-25 15:29:17,505 - DEBUG : Functions will not be cancellable by default.
2021-07-25 15:29:17,506 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 15:29:17,761 - DEBUG : Importing misc
2021-07-25 15:29:17,762 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 15:29:17,763 - DEBUG : Imported misc
2021-07-25 15:29:17,763 - DEBUG : Importing worksheetfuncs
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 15:29:17,763 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 15:29:17,768 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 15:29:17,769 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 15:29:17,769 - DEBUG : Imported worksheetfuncs
2021-07-25 15:29:17,769 - DEBUG : Importing menus
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 15:29:17,774 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 15:29:17,774 - DEBUG : Imported menus
2021-07-25 15:29:17,774 - DEBUG : Importing callbacks
2021-07-25 15:29:17,774 - DEBUG : Imported callbacks
2021-07-25 15:29:17,774 - DEBUG : Importing custom_task_panes
2021-07-25 15:29:17,777 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 15:29:17,777 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 15:29:17,777 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 15:29:17,777 - DEBUG : Imported custom_task_panes
2021-07-25 15:29:17,777 - DEBUG : Importing test
2021-07-25 15:29:17,778 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 15:29:17,778 - DEBUG : Imported test
2021-07-25 15:29:17,778 - DEBUG : Importing ribbon_functions
2021-07-25 15:29:18,848 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 15:29:18,864 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 15:29:18,864 - DEBUG : matplotlib version 3.4.2
2021-07-25 15:29:18,864 - DEBUG : interactive is False
2021-07-25 15:29:18,864 - DEBUG : platform is win32
2021-07-25 15:29:18,864 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_40000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_40000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 15:29:18,910 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 15:29:18,926 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 15:29:19,122 - DEBUG : Loaded backend agg version unknown.
2021-07-25 15:29:19,123 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 15:29:19,123 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F74CBBD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F74CC19DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F74DC86E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F74CC25250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F74CBBD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F74CC19DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F74DC86E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F74CC25250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 15:29:19,123 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 15:29:19,123 - DEBUG : Imported ribbon_functions
2021-07-25 15:29:19,123 - DEBUG : Importing debugging
2021-07-25 15:29:20,077 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 15:29:20,077 - DEBUG : Imported debugging
2021-07-25 15:29:20,077 - DEBUG : Importing meta_variables
2021-07-25 15:29:20,077 - DEBUG : Imported meta_variables
2021-07-25 15:29:20,139 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 15:29:20,147 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 15:29:20,167 - INFO : This product is licensed to 
2021-07-25 15:29:20,167 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 15:29:20,176 - DEBUG : Calling pyxll._post_open.
2021-07-25 15:29:20,176 - DEBUG : Binding Python functions to Excel
2021-07-25 15:29:20,176 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 15:29:20,176 - DEBUG :     - pyxll_version
2021-07-25 15:29:20,176 - DEBUG :     - python_version
2021-07-25 15:29:20,176 - DEBUG :     - win32api_is_installed
2021-07-25 15:29:20,176 - DEBUG :     - win32com_is_installed
2021-07-25 15:29:20,176 - DEBUG :     - numpy_is_installed
2021-07-25 15:29:20,176 - DEBUG :     - pyxll_logfile
2021-07-25 15:29:20,180 - DEBUG :     - get_formula
2021-07-25 15:29:20,180 - DEBUG :     - get_array_formula
2021-07-25 15:29:20,180 - DEBUG :     - get_last_error
2021-07-25 15:29:20,180 - DEBUG :     - basic_pyxll_function_1
2021-07-25 15:29:20,180 - DEBUG :     - basic_pyxll_function_2
2021-07-25 15:29:20,180 - DEBUG :     - basic_pyxll_function_3
2021-07-25 15:29:20,180 - DEBUG :     - var_pyxll_function_1
2021-07-25 15:29:20,180 - DEBUG :     - var_pyxll_function_2
2021-07-25 15:29:20,180 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 15:29:20,180 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 15:29:20,180 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 15:29:20,181 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 15:29:20,181 - DEBUG :     - xl_cell_example
2021-07-25 15:29:20,181 - DEBUG :     - recalc_on_open_test
2021-07-25 15:29:20,181 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 15:29:20,181 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 15:29:20,181 - DEBUG :     - hello
2021-07-25 15:29:20,181 - DEBUG :     - one_cell_one_sim
2021-07-25 15:29:20,181 - DEBUG :     - one_row_one_sim
2021-07-25 15:29:20,198 - DEBUG : Adding menus to Excel:
2021-07-25 15:29:20,198 - DEBUG :   - PyXLL
2021-07-25 15:29:20,198 - DEBUG :     - Reload PyXLL
2021-07-25 15:29:20,198 - DEBUG :     - Another example menu item
2021-07-25 15:29:20,198 - DEBUG :     - More Examples
2021-07-25 15:29:20,198 - DEBUG :       - Click me
2021-07-25 15:29:20,198 - DEBUG :       - Unicode Test
2021-07-25 15:29:20,198 - DEBUG :     - Open log file
2021-07-25 15:29:20,198 - DEBUG :     - Attach To VS Code
2021-07-25 15:29:20,198 - DEBUG :     - Custom Task Panes
2021-07-25 15:29:20,198 - DEBUG :       - Qt
2021-07-25 15:29:20,198 - DEBUG :       - Tk
2021-07-25 15:29:20,198 - DEBUG :       - Wx
2021-07-25 15:29:20,198 - DEBUG :     - Example Menu Item 1
2021-07-25 15:29:20,198 - DEBUG :     - Example Tk CTP
2021-07-25 15:29:20,198 - DEBUG :     - Show last error
2021-07-25 15:29:20,198 - DEBUG :     - About PyXLL...
2021-07-25 15:29:20,198 - DEBUG :   - PyXLL example menu
2021-07-25 15:29:20,198 - DEBUG :     - Click me
2021-07-25 15:29:20,252 - DEBUG : Finished binding Python functions
2021-07-25 15:29:20,252 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 15:29:20,252 - DEBUG : pyxll._post_open complete.
2021-07-25 15:29:20,265 - DEBUG : PyXLL initialization complete.
2021-07-25 15:29:20,648 - DEBUG : Error checking license server.
2021-07-25 15:29:20,648 - DEBUG : Response code 0.
2021-07-25 15:29:20,648 - DEBUG : Error getting returned document
2021-07-25 15:29:20,648 - DEBUG : Connection blocked by a firewall?
2021-07-25 15:29:25,395 - DEBUG : Loading PyXLL COM Addin
2021-07-25 15:29:25,395 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 15:29:25,418 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 15:29:25,476 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 15:31:21,312 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 15:31:21,312 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,327 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,335 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,351 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,352 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,353 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,361 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,362 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,377 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,378 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,394 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,395 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 15:31:21,396 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 15:31:21,396 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-25 15:42:10,369 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 15:42:37,556 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 15:42:49,304 - ERROR : Traceback (most recent call last):
2021-07-25 15:42:49,316 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 113, in advanced_simulation_cell_wrapper
2021-07-25 15:42:49,319 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 15:42:49,319 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 107, in advanced_simulation_cell
2021-07-25 15:42:49,321 - ERROR :     result = parser.parse(formula[1:].replace("!", "_"*3)).evaluate(variable_dict)
2021-07-25 15:42:49,321 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 129, in evaluate
2021-07-25 15:42:49,322 - ERROR :     raise Exception('undefined variable: ' + item.index_)
2021-07-25 15:42:49,323 - ERROR : Exception: undefined variable: E7
2021-07-25 17:08:48,412 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-25 17:08:48,413 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:08:48,413 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:08:48,413 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:08:48,413 - DEBUG : -------- PyXLL config --------
2021-07-25 17:08:48,413 - DEBUG : [LOG]
2021-07-25 17:08:48,413 - DEBUG : encoding = utf-8
2021-07-25 17:08:48,413 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:08:48,413 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:08:48,413 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:08:48,413 - DEBUG : verbosity = debug
2021-07-25 17:08:48,413 - DEBUG : 
2021-07-25 17:08:48,413 - DEBUG : [PYTHON]
2021-07-25 17:08:48,413 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:08:48,413 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:08:48,413 - DEBUG : 
2021-07-25 17:08:48,413 - DEBUG : [PYXLL]
2021-07-25 17:08:48,413 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:08:48,413 - DEBUG : developer_mode = 1
2021-07-25 17:08:48,413 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:08:48,413 - DEBUG : modules = 
2021-07-25 17:08:48,413 - DEBUG :     misc
2021-07-25 17:08:48,413 - DEBUG :     worksheetfuncs
2021-07-25 17:08:48,413 - DEBUG :     menus
2021-07-25 17:08:48,413 - DEBUG :     callbacks
2021-07-25 17:08:48,413 - DEBUG :     custom_task_panes
2021-07-25 17:08:48,413 - DEBUG :     test
2021-07-25 17:08:48,413 - DEBUG :     ribbon_functions
2021-07-25 17:08:48,413 - DEBUG :     debugging
2021-07-25 17:08:48,413 - DEBUG :     meta_variables
2021-07-25 17:08:48,413 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:08:48,413 - DEBUG : ------------------------------
2021-07-25 17:08:48,413 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:08:48,413 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:08:48,413 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:08:48,423 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:08:48,427 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:08:48,428 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:08:48,428 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 17:08:48,521 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 17:08:48,521 - DEBUG : Reloading misc
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:08:48,544 - DEBUG : Reloaded misc
2021-07-25 17:08:48,544 - DEBUG : Reloading worksheetfuncs
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:08:48,544 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:08:48,559 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:08:48,560 - DEBUG : Reloaded worksheetfuncs
2021-07-25 17:08:48,560 - DEBUG : Reloading menus
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:08:48,561 - DEBUG : Reloaded menus
2021-07-25 17:08:48,561 - DEBUG : Reloading callbacks
2021-07-25 17:08:48,561 - DEBUG : Reloaded callbacks
2021-07-25 17:08:48,561 - DEBUG : Reloading custom_task_panes
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:08:48,561 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:08:48,561 - DEBUG : Reloaded custom_task_panes
2021-07-25 17:08:48,561 - DEBUG : Reloading test
2021-07-25 17:08:48,561 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:08:48,561 - DEBUG : Reloaded test
2021-07-25 17:08:48,561 - DEBUG : Reloading meta_variables
2021-07-25 17:08:48,561 - DEBUG : Reloaded meta_variables
2021-07-25 17:08:48,561 - DEBUG : Reloading dependency error_functions
2021-07-25 17:08:48,576 - DEBUG : Reloaded dependency error_functions
2021-07-25 17:08:48,576 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 17:08:48,576 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 17:08:48,576 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 17:08:48,576 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 17:08:48,576 - DEBUG : Reloading dependency examples
2021-07-25 17:08:48,576 - DEBUG : Reloaded dependency examples
2021-07-25 17:08:48,576 - DEBUG : Reloading ribbon_functions
2021-07-25 17:08:48,576 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:08:48,592 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F74CBBD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F74CC19DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F74DC86E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F74CC25250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F74CBBD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F74CC19DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F74DC86E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F74CC25250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:08:48,592 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:08:48,592 - DEBUG : Reloaded ribbon_functions
2021-07-25 17:08:48,592 - DEBUG : Reloading debugging
2021-07-25 17:08:48,592 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:08:48,592 - DEBUG : Reloaded debugging
2021-07-25 17:08:48,660 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:08:48,676 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:08:48,687 - INFO : This product is licensed to 
2021-07-25 17:08:48,687 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:08:48,694 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:08:48,694 - DEBUG : Binding Python functions to Excel
2021-07-25 17:08:48,694 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:08:48,694 - DEBUG :     - pyxll_version
2021-07-25 17:08:48,694 - DEBUG :     - python_version
2021-07-25 17:08:48,694 - DEBUG :     - win32api_is_installed
2021-07-25 17:08:48,694 - DEBUG :     - win32com_is_installed
2021-07-25 17:08:48,694 - DEBUG :     - numpy_is_installed
2021-07-25 17:08:48,694 - DEBUG :     - pyxll_logfile
2021-07-25 17:08:48,694 - DEBUG :     - get_formula
2021-07-25 17:08:48,694 - DEBUG :     - get_array_formula
2021-07-25 17:08:48,694 - DEBUG :     - get_last_error
2021-07-25 17:08:48,694 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:08:48,694 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:08:48,694 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:08:48,694 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:08:48,694 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:08:48,694 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:08:48,694 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:08:48,694 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:08:48,694 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:08:48,694 - DEBUG :     - xl_cell_example
2021-07-25 17:08:48,694 - DEBUG :     - recalc_on_open_test
2021-07-25 17:08:48,694 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:08:48,694 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:08:48,694 - DEBUG :     - hello
2021-07-25 17:08:48,694 - DEBUG :     - one_cell_one_sim
2021-07-25 17:08:48,694 - DEBUG :     - one_row_one_sim
2021-07-25 17:08:48,727 - DEBUG : Adding menus to Excel:
2021-07-25 17:08:48,727 - DEBUG :   - PyXLL
2021-07-25 17:08:48,727 - DEBUG :     - Reload PyXLL
2021-07-25 17:08:48,727 - DEBUG :     - Another example menu item
2021-07-25 17:08:48,727 - DEBUG :     - More Examples
2021-07-25 17:08:48,727 - DEBUG :       - Click me
2021-07-25 17:08:48,727 - DEBUG :       - Unicode Test
2021-07-25 17:08:48,727 - DEBUG :     - Open log file
2021-07-25 17:08:48,727 - DEBUG :     - Attach To VS Code
2021-07-25 17:08:48,727 - DEBUG :     - Custom Task Panes
2021-07-25 17:08:48,727 - DEBUG :       - Qt
2021-07-25 17:08:48,727 - DEBUG :       - Tk
2021-07-25 17:08:48,727 - DEBUG :       - Wx
2021-07-25 17:08:48,727 - DEBUG :     - Example Menu Item 1
2021-07-25 17:08:48,727 - DEBUG :     - Example Tk CTP
2021-07-25 17:08:48,727 - DEBUG :     - Show last error
2021-07-25 17:08:48,727 - DEBUG :     - About PyXLL...
2021-07-25 17:08:48,727 - DEBUG :   - PyXLL example menu
2021-07-25 17:08:48,727 - DEBUG :     - Click me
2021-07-25 17:08:48,743 - DEBUG : Finished binding Python functions
2021-07-25 17:08:48,744 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 17:08:50,064 - DEBUG : pyxll._post_open complete.
2021-07-25 17:08:50,064 - DEBUG : PyXLL initialization complete.
2021-07-25 17:08:53,593 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:08:53,593 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:08:53,593 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:08:53,593 - DEBUG : PyXLL Python module closed.
2021-07-25 17:08:58,162 - DEBUG : 
Sun Jul 25 17:08:58 2021
---------- PyXLL Stopped ----------
2021-07-25 17:09:04,568 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:09:04,568 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:09:04,568 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:09:04,568 - DEBUG : -------- PyXLL config --------
2021-07-25 17:09:04,568 - DEBUG : [LOG]
2021-07-25 17:09:04,568 - DEBUG : encoding = utf-8
2021-07-25 17:09:04,568 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:09:04,568 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:09:04,568 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:09:04,568 - DEBUG : verbosity = debug
2021-07-25 17:09:04,568 - DEBUG : 
2021-07-25 17:09:04,568 - DEBUG : [PYTHON]
2021-07-25 17:09:04,568 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:09:04,568 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:09:04,568 - DEBUG : 
2021-07-25 17:09:04,568 - DEBUG : [PYXLL]
2021-07-25 17:09:04,568 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:09:04,568 - DEBUG : developer_mode = 1
2021-07-25 17:09:04,569 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:09:04,569 - DEBUG : modules = 
2021-07-25 17:09:04,569 - DEBUG :     misc
2021-07-25 17:09:04,569 - DEBUG :     worksheetfuncs
2021-07-25 17:09:04,569 - DEBUG :     menus
2021-07-25 17:09:04,569 - DEBUG :     callbacks
2021-07-25 17:09:04,569 - DEBUG :     custom_task_panes
2021-07-25 17:09:04,569 - DEBUG :     test
2021-07-25 17:09:04,569 - DEBUG :     ribbon_functions
2021-07-25 17:09:04,569 - DEBUG :     debugging
2021-07-25 17:09:04,569 - DEBUG :     meta_variables
2021-07-25 17:09:04,569 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:09:04,569 - DEBUG : ------------------------------
2021-07-25 17:09:04,571 - DEBUG : Attempting to load python38.dll
2021-07-25 17:09:04,574 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:09:04,575 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:09:04,575 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:09:04,702 - DEBUG : Calling Py_Initialize...
2021-07-25 17:09:04,828 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:09:04,829 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:09:04,829 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:09:04,829 - DEBUG : Python is initialized.
2021-07-25 17:09:04,830 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:09:04,833 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:09:04,833 - DEBUG : Looking for module 'site'...
2021-07-25 17:09:04,867 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:09:04,867 - DEBUG : Importing pyxll module
2021-07-25 17:09:04,867 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:09:04,867 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:09:04,867 - DEBUG :   Detected Python3
2021-07-25 17:09:04,915 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:09:04,916 - DEBUG : pyxll module imported
2021-07-25 17:09:04,916 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:09:04,916 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:09:04,916 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:09:04,925 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:09:04,925 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:09:05,183 - DEBUG : Importing misc
2021-07-25 17:09:05,184 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:09:05,184 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:09:05,185 - DEBUG : Imported misc
2021-07-25 17:09:05,185 - DEBUG : Importing worksheetfuncs
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:09:05,185 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:09:05,185 - DEBUG : Imported worksheetfuncs
2021-07-25 17:09:05,185 - DEBUG : Importing menus
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:09:05,195 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:09:05,195 - DEBUG : Imported menus
2021-07-25 17:09:05,195 - DEBUG : Importing callbacks
2021-07-25 17:09:05,195 - DEBUG : Imported callbacks
2021-07-25 17:09:05,195 - DEBUG : Importing custom_task_panes
2021-07-25 17:09:05,199 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:09:05,199 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:09:05,199 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:09:05,200 - DEBUG : Imported custom_task_panes
2021-07-25 17:09:05,200 - DEBUG : Importing test
2021-07-25 17:09:05,201 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:09:05,201 - DEBUG : Imported test
2021-07-25 17:09:05,201 - DEBUG : Importing ribbon_functions
2021-07-25 17:09:06,299 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:09:06,317 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:09:06,317 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:09:06,317 - DEBUG : interactive is False
2021-07-25 17:09:06,317 - DEBUG : platform is win32
2021-07-25 17:09:06,317 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_250000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_250000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:09:06,379 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:09:06,379 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:09:06,578 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:09:06,583 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:09:06,583 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022ED2DFD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022ED2E54D30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022ED3EBDE80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022ED2E65250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022ED2DFD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022ED2E54D30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022ED3EBDE80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022ED2E65250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:09:06,583 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:09:06,583 - DEBUG : Imported ribbon_functions
2021-07-25 17:09:06,584 - DEBUG : Importing debugging
2021-07-25 17:09:07,559 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:09:07,559 - DEBUG : Imported debugging
2021-07-25 17:09:07,561 - DEBUG : Importing meta_variables
2021-07-25 17:09:07,562 - DEBUG : Imported meta_variables
2021-07-25 17:09:07,622 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:09:07,632 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:09:07,647 - INFO : This product is licensed to 
2021-07-25 17:09:07,647 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:09:07,656 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:09:07,656 - DEBUG : Binding Python functions to Excel
2021-07-25 17:09:07,656 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:09:07,656 - DEBUG :     - pyxll_version
2021-07-25 17:09:07,656 - DEBUG :     - python_version
2021-07-25 17:09:07,656 - DEBUG :     - win32api_is_installed
2021-07-25 17:09:07,656 - DEBUG :     - win32com_is_installed
2021-07-25 17:09:07,656 - DEBUG :     - numpy_is_installed
2021-07-25 17:09:07,656 - DEBUG :     - pyxll_logfile
2021-07-25 17:09:07,656 - DEBUG :     - get_formula
2021-07-25 17:09:07,656 - DEBUG :     - get_array_formula
2021-07-25 17:09:07,656 - DEBUG :     - get_last_error
2021-07-25 17:09:07,656 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:09:07,656 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:09:07,656 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:09:07,656 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:09:07,656 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:09:07,656 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:09:07,656 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:09:07,656 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:09:07,656 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:09:07,656 - DEBUG :     - xl_cell_example
2021-07-25 17:09:07,656 - DEBUG :     - recalc_on_open_test
2021-07-25 17:09:07,656 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:09:07,660 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:09:07,660 - DEBUG :     - hello
2021-07-25 17:09:07,660 - DEBUG :     - one_cell_one_sim
2021-07-25 17:09:07,660 - DEBUG :     - one_row_one_sim
2021-07-25 17:09:07,673 - DEBUG : Adding menus to Excel:
2021-07-25 17:09:07,673 - DEBUG :   - PyXLL
2021-07-25 17:09:07,673 - DEBUG :     - Reload PyXLL
2021-07-25 17:09:07,673 - DEBUG :     - Another example menu item
2021-07-25 17:09:07,673 - DEBUG :     - More Examples
2021-07-25 17:09:07,673 - DEBUG :       - Click me
2021-07-25 17:09:07,673 - DEBUG :       - Unicode Test
2021-07-25 17:09:07,673 - DEBUG :     - Open log file
2021-07-25 17:09:07,673 - DEBUG :     - Attach To VS Code
2021-07-25 17:09:07,673 - DEBUG :     - Custom Task Panes
2021-07-25 17:09:07,673 - DEBUG :       - Qt
2021-07-25 17:09:07,673 - DEBUG :       - Tk
2021-07-25 17:09:07,673 - DEBUG :       - Wx
2021-07-25 17:09:07,673 - DEBUG :     - Example Menu Item 1
2021-07-25 17:09:07,673 - DEBUG :     - Example Tk CTP
2021-07-25 17:09:07,673 - DEBUG :     - Show last error
2021-07-25 17:09:07,673 - DEBUG :     - About PyXLL...
2021-07-25 17:09:07,673 - DEBUG :   - PyXLL example menu
2021-07-25 17:09:07,673 - DEBUG :     - Click me
2021-07-25 17:09:07,755 - DEBUG : Finished binding Python functions
2021-07-25 17:09:07,755 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:09:07,755 - DEBUG : pyxll._post_open complete.
2021-07-25 17:09:07,772 - DEBUG : PyXLL initialization complete.
2021-07-25 17:09:08,143 - DEBUG : Error checking license server.
2021-07-25 17:09:08,143 - DEBUG : Response code 0.
2021-07-25 17:09:08,143 - DEBUG : Error getting returned document
2021-07-25 17:09:08,143 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:09:13,542 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:09:13,542 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:09:13,566 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:09:13,625 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:10:25,039 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:10:55,261 - ERROR : Traceback (most recent call last):
2021-07-25 17:10:55,261 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 126, in advanced_simulation_cell_wrapper
2021-07-25 17:10:55,261 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:10:55,261 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 120, in advanced_simulation_cell
2021-07-25 17:10:55,264 - ERROR :     result = parser.parse(formula).evaluate(variable_dict)
2021-07-25 17:10:55,264 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:10:55,264 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:10:55,265 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:10:55,265 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:10:55,266 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet2C3*Sheet2E4+Sheet2___D6*Sheet2___E4
2021-07-25 17:15:20,568 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-25 17:15:20,577 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:15:20,577 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:15:20,577 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:15:20,577 - DEBUG : -------- PyXLL config --------
2021-07-25 17:15:20,577 - DEBUG : [LOG]
2021-07-25 17:15:20,577 - DEBUG : encoding = utf-8
2021-07-25 17:15:20,577 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:15:20,577 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:15:20,577 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:15:20,578 - DEBUG : verbosity = debug
2021-07-25 17:15:20,578 - DEBUG : 
2021-07-25 17:15:20,578 - DEBUG : [PYTHON]
2021-07-25 17:15:20,578 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:15:20,578 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:15:20,578 - DEBUG : 
2021-07-25 17:15:20,578 - DEBUG : [PYXLL]
2021-07-25 17:15:20,578 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:15:20,578 - DEBUG : developer_mode = 1
2021-07-25 17:15:20,578 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:15:20,578 - DEBUG : modules = 
2021-07-25 17:15:20,578 - DEBUG :     misc
2021-07-25 17:15:20,578 - DEBUG :     worksheetfuncs
2021-07-25 17:15:20,578 - DEBUG :     menus
2021-07-25 17:15:20,578 - DEBUG :     callbacks
2021-07-25 17:15:20,578 - DEBUG :     custom_task_panes
2021-07-25 17:15:20,578 - DEBUG :     test
2021-07-25 17:15:20,578 - DEBUG :     ribbon_functions
2021-07-25 17:15:20,578 - DEBUG :     debugging
2021-07-25 17:15:20,578 - DEBUG :     meta_variables
2021-07-25 17:15:20,578 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:15:20,578 - DEBUG : ------------------------------
2021-07-25 17:15:20,578 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:15:20,579 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:15:20,579 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:15:20,583 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:15:20,584 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:15:20,586 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:15:20,586 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 17:15:20,659 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 17:15:20,659 - DEBUG : Reloading misc
2021-07-25 17:15:20,659 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:15:20,675 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:15:20,676 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:15:20,676 - DEBUG : Reloaded misc
2021-07-25 17:15:20,676 - DEBUG : Reloading worksheetfuncs
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:15:20,677 - DEBUG : Reloaded worksheetfuncs
2021-07-25 17:15:20,677 - DEBUG : Reloading menus
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:15:20,677 - DEBUG : Reloaded menus
2021-07-25 17:15:20,677 - DEBUG : Reloading callbacks
2021-07-25 17:15:20,677 - DEBUG : Reloaded callbacks
2021-07-25 17:15:20,677 - DEBUG : Reloading custom_task_panes
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:15:20,677 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:15:20,677 - DEBUG : Reloaded custom_task_panes
2021-07-25 17:15:20,677 - DEBUG : Reloading test
2021-07-25 17:15:20,677 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:15:20,677 - DEBUG : Reloaded test
2021-07-25 17:15:20,677 - DEBUG : Reloading meta_variables
2021-07-25 17:15:20,686 - DEBUG : Reloaded meta_variables
2021-07-25 17:15:20,686 - DEBUG : Reloading dependency error_functions
2021-07-25 17:15:20,686 - DEBUG : Reloaded dependency error_functions
2021-07-25 17:15:20,686 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 17:15:20,688 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 17:15:20,688 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 17:15:20,688 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 17:15:20,688 - DEBUG : Reloading dependency examples
2021-07-25 17:15:20,688 - DEBUG : Reloaded dependency examples
2021-07-25 17:15:20,688 - DEBUG : Reloading ribbon_functions
2021-07-25 17:15:20,688 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:15:20,688 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022ED2DFD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022ED2E54D30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022ED3EBDE80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022ED2E65250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022ED2DFD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022ED2E54D30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022ED3EBDE80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022ED2E65250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:15:20,688 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:15:20,688 - DEBUG : Reloaded ribbon_functions
2021-07-25 17:15:20,688 - DEBUG : Reloading debugging
2021-07-25 17:15:20,688 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:15:20,688 - DEBUG : Reloaded debugging
2021-07-25 17:15:20,751 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:15:20,761 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:15:20,769 - INFO : This product is licensed to 
2021-07-25 17:15:20,769 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:15:20,782 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:15:20,782 - DEBUG : Binding Python functions to Excel
2021-07-25 17:15:20,782 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:15:20,782 - DEBUG :     - pyxll_version
2021-07-25 17:15:20,782 - DEBUG :     - python_version
2021-07-25 17:15:20,782 - DEBUG :     - win32api_is_installed
2021-07-25 17:15:20,782 - DEBUG :     - win32com_is_installed
2021-07-25 17:15:20,782 - DEBUG :     - numpy_is_installed
2021-07-25 17:15:20,782 - DEBUG :     - pyxll_logfile
2021-07-25 17:15:20,782 - DEBUG :     - get_formula
2021-07-25 17:15:20,782 - DEBUG :     - get_array_formula
2021-07-25 17:15:20,782 - DEBUG :     - get_last_error
2021-07-25 17:15:20,782 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:15:20,783 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:15:20,783 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:15:20,783 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:15:20,783 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:15:20,783 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:15:20,783 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:15:20,783 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:15:20,783 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:15:20,783 - DEBUG :     - xl_cell_example
2021-07-25 17:15:20,783 - DEBUG :     - recalc_on_open_test
2021-07-25 17:15:20,783 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:15:20,783 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:15:20,783 - DEBUG :     - hello
2021-07-25 17:15:20,783 - DEBUG :     - one_cell_one_sim
2021-07-25 17:15:20,783 - DEBUG :     - one_row_one_sim
2021-07-25 17:15:20,792 - DEBUG : Adding menus to Excel:
2021-07-25 17:15:20,792 - DEBUG :   - PyXLL
2021-07-25 17:15:20,792 - DEBUG :     - Reload PyXLL
2021-07-25 17:15:20,792 - DEBUG :     - Another example menu item
2021-07-25 17:15:20,792 - DEBUG :     - More Examples
2021-07-25 17:15:20,792 - DEBUG :       - Click me
2021-07-25 17:15:20,792 - DEBUG :       - Unicode Test
2021-07-25 17:15:20,792 - DEBUG :     - Open log file
2021-07-25 17:15:20,792 - DEBUG :     - Attach To VS Code
2021-07-25 17:15:20,792 - DEBUG :     - Custom Task Panes
2021-07-25 17:15:20,792 - DEBUG :       - Qt
2021-07-25 17:15:20,792 - DEBUG :       - Tk
2021-07-25 17:15:20,792 - DEBUG :       - Wx
2021-07-25 17:15:20,792 - DEBUG :     - Example Menu Item 1
2021-07-25 17:15:20,792 - DEBUG :     - Example Tk CTP
2021-07-25 17:15:20,792 - DEBUG :     - Show last error
2021-07-25 17:15:20,792 - DEBUG :     - About PyXLL...
2021-07-25 17:15:20,792 - DEBUG :   - PyXLL example menu
2021-07-25 17:15:20,792 - DEBUG :     - Click me
2021-07-25 17:15:20,804 - DEBUG : Finished binding Python functions
2021-07-25 17:15:20,804 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 17:15:21,494 - DEBUG : pyxll._post_open complete.
2021-07-25 17:15:21,495 - DEBUG : PyXLL initialization complete.
2021-07-25 17:15:21,499 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:15:21,499 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:15:21,505 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:15:21,615 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:15:21,625 - DEBUG : Error checking license server.
2021-07-25 17:15:21,625 - DEBUG : Response code 0.
2021-07-25 17:15:21,625 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:15:23,190 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:15:27,457 - ERROR : Traceback (most recent call last):
2021-07-25 17:15:27,458 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 126, in advanced_simulation_cell_wrapper
2021-07-25 17:15:27,459 - ERROR :     
2021-07-25 17:15:27,459 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 120, in advanced_simulation_cell
2021-07-25 17:15:27,460 - ERROR :     x = x.group()
2021-07-25 17:15:27,460 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:15:27,461 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:15:27,461 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:15:27,462 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:15:27,462 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet2C3*Sheet2E4+Sheet2___D6*Sheet2___E4
2021-07-25 17:15:28,079 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:15:28,079 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:15:28,080 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:15:28,080 - DEBUG : PyXLL Python module closed.
2021-07-25 17:15:32,082 - DEBUG : 
Sun Jul 25 17:15:32 2021
---------- PyXLL Stopped ----------
2021-07-25 17:15:34,683 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:15:34,684 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:15:34,684 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:15:34,684 - DEBUG : -------- PyXLL config --------
2021-07-25 17:15:34,684 - DEBUG : [LOG]
2021-07-25 17:15:34,684 - DEBUG : encoding = utf-8
2021-07-25 17:15:34,684 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:15:34,684 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:15:34,684 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:15:34,684 - DEBUG : verbosity = debug
2021-07-25 17:15:34,684 - DEBUG : 
2021-07-25 17:15:34,684 - DEBUG : [PYTHON]
2021-07-25 17:15:34,684 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:15:34,684 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:15:34,685 - DEBUG : 
2021-07-25 17:15:34,685 - DEBUG : [PYXLL]
2021-07-25 17:15:34,685 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:15:34,685 - DEBUG : developer_mode = 1
2021-07-25 17:15:34,685 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:15:34,685 - DEBUG : modules = 
2021-07-25 17:15:34,685 - DEBUG :     misc
2021-07-25 17:15:34,685 - DEBUG :     worksheetfuncs
2021-07-25 17:15:34,685 - DEBUG :     menus
2021-07-25 17:15:34,685 - DEBUG :     callbacks
2021-07-25 17:15:34,685 - DEBUG :     custom_task_panes
2021-07-25 17:15:34,685 - DEBUG :     test
2021-07-25 17:15:34,685 - DEBUG :     ribbon_functions
2021-07-25 17:15:34,685 - DEBUG :     debugging
2021-07-25 17:15:34,685 - DEBUG :     meta_variables
2021-07-25 17:15:34,685 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:15:34,685 - DEBUG : ------------------------------
2021-07-25 17:15:34,687 - DEBUG : Attempting to load python38.dll
2021-07-25 17:15:34,690 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:15:34,691 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:15:34,691 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:16:42,039 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:16:42,040 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:16:42,040 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:16:42,040 - DEBUG : -------- PyXLL config --------
2021-07-25 17:16:42,040 - DEBUG : [LOG]
2021-07-25 17:16:42,040 - DEBUG : encoding = utf-8
2021-07-25 17:16:42,040 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:16:42,040 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:16:42,040 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:16:42,040 - DEBUG : verbosity = debug
2021-07-25 17:16:42,040 - DEBUG : 
2021-07-25 17:16:42,040 - DEBUG : [PYTHON]
2021-07-25 17:16:42,040 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:16:42,040 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:16:42,040 - DEBUG : 
2021-07-25 17:16:42,040 - DEBUG : [PYXLL]
2021-07-25 17:16:42,040 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:16:42,040 - DEBUG : developer_mode = 1
2021-07-25 17:16:42,040 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:16:42,040 - DEBUG : modules = 
2021-07-25 17:16:42,040 - DEBUG :     misc
2021-07-25 17:16:42,040 - DEBUG :     worksheetfuncs
2021-07-25 17:16:42,040 - DEBUG :     menus
2021-07-25 17:16:42,040 - DEBUG :     callbacks
2021-07-25 17:16:42,040 - DEBUG :     custom_task_panes
2021-07-25 17:16:42,040 - DEBUG :     test
2021-07-25 17:16:42,040 - DEBUG :     ribbon_functions
2021-07-25 17:16:42,040 - DEBUG :     debugging
2021-07-25 17:16:42,040 - DEBUG :     meta_variables
2021-07-25 17:16:42,040 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:16:42,040 - DEBUG : ------------------------------
2021-07-25 17:16:42,043 - DEBUG : Attempting to load python38.dll
2021-07-25 17:16:42,046 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:16:42,048 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:16:42,048 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:16:42,176 - DEBUG : Calling Py_Initialize...
2021-07-25 17:16:42,303 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:16:42,304 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:16:42,304 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:16:42,304 - DEBUG : Python is initialized.
2021-07-25 17:16:42,305 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:16:42,309 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:16:42,309 - DEBUG : Looking for module 'site'...
2021-07-25 17:16:42,343 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:16:42,343 - DEBUG : Importing pyxll module
2021-07-25 17:16:42,343 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:16:42,343 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:16:42,343 - DEBUG :   Detected Python3
2021-07-25 17:16:42,383 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:16:42,391 - DEBUG : pyxll module imported
2021-07-25 17:16:42,391 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:16:42,391 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:16:42,391 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:16:42,408 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:16:42,412 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:16:42,674 - DEBUG : Importing misc
2021-07-25 17:16:42,676 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:16:42,676 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:16:42,676 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:16:42,676 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:16:42,677 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:16:42,677 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:16:42,677 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:16:42,678 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:16:42,678 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:16:42,678 - DEBUG : Imported misc
2021-07-25 17:16:42,678 - DEBUG : Importing worksheetfuncs
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:16:42,679 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:16:42,679 - DEBUG : Imported worksheetfuncs
2021-07-25 17:16:42,679 - DEBUG : Importing menus
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:16:42,687 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:16:42,687 - DEBUG : Imported menus
2021-07-25 17:16:42,687 - DEBUG : Importing callbacks
2021-07-25 17:16:42,687 - DEBUG : Imported callbacks
2021-07-25 17:16:42,687 - DEBUG : Importing custom_task_panes
2021-07-25 17:16:42,690 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:16:42,691 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:16:42,691 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:16:42,691 - DEBUG : Imported custom_task_panes
2021-07-25 17:16:42,691 - DEBUG : Importing test
2021-07-25 17:16:42,692 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:16:42,692 - DEBUG : Imported test
2021-07-25 17:16:42,692 - DEBUG : Importing ribbon_functions
2021-07-25 17:16:43,785 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:16:43,801 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:16:43,801 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:16:43,816 - DEBUG : interactive is False
2021-07-25 17:16:43,816 - DEBUG : platform is win32
2021-07-25 17:16:43,816 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_860000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_860000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:16:43,864 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:16:43,865 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:16:44,050 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:16:44,053 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:16:44,053 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A37A3DD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A37A43AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A37B4A6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A37A449250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001A37A3DD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001A37A43AD30>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001A37B4A6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001A37A449250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:16:44,053 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:16:44,053 - DEBUG : Imported ribbon_functions
2021-07-25 17:16:44,053 - DEBUG : Importing debugging
2021-07-25 17:16:45,006 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:16:45,006 - DEBUG : Imported debugging
2021-07-25 17:16:45,007 - DEBUG : Importing meta_variables
2021-07-25 17:16:45,007 - DEBUG : Imported meta_variables
2021-07-25 17:16:45,067 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:16:45,080 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:16:45,106 - INFO : This product is licensed to 
2021-07-25 17:16:45,106 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:16:45,133 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:16:45,133 - DEBUG : Binding Python functions to Excel
2021-07-25 17:16:45,133 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:16:45,133 - DEBUG :     - pyxll_version
2021-07-25 17:16:45,133 - DEBUG :     - python_version
2021-07-25 17:16:45,133 - DEBUG :     - win32api_is_installed
2021-07-25 17:16:45,133 - DEBUG :     - win32com_is_installed
2021-07-25 17:16:45,133 - DEBUG :     - numpy_is_installed
2021-07-25 17:16:45,134 - DEBUG :     - pyxll_logfile
2021-07-25 17:16:45,134 - DEBUG :     - get_formula
2021-07-25 17:16:45,134 - DEBUG :     - get_array_formula
2021-07-25 17:16:45,134 - DEBUG :     - get_last_error
2021-07-25 17:16:45,134 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:16:45,134 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:16:45,134 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:16:45,134 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:16:45,134 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:16:45,135 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:16:45,135 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:16:45,135 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:16:45,135 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:16:45,135 - DEBUG :     - xl_cell_example
2021-07-25 17:16:45,135 - DEBUG :     - recalc_on_open_test
2021-07-25 17:16:45,135 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:16:45,135 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:16:45,135 - DEBUG :     - hello
2021-07-25 17:16:45,135 - DEBUG :     - one_cell_one_sim
2021-07-25 17:16:45,136 - DEBUG :     - one_row_one_sim
2021-07-25 17:16:45,161 - DEBUG : Adding menus to Excel:
2021-07-25 17:16:45,161 - DEBUG :   - PyXLL
2021-07-25 17:16:45,161 - DEBUG :     - Reload PyXLL
2021-07-25 17:16:45,161 - DEBUG :     - Another example menu item
2021-07-25 17:16:45,161 - DEBUG :     - More Examples
2021-07-25 17:16:45,161 - DEBUG :       - Click me
2021-07-25 17:16:45,161 - DEBUG :       - Unicode Test
2021-07-25 17:16:45,161 - DEBUG :     - Open log file
2021-07-25 17:16:45,161 - DEBUG :     - Attach To VS Code
2021-07-25 17:16:45,161 - DEBUG :     - Custom Task Panes
2021-07-25 17:16:45,161 - DEBUG :       - Qt
2021-07-25 17:16:45,161 - DEBUG :       - Tk
2021-07-25 17:16:45,161 - DEBUG :       - Wx
2021-07-25 17:16:45,161 - DEBUG :     - Example Menu Item 1
2021-07-25 17:16:45,161 - DEBUG :     - Example Tk CTP
2021-07-25 17:16:45,161 - DEBUG :     - Show last error
2021-07-25 17:16:45,161 - DEBUG :     - About PyXLL...
2021-07-25 17:16:45,161 - DEBUG :   - PyXLL example menu
2021-07-25 17:16:45,161 - DEBUG :     - Click me
2021-07-25 17:16:45,228 - DEBUG : Finished binding Python functions
2021-07-25 17:16:45,228 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:16:45,228 - DEBUG : pyxll._post_open complete.
2021-07-25 17:16:45,243 - DEBUG : PyXLL initialization complete.
2021-07-25 17:16:45,632 - DEBUG : Error checking license server.
2021-07-25 17:16:45,632 - DEBUG : Response code 0.
2021-07-25 17:16:45,632 - DEBUG : Error getting returned document
2021-07-25 17:16:45,632 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:16:49,024 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:16:49,024 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:16:49,053 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:16:49,121 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:17:01,824 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,824 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,837 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:17:01,839 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,840 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,855 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,856 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,869 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,870 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,870 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,871 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,872 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,873 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,886 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,887 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,888 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:17:01,889 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,890 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,891 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,892 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,900 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,901 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,908 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,909 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,916 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:17:01,917 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:17:01,917 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-25 17:19:11,899 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:19:29,999 - ERROR : Traceback (most recent call last):
2021-07-25 17:19:29,999 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:19:30,000 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:19:30,000 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:19:30,000 - ERROR :     result = parser.parse(formula).evaluate(variable_dict)
2021-07-25 17:19:30,000 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:19:30,000 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:19:30,000 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:19:30,000 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:19:30,005 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet1D3*Sheet3___F3+Sheet3___G3
2021-07-25 17:20:35,620 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:20:36,951 - ERROR : Traceback (most recent call last):
2021-07-25 17:20:36,952 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:20:36,953 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:20:36,954 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:20:36,954 - ERROR :     result = parser.parse(formula).evaluate(variable_dict)
2021-07-25 17:20:36,955 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:20:36,956 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:20:36,956 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:20:36,956 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:20:36,958 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet1D3*Sheet3___F3+Sheet3___G3
2021-07-25 17:20:36,982 - ERROR : std::exception
2021-07-25 17:20:43,011 - ERROR : std::exception
2021-07-25 17:20:49,779 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:20:49,779 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:20:49,780 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:20:49,780 - DEBUG : PyXLL Python module closed.
2021-07-25 17:20:54,590 - DEBUG : 
Sun Jul 25 17:20:54 2021
---------- PyXLL Stopped ----------
2021-07-25 17:20:57,151 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:20:57,151 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:20:57,151 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:20:57,151 - DEBUG : -------- PyXLL config --------
2021-07-25 17:20:57,151 - DEBUG : [LOG]
2021-07-25 17:20:57,151 - DEBUG : encoding = utf-8
2021-07-25 17:20:57,151 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:20:57,151 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:20:57,151 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:20:57,151 - DEBUG : verbosity = debug
2021-07-25 17:20:57,151 - DEBUG : 
2021-07-25 17:20:57,151 - DEBUG : [PYTHON]
2021-07-25 17:20:57,151 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:20:57,151 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:20:57,151 - DEBUG : 
2021-07-25 17:20:57,151 - DEBUG : [PYXLL]
2021-07-25 17:20:57,151 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:20:57,152 - DEBUG : developer_mode = 1
2021-07-25 17:20:57,152 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:20:57,152 - DEBUG : modules = 
2021-07-25 17:20:57,152 - DEBUG :     misc
2021-07-25 17:20:57,152 - DEBUG :     worksheetfuncs
2021-07-25 17:20:57,152 - DEBUG :     menus
2021-07-25 17:20:57,152 - DEBUG :     callbacks
2021-07-25 17:20:57,152 - DEBUG :     custom_task_panes
2021-07-25 17:20:57,152 - DEBUG :     test
2021-07-25 17:20:57,152 - DEBUG :     ribbon_functions
2021-07-25 17:20:57,152 - DEBUG :     debugging
2021-07-25 17:20:57,152 - DEBUG :     meta_variables
2021-07-25 17:20:57,152 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:20:57,152 - DEBUG : ------------------------------
2021-07-25 17:20:57,153 - DEBUG : Attempting to load python38.dll
2021-07-25 17:20:57,155 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:20:57,157 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:20:57,157 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:20:57,281 - DEBUG : Calling Py_Initialize...
2021-07-25 17:20:57,396 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:20:57,397 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:20:57,397 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:20:57,397 - DEBUG : Python is initialized.
2021-07-25 17:20:57,398 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:20:57,399 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:20:57,399 - DEBUG : Looking for module 'site'...
2021-07-25 17:20:57,433 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:20:57,433 - DEBUG : Importing pyxll module
2021-07-25 17:20:57,433 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:20:57,433 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:20:57,433 - DEBUG :   Detected Python3
2021-07-25 17:20:57,478 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:20:57,478 - DEBUG : pyxll module imported
2021-07-25 17:20:57,478 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:20:57,478 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:20:57,478 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:20:57,490 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:20:57,490 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:20:57,733 - DEBUG : Importing misc
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:20:57,734 - DEBUG : Imported misc
2021-07-25 17:20:57,734 - DEBUG : Importing worksheetfuncs
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:20:57,734 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:20:57,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:20:57,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:20:57,739 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:20:57,739 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:20:57,739 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:20:57,740 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:20:57,740 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:20:57,740 - DEBUG : Imported worksheetfuncs
2021-07-25 17:20:57,740 - DEBUG : Importing menus
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:20:57,744 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:20:57,744 - DEBUG : Imported menus
2021-07-25 17:20:57,744 - DEBUG : Importing callbacks
2021-07-25 17:20:57,744 - DEBUG : Imported callbacks
2021-07-25 17:20:57,744 - DEBUG : Importing custom_task_panes
2021-07-25 17:20:57,749 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:20:57,750 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:20:57,750 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:20:57,750 - DEBUG : Imported custom_task_panes
2021-07-25 17:20:57,750 - DEBUG : Importing test
2021-07-25 17:20:57,751 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:20:57,751 - DEBUG : Imported test
2021-07-25 17:20:57,751 - DEBUG : Importing ribbon_functions
2021-07-25 17:20:58,921 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:20:58,938 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:20:58,954 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:20:58,954 - DEBUG : interactive is False
2021-07-25 17:20:58,954 - DEBUG : platform is win32
2021-07-25 17:20:58,954 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_160000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_160000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:20:59,002 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:20:59,006 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:20:59,201 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:20:59,201 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:20:59,201 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000240E9CCD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000240E9D2ADC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000240EAD96E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000240E9D3B250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000240E9CCD400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000240E9D2ADC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000240EAD96E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000240E9D3B250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:20:59,201 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:20:59,201 - DEBUG : Imported ribbon_functions
2021-07-25 17:20:59,206 - DEBUG : Importing debugging
2021-07-25 17:21:00,174 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:21:00,174 - DEBUG : Imported debugging
2021-07-25 17:21:00,174 - DEBUG : Importing meta_variables
2021-07-25 17:21:00,174 - DEBUG : Imported meta_variables
2021-07-25 17:21:00,235 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:21:00,247 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:21:00,266 - INFO : This product is licensed to 
2021-07-25 17:21:00,266 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:21:00,279 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:21:00,279 - DEBUG : Binding Python functions to Excel
2021-07-25 17:21:00,279 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:21:00,279 - DEBUG :     - pyxll_version
2021-07-25 17:21:00,279 - DEBUG :     - python_version
2021-07-25 17:21:00,279 - DEBUG :     - win32api_is_installed
2021-07-25 17:21:00,279 - DEBUG :     - win32com_is_installed
2021-07-25 17:21:00,279 - DEBUG :     - numpy_is_installed
2021-07-25 17:21:00,279 - DEBUG :     - pyxll_logfile
2021-07-25 17:21:00,279 - DEBUG :     - get_formula
2021-07-25 17:21:00,279 - DEBUG :     - get_array_formula
2021-07-25 17:21:00,279 - DEBUG :     - get_last_error
2021-07-25 17:21:00,279 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:21:00,279 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:21:00,279 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:21:00,279 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:21:00,279 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:21:00,279 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:21:00,279 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:21:00,279 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:21:00,279 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:21:00,279 - DEBUG :     - xl_cell_example
2021-07-25 17:21:00,279 - DEBUG :     - recalc_on_open_test
2021-07-25 17:21:00,279 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:21:00,279 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:21:00,279 - DEBUG :     - hello
2021-07-25 17:21:00,279 - DEBUG :     - one_cell_one_sim
2021-07-25 17:21:00,279 - DEBUG :     - one_row_one_sim
2021-07-25 17:21:00,299 - DEBUG : Adding menus to Excel:
2021-07-25 17:21:00,299 - DEBUG :   - PyXLL
2021-07-25 17:21:00,299 - DEBUG :     - Reload PyXLL
2021-07-25 17:21:00,299 - DEBUG :     - Another example menu item
2021-07-25 17:21:00,299 - DEBUG :     - More Examples
2021-07-25 17:21:00,299 - DEBUG :       - Click me
2021-07-25 17:21:00,299 - DEBUG :       - Unicode Test
2021-07-25 17:21:00,299 - DEBUG :     - Open log file
2021-07-25 17:21:00,299 - DEBUG :     - Attach To VS Code
2021-07-25 17:21:00,299 - DEBUG :     - Custom Task Panes
2021-07-25 17:21:00,299 - DEBUG :       - Qt
2021-07-25 17:21:00,299 - DEBUG :       - Tk
2021-07-25 17:21:00,299 - DEBUG :       - Wx
2021-07-25 17:21:00,299 - DEBUG :     - Example Menu Item 1
2021-07-25 17:21:00,299 - DEBUG :     - Example Tk CTP
2021-07-25 17:21:00,299 - DEBUG :     - Show last error
2021-07-25 17:21:00,299 - DEBUG :     - About PyXLL...
2021-07-25 17:21:00,299 - DEBUG :   - PyXLL example menu
2021-07-25 17:21:00,299 - DEBUG :     - Click me
2021-07-25 17:21:00,345 - DEBUG : Finished binding Python functions
2021-07-25 17:21:00,345 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:21:00,345 - DEBUG : pyxll._post_open complete.
2021-07-25 17:21:00,360 - DEBUG : PyXLL initialization complete.
2021-07-25 17:21:00,744 - DEBUG : Error checking license server.
2021-07-25 17:21:00,744 - DEBUG : Response code 0.
2021-07-25 17:21:00,744 - DEBUG : Error getting returned document
2021-07-25 17:21:00,744 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:21:11,942 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 17:21:23,526 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 17:21:24,987 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:21:24,987 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:21:25,011 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:21:25,068 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:22:27,585 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:22:33,267 - ERROR : Traceback (most recent call last):
2021-07-25 17:22:33,267 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:22:33,268 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:22:33,269 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-25 17:22:33,269 - ERROR :     variable_dict[sheet_cell_address] = advanced_simulation_cell(control=control,
2021-07-25 17:22:33,270 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:22:33,270 - ERROR :     result = parser.parse(formula).evaluate(variable_dict)
2021-07-25 17:22:33,270 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 17:22:33,270 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 17:22:33,270 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:22:33,270 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:22:33,270 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 17:30:27,171 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:30:50,974 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:31:07,466 - ERROR : Traceback (most recent call last):
2021-07-25 17:31:07,470 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:31:07,477 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:31:07,477 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:31:07,478 - ERROR :     result = parser.parse(formula).evaluate(variable_dict)
2021-07-25 17:31:07,478 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:31:07,479 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:31:07,479 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:31:07,481 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:31:07,481 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet1___D2*Sheet1___E2+Sheet3___D3+Sheet3___D4
2021-07-25 17:31:16,750 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:31:16,750 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:31:16,753 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:31:16,754 - DEBUG : PyXLL Python module closed.
2021-07-25 17:31:21,637 - DEBUG : 
Sun Jul 25 17:31:21 2021
---------- PyXLL Stopped ----------
2021-07-25 17:34:37,805 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:34:37,805 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:34:37,805 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:34:37,805 - DEBUG : -------- PyXLL config --------
2021-07-25 17:34:37,805 - DEBUG : [LOG]
2021-07-25 17:34:37,805 - DEBUG : encoding = utf-8
2021-07-25 17:34:37,805 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:34:37,806 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:34:37,806 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:34:37,806 - DEBUG : verbosity = debug
2021-07-25 17:34:37,806 - DEBUG : 
2021-07-25 17:34:37,806 - DEBUG : [PYTHON]
2021-07-25 17:34:37,806 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:34:37,806 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:34:37,806 - DEBUG : 
2021-07-25 17:34:37,806 - DEBUG : [PYXLL]
2021-07-25 17:34:37,806 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:34:37,806 - DEBUG : developer_mode = 1
2021-07-25 17:34:37,806 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:34:37,806 - DEBUG : modules = 
2021-07-25 17:34:37,806 - DEBUG :     misc
2021-07-25 17:34:37,806 - DEBUG :     worksheetfuncs
2021-07-25 17:34:37,806 - DEBUG :     menus
2021-07-25 17:34:37,806 - DEBUG :     callbacks
2021-07-25 17:34:37,806 - DEBUG :     custom_task_panes
2021-07-25 17:34:37,806 - DEBUG :     test
2021-07-25 17:34:37,806 - DEBUG :     ribbon_functions
2021-07-25 17:34:37,806 - DEBUG :     debugging
2021-07-25 17:34:37,806 - DEBUG :     meta_variables
2021-07-25 17:34:37,806 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:34:37,806 - DEBUG : ------------------------------
2021-07-25 17:34:37,809 - DEBUG : Attempting to load python38.dll
2021-07-25 17:34:37,812 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:34:37,813 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:34:37,813 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:34:37,941 - DEBUG : Calling Py_Initialize...
2021-07-25 17:34:38,065 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:34:38,065 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:34:38,066 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:34:38,066 - DEBUG : Python is initialized.
2021-07-25 17:34:38,067 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:34:38,070 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:34:38,070 - DEBUG : Looking for module 'site'...
2021-07-25 17:34:38,104 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:34:38,104 - DEBUG : Importing pyxll module
2021-07-25 17:34:38,104 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:34:38,104 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:34:38,104 - DEBUG :   Detected Python3
2021-07-25 17:34:38,156 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:34:38,156 - DEBUG : pyxll module imported
2021-07-25 17:34:38,156 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:34:38,156 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:34:38,156 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:34:38,167 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:34:38,168 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:34:38,414 - DEBUG : Importing misc
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:34:38,415 - DEBUG : Imported misc
2021-07-25 17:34:38,415 - DEBUG : Importing worksheetfuncs
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:34:38,415 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:34:38,415 - DEBUG : Imported worksheetfuncs
2021-07-25 17:34:38,415 - DEBUG : Importing menus
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:34:38,425 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:34:38,425 - DEBUG : Imported menus
2021-07-25 17:34:38,425 - DEBUG : Importing callbacks
2021-07-25 17:34:38,425 - DEBUG : Imported callbacks
2021-07-25 17:34:38,425 - DEBUG : Importing custom_task_panes
2021-07-25 17:34:38,429 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:34:38,429 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:34:38,429 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:34:38,429 - DEBUG : Imported custom_task_panes
2021-07-25 17:34:38,429 - DEBUG : Importing test
2021-07-25 17:34:38,430 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:34:38,430 - DEBUG : Imported test
2021-07-25 17:34:38,430 - DEBUG : Importing ribbon_functions
2021-07-25 17:34:39,549 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:34:39,573 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:34:39,581 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:34:39,581 - DEBUG : interactive is False
2021-07-25 17:34:39,581 - DEBUG : platform is win32
2021-07-25 17:34:39,581 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_9f0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_9f0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:34:39,623 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:34:39,623 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:34:39,832 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:34:39,837 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:34:39,838 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000145FC55D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000145FC5B9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000145FD626E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000145FC5C0250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x00000145FC55D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x00000145FC5B9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x00000145FD626E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x00000145FC5C0250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:34:39,839 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:34:39,839 - DEBUG : Imported ribbon_functions
2021-07-25 17:34:39,839 - DEBUG : Importing debugging
2021-07-25 17:34:40,783 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:34:40,783 - DEBUG : Imported debugging
2021-07-25 17:34:40,783 - DEBUG : Importing meta_variables
2021-07-25 17:34:40,783 - DEBUG : Imported meta_variables
2021-07-25 17:34:40,848 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:34:40,859 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:34:40,878 - INFO : This product is licensed to 
2021-07-25 17:34:40,878 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:34:40,890 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:34:40,890 - DEBUG : Binding Python functions to Excel
2021-07-25 17:34:40,890 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:34:40,890 - DEBUG :     - pyxll_version
2021-07-25 17:34:40,890 - DEBUG :     - python_version
2021-07-25 17:34:40,890 - DEBUG :     - win32api_is_installed
2021-07-25 17:34:40,890 - DEBUG :     - win32com_is_installed
2021-07-25 17:34:40,890 - DEBUG :     - numpy_is_installed
2021-07-25 17:34:40,890 - DEBUG :     - pyxll_logfile
2021-07-25 17:34:40,890 - DEBUG :     - get_formula
2021-07-25 17:34:40,890 - DEBUG :     - get_array_formula
2021-07-25 17:34:40,890 - DEBUG :     - get_last_error
2021-07-25 17:34:40,890 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:34:40,890 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:34:40,890 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:34:40,890 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:34:40,890 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:34:40,890 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:34:40,890 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:34:40,890 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:34:40,890 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:34:40,890 - DEBUG :     - xl_cell_example
2021-07-25 17:34:40,890 - DEBUG :     - recalc_on_open_test
2021-07-25 17:34:40,890 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:34:40,890 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:34:40,890 - DEBUG :     - hello
2021-07-25 17:34:40,890 - DEBUG :     - one_cell_one_sim
2021-07-25 17:34:40,890 - DEBUG :     - one_row_one_sim
2021-07-25 17:34:40,909 - DEBUG : Adding menus to Excel:
2021-07-25 17:34:40,909 - DEBUG :   - PyXLL
2021-07-25 17:34:40,909 - DEBUG :     - Reload PyXLL
2021-07-25 17:34:40,909 - DEBUG :     - Another example menu item
2021-07-25 17:34:40,909 - DEBUG :     - More Examples
2021-07-25 17:34:40,909 - DEBUG :       - Click me
2021-07-25 17:34:40,909 - DEBUG :       - Unicode Test
2021-07-25 17:34:40,909 - DEBUG :     - Open log file
2021-07-25 17:34:40,909 - DEBUG :     - Attach To VS Code
2021-07-25 17:34:40,909 - DEBUG :     - Custom Task Panes
2021-07-25 17:34:40,909 - DEBUG :       - Qt
2021-07-25 17:34:40,909 - DEBUG :       - Tk
2021-07-25 17:34:40,909 - DEBUG :       - Wx
2021-07-25 17:34:40,909 - DEBUG :     - Example Menu Item 1
2021-07-25 17:34:40,909 - DEBUG :     - Example Tk CTP
2021-07-25 17:34:40,909 - DEBUG :     - Show last error
2021-07-25 17:34:40,909 - DEBUG :     - About PyXLL...
2021-07-25 17:34:40,909 - DEBUG :   - PyXLL example menu
2021-07-25 17:34:40,909 - DEBUG :     - Click me
2021-07-25 17:34:40,997 - DEBUG : Finished binding Python functions
2021-07-25 17:34:40,997 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:34:40,997 - DEBUG : pyxll._post_open complete.
2021-07-25 17:34:41,019 - DEBUG : PyXLL initialization complete.
2021-07-25 17:34:41,405 - DEBUG : Error checking license server.
2021-07-25 17:34:41,405 - DEBUG : Response code 0.
2021-07-25 17:34:41,405 - DEBUG : Error getting returned document
2021-07-25 17:34:41,405 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:34:46,023 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:34:46,023 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:34:46,043 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:34:46,104 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:35:45,383 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:36:26,532 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:39:35,868 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:39:45,085 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:39:45,085 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:39:45,085 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:39:45,085 - DEBUG : PyXLL Python module closed.
2021-07-25 17:39:49,592 - DEBUG : 
Sun Jul 25 17:39:49 2021
---------- PyXLL Stopped ----------
2021-07-25 17:39:51,034 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:39:51,034 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:39:51,035 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:39:51,035 - DEBUG : -------- PyXLL config --------
2021-07-25 17:39:51,035 - DEBUG : [LOG]
2021-07-25 17:39:51,035 - DEBUG : encoding = utf-8
2021-07-25 17:39:51,035 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:39:51,035 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:39:51,035 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:39:51,035 - DEBUG : verbosity = debug
2021-07-25 17:39:51,035 - DEBUG : 
2021-07-25 17:39:51,035 - DEBUG : [PYTHON]
2021-07-25 17:39:51,035 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:39:51,035 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:39:51,035 - DEBUG : 
2021-07-25 17:39:51,035 - DEBUG : [PYXLL]
2021-07-25 17:39:51,035 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:39:51,035 - DEBUG : developer_mode = 1
2021-07-25 17:39:51,035 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:39:51,035 - DEBUG : modules = 
2021-07-25 17:39:51,035 - DEBUG :     misc
2021-07-25 17:39:51,035 - DEBUG :     worksheetfuncs
2021-07-25 17:39:51,035 - DEBUG :     menus
2021-07-25 17:39:51,035 - DEBUG :     callbacks
2021-07-25 17:39:51,035 - DEBUG :     custom_task_panes
2021-07-25 17:39:51,035 - DEBUG :     test
2021-07-25 17:39:51,035 - DEBUG :     ribbon_functions
2021-07-25 17:39:51,035 - DEBUG :     debugging
2021-07-25 17:39:51,035 - DEBUG :     meta_variables
2021-07-25 17:39:51,035 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:39:51,036 - DEBUG : ------------------------------
2021-07-25 17:39:51,037 - DEBUG : Attempting to load python38.dll
2021-07-25 17:39:51,040 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:39:51,042 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:39:51,042 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:39:51,167 - DEBUG : Calling Py_Initialize...
2021-07-25 17:39:51,292 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:39:51,292 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:39:51,292 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:39:51,292 - DEBUG : Python is initialized.
2021-07-25 17:39:51,294 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:39:51,295 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:39:51,295 - DEBUG : Looking for module 'site'...
2021-07-25 17:39:51,323 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:39:51,332 - DEBUG : Importing pyxll module
2021-07-25 17:39:51,332 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:39:51,332 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:39:51,332 - DEBUG :   Detected Python3
2021-07-25 17:39:51,375 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:39:51,375 - DEBUG : pyxll module imported
2021-07-25 17:39:51,375 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:39:51,375 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:39:51,375 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:39:51,386 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:39:51,387 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:39:51,625 - DEBUG : Importing misc
2021-07-25 17:39:51,626 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:39:51,626 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:39:51,626 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:39:51,626 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:39:51,627 - DEBUG : Imported misc
2021-07-25 17:39:51,627 - DEBUG : Importing worksheetfuncs
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:39:51,627 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:39:51,627 - DEBUG : Imported worksheetfuncs
2021-07-25 17:39:51,627 - DEBUG : Importing menus
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:39:51,637 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:39:51,637 - DEBUG : Imported menus
2021-07-25 17:39:51,637 - DEBUG : Importing callbacks
2021-07-25 17:39:51,637 - DEBUG : Imported callbacks
2021-07-25 17:39:51,637 - DEBUG : Importing custom_task_panes
2021-07-25 17:39:51,640 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:39:51,640 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:39:51,640 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:39:51,640 - DEBUG : Imported custom_task_panes
2021-07-25 17:39:51,640 - DEBUG : Importing test
2021-07-25 17:39:51,641 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:39:51,641 - DEBUG : Imported test
2021-07-25 17:39:51,641 - DEBUG : Importing ribbon_functions
2021-07-25 17:39:52,749 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:39:52,772 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:39:52,772 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:39:52,772 - DEBUG : interactive is False
2021-07-25 17:39:52,772 - DEBUG : platform is win32
2021-07-25 17:39:52,772 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_890000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_890000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:39:52,820 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:39:52,820 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:39:53,016 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:39:53,016 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:39:53,016 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A5540D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A55469DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A564D6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A55475250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A5540D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A55469DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A564D6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A55475250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:39:53,016 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:39:53,016 - DEBUG : Imported ribbon_functions
2021-07-25 17:39:53,016 - DEBUG : Importing debugging
2021-07-25 17:39:53,967 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:39:53,967 - DEBUG : Imported debugging
2021-07-25 17:39:53,967 - DEBUG : Importing meta_variables
2021-07-25 17:39:53,967 - DEBUG : Imported meta_variables
2021-07-25 17:39:54,033 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:39:54,038 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:39:54,060 - INFO : This product is licensed to 
2021-07-25 17:39:54,060 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:39:54,070 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:39:54,070 - DEBUG : Binding Python functions to Excel
2021-07-25 17:39:54,070 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:39:54,070 - DEBUG :     - pyxll_version
2021-07-25 17:39:54,070 - DEBUG :     - python_version
2021-07-25 17:39:54,070 - DEBUG :     - win32api_is_installed
2021-07-25 17:39:54,070 - DEBUG :     - win32com_is_installed
2021-07-25 17:39:54,070 - DEBUG :     - numpy_is_installed
2021-07-25 17:39:54,070 - DEBUG :     - pyxll_logfile
2021-07-25 17:39:54,070 - DEBUG :     - get_formula
2021-07-25 17:39:54,070 - DEBUG :     - get_array_formula
2021-07-25 17:39:54,070 - DEBUG :     - get_last_error
2021-07-25 17:39:54,070 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:39:54,070 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:39:54,070 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:39:54,070 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:39:54,070 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:39:54,070 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:39:54,070 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:39:54,070 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:39:54,070 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:39:54,070 - DEBUG :     - xl_cell_example
2021-07-25 17:39:54,070 - DEBUG :     - recalc_on_open_test
2021-07-25 17:39:54,070 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:39:54,070 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:39:54,070 - DEBUG :     - hello
2021-07-25 17:39:54,070 - DEBUG :     - one_cell_one_sim
2021-07-25 17:39:54,070 - DEBUG :     - one_row_one_sim
2021-07-25 17:39:54,090 - DEBUG : Adding menus to Excel:
2021-07-25 17:39:54,090 - DEBUG :   - PyXLL
2021-07-25 17:39:54,090 - DEBUG :     - Reload PyXLL
2021-07-25 17:39:54,090 - DEBUG :     - Another example menu item
2021-07-25 17:39:54,090 - DEBUG :     - More Examples
2021-07-25 17:39:54,090 - DEBUG :       - Click me
2021-07-25 17:39:54,090 - DEBUG :       - Unicode Test
2021-07-25 17:39:54,090 - DEBUG :     - Open log file
2021-07-25 17:39:54,090 - DEBUG :     - Attach To VS Code
2021-07-25 17:39:54,090 - DEBUG :     - Custom Task Panes
2021-07-25 17:39:54,090 - DEBUG :       - Qt
2021-07-25 17:39:54,090 - DEBUG :       - Tk
2021-07-25 17:39:54,090 - DEBUG :       - Wx
2021-07-25 17:39:54,090 - DEBUG :     - Example Menu Item 1
2021-07-25 17:39:54,090 - DEBUG :     - Example Tk CTP
2021-07-25 17:39:54,090 - DEBUG :     - Show last error
2021-07-25 17:39:54,090 - DEBUG :     - About PyXLL...
2021-07-25 17:39:54,090 - DEBUG :   - PyXLL example menu
2021-07-25 17:39:54,090 - DEBUG :     - Click me
2021-07-25 17:39:54,176 - DEBUG : Finished binding Python functions
2021-07-25 17:39:54,176 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:39:54,176 - DEBUG : pyxll._post_open complete.
2021-07-25 17:39:54,193 - DEBUG : PyXLL initialization complete.
2021-07-25 17:39:54,577 - DEBUG : Error checking license server.
2021-07-25 17:39:54,577 - DEBUG : Response code 0.
2021-07-25 17:39:54,577 - DEBUG : Error getting returned document
2021-07-25 17:39:54,577 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:39:59,447 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:39:59,447 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:39:59,449 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:39:59,450 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:39:59,452 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:39:59,453 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 17:39:59,524 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 17:39:59,524 - DEBUG : Reloading misc
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:39:59,524 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:39:59,524 - DEBUG : Reloaded misc
2021-07-25 17:39:59,524 - DEBUG : Reloading worksheetfuncs
2021-07-25 17:39:59,537 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:39:59,537 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:39:59,537 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:39:59,538 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:39:59,538 - DEBUG : Reloaded worksheetfuncs
2021-07-25 17:39:59,538 - DEBUG : Reloading menus
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:39:59,538 - DEBUG : Reloaded menus
2021-07-25 17:39:59,538 - DEBUG : Reloading callbacks
2021-07-25 17:39:59,538 - DEBUG : Reloaded callbacks
2021-07-25 17:39:59,538 - DEBUG : Reloading custom_task_panes
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:39:59,538 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:39:59,538 - DEBUG : Reloaded custom_task_panes
2021-07-25 17:39:59,538 - DEBUG : Reloading test
2021-07-25 17:39:59,545 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:39:59,545 - DEBUG : Reloaded test
2021-07-25 17:39:59,545 - DEBUG : Reloading meta_variables
2021-07-25 17:39:59,546 - DEBUG : Reloaded meta_variables
2021-07-25 17:39:59,546 - DEBUG : Reloading dependency error_functions
2021-07-25 17:39:59,546 - DEBUG : Reloaded dependency error_functions
2021-07-25 17:39:59,546 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 17:39:59,546 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 17:39:59,546 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 17:39:59,546 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 17:39:59,546 - DEBUG : Reloading dependency examples
2021-07-25 17:39:59,546 - DEBUG : Reloaded dependency examples
2021-07-25 17:39:59,546 - DEBUG : Reloading ribbon_functions
2021-07-25 17:39:59,546 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:39:59,546 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A5540D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A55469DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A564D6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A55475250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A5540D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A55469DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A564D6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A55475250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:39:59,546 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:39:59,546 - DEBUG : Reloaded ribbon_functions
2021-07-25 17:39:59,546 - DEBUG : Reloading debugging
2021-07-25 17:39:59,546 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:39:59,546 - DEBUG : Reloaded debugging
2021-07-25 17:39:59,609 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:39:59,609 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:39:59,625 - INFO : This product is licensed to 
2021-07-25 17:39:59,625 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:39:59,632 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:39:59,632 - DEBUG : Binding Python functions to Excel
2021-07-25 17:39:59,632 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:39:59,632 - DEBUG :     - pyxll_version
2021-07-25 17:39:59,632 - DEBUG :     - python_version
2021-07-25 17:39:59,632 - DEBUG :     - win32api_is_installed
2021-07-25 17:39:59,632 - DEBUG :     - win32com_is_installed
2021-07-25 17:39:59,632 - DEBUG :     - numpy_is_installed
2021-07-25 17:39:59,632 - DEBUG :     - pyxll_logfile
2021-07-25 17:39:59,632 - DEBUG :     - get_formula
2021-07-25 17:39:59,632 - DEBUG :     - get_array_formula
2021-07-25 17:39:59,632 - DEBUG :     - get_last_error
2021-07-25 17:39:59,632 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:39:59,632 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:39:59,632 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:39:59,632 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:39:59,632 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:39:59,632 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:39:59,632 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:39:59,632 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:39:59,632 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:39:59,632 - DEBUG :     - xl_cell_example
2021-07-25 17:39:59,632 - DEBUG :     - recalc_on_open_test
2021-07-25 17:39:59,632 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:39:59,632 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:39:59,632 - DEBUG :     - hello
2021-07-25 17:39:59,632 - DEBUG :     - one_cell_one_sim
2021-07-25 17:39:59,632 - DEBUG :     - one_row_one_sim
2021-07-25 17:39:59,670 - DEBUG : Adding menus to Excel:
2021-07-25 17:39:59,670 - DEBUG :   - PyXLL
2021-07-25 17:39:59,670 - DEBUG :     - Reload PyXLL
2021-07-25 17:39:59,670 - DEBUG :     - Another example menu item
2021-07-25 17:39:59,670 - DEBUG :     - More Examples
2021-07-25 17:39:59,670 - DEBUG :       - Click me
2021-07-25 17:39:59,670 - DEBUG :       - Unicode Test
2021-07-25 17:39:59,670 - DEBUG :     - Open log file
2021-07-25 17:39:59,670 - DEBUG :     - Attach To VS Code
2021-07-25 17:39:59,670 - DEBUG :     - Custom Task Panes
2021-07-25 17:39:59,670 - DEBUG :       - Qt
2021-07-25 17:39:59,670 - DEBUG :       - Tk
2021-07-25 17:39:59,670 - DEBUG :       - Wx
2021-07-25 17:39:59,670 - DEBUG :     - Example Menu Item 1
2021-07-25 17:39:59,670 - DEBUG :     - Example Tk CTP
2021-07-25 17:39:59,670 - DEBUG :     - Show last error
2021-07-25 17:39:59,670 - DEBUG :     - About PyXLL...
2021-07-25 17:39:59,670 - DEBUG :   - PyXLL example menu
2021-07-25 17:39:59,670 - DEBUG :     - Click me
2021-07-25 17:39:59,670 - DEBUG : Finished binding Python functions
2021-07-25 17:39:59,670 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 17:40:00,904 - DEBUG : pyxll._post_open complete.
2021-07-25 17:40:00,926 - DEBUG : PyXLL initialization complete.
2021-07-25 17:40:00,945 - DEBUG : Error checking license server.
2021-07-25 17:40:00,945 - DEBUG : Response code 0.
2021-07-25 17:40:00,945 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:40:08,042 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:40:08,042 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:40:08,060 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:40:08,120 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:40:08,124 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:40:08,124 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:40:08,129 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:40:08,136 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:40:45,992 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:41:04,606 - ERROR : Traceback (most recent call last):
2021-07-25 17:41:04,606 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:41:04,607 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:41:04,607 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:41:04,607 - ERROR :     result = parser.parse(formula).evaluate(variable_dict)
2021-07-25 17:41:04,607 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:41:04,607 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:41:04,607 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:41:04,607 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:41:04,607 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet1___C3*Sheet1___E3+Sheet3___C3
2021-07-25 17:41:38,929 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-25 17:41:38,930 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:41:38,930 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:41:38,930 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:41:38,930 - DEBUG : -------- PyXLL config --------
2021-07-25 17:41:38,930 - DEBUG : [LOG]
2021-07-25 17:41:38,930 - DEBUG : encoding = utf-8
2021-07-25 17:41:38,930 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:41:38,930 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:41:38,930 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:41:38,930 - DEBUG : verbosity = debug
2021-07-25 17:41:38,930 - DEBUG : 
2021-07-25 17:41:38,930 - DEBUG : [PYTHON]
2021-07-25 17:41:38,930 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:41:38,930 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:41:38,930 - DEBUG : 
2021-07-25 17:41:38,930 - DEBUG : [PYXLL]
2021-07-25 17:41:38,930 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:41:38,930 - DEBUG : developer_mode = 1
2021-07-25 17:41:38,930 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:41:38,930 - DEBUG : modules = 
2021-07-25 17:41:38,930 - DEBUG :     misc
2021-07-25 17:41:38,930 - DEBUG :     worksheetfuncs
2021-07-25 17:41:38,930 - DEBUG :     menus
2021-07-25 17:41:38,930 - DEBUG :     callbacks
2021-07-25 17:41:38,930 - DEBUG :     custom_task_panes
2021-07-25 17:41:38,930 - DEBUG :     test
2021-07-25 17:41:38,930 - DEBUG :     ribbon_functions
2021-07-25 17:41:38,930 - DEBUG :     debugging
2021-07-25 17:41:38,930 - DEBUG :     meta_variables
2021-07-25 17:41:38,930 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:41:38,930 - DEBUG : ------------------------------
2021-07-25 17:41:38,930 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:41:38,930 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:41:38,930 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:41:38,930 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:41:38,945 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:41:38,946 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:41:38,947 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 17:41:39,028 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 17:41:39,028 - DEBUG : Reloading misc
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:41:39,028 - DEBUG : Reloaded misc
2021-07-25 17:41:39,028 - DEBUG : Reloading worksheetfuncs
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:41:39,028 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:41:39,028 - DEBUG : Reloaded worksheetfuncs
2021-07-25 17:41:39,028 - DEBUG : Reloading menus
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:41:39,028 - DEBUG : Reloaded menus
2021-07-25 17:41:39,028 - DEBUG : Reloading callbacks
2021-07-25 17:41:39,028 - DEBUG : Reloaded callbacks
2021-07-25 17:41:39,028 - DEBUG : Reloading custom_task_panes
2021-07-25 17:41:39,028 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:41:39,043 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:41:39,043 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:41:39,043 - DEBUG : Reloaded custom_task_panes
2021-07-25 17:41:39,044 - DEBUG : Reloading test
2021-07-25 17:41:39,045 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:41:39,045 - DEBUG : Reloaded test
2021-07-25 17:41:39,045 - DEBUG : Reloading meta_variables
2021-07-25 17:41:39,045 - DEBUG : Reloaded meta_variables
2021-07-25 17:41:39,045 - DEBUG : Reloading dependency error_functions
2021-07-25 17:41:39,045 - DEBUG : Reloaded dependency error_functions
2021-07-25 17:41:39,045 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 17:41:39,045 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 17:41:39,045 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 17:41:39,045 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 17:41:39,045 - DEBUG : Reloading dependency examples
2021-07-25 17:41:39,045 - DEBUG : Reloaded dependency examples
2021-07-25 17:41:39,045 - DEBUG : Reloading ribbon_functions
2021-07-25 17:41:39,045 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:41:39,045 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A5540D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A55469DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A564D6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A55475250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x0000022A5540D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x0000022A55469DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x0000022A564D6E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x0000022A55475250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:41:39,045 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:41:39,045 - DEBUG : Reloaded ribbon_functions
2021-07-25 17:41:39,045 - DEBUG : Reloading debugging
2021-07-25 17:41:39,045 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:41:39,045 - DEBUG : Reloaded debugging
2021-07-25 17:41:39,111 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:41:39,120 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:41:39,127 - INFO : This product is licensed to 
2021-07-25 17:41:39,127 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:41:39,139 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:41:39,139 - DEBUG : Binding Python functions to Excel
2021-07-25 17:41:39,139 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:41:39,139 - DEBUG :     - pyxll_version
2021-07-25 17:41:39,139 - DEBUG :     - python_version
2021-07-25 17:41:39,139 - DEBUG :     - win32api_is_installed
2021-07-25 17:41:39,139 - DEBUG :     - win32com_is_installed
2021-07-25 17:41:39,139 - DEBUG :     - numpy_is_installed
2021-07-25 17:41:39,139 - DEBUG :     - pyxll_logfile
2021-07-25 17:41:39,139 - DEBUG :     - get_formula
2021-07-25 17:41:39,139 - DEBUG :     - get_array_formula
2021-07-25 17:41:39,139 - DEBUG :     - get_last_error
2021-07-25 17:41:39,139 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:41:39,139 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:41:39,139 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:41:39,139 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:41:39,139 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:41:39,139 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:41:39,139 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:41:39,139 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:41:39,139 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:41:39,139 - DEBUG :     - xl_cell_example
2021-07-25 17:41:39,139 - DEBUG :     - recalc_on_open_test
2021-07-25 17:41:39,139 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:41:39,139 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:41:39,141 - DEBUG :     - hello
2021-07-25 17:41:39,141 - DEBUG :     - one_cell_one_sim
2021-07-25 17:41:39,141 - DEBUG :     - one_row_one_sim
2021-07-25 17:41:39,154 - DEBUG : Adding menus to Excel:
2021-07-25 17:41:39,154 - DEBUG :   - PyXLL
2021-07-25 17:41:39,154 - DEBUG :     - Reload PyXLL
2021-07-25 17:41:39,154 - DEBUG :     - Another example menu item
2021-07-25 17:41:39,154 - DEBUG :     - More Examples
2021-07-25 17:41:39,154 - DEBUG :       - Click me
2021-07-25 17:41:39,154 - DEBUG :       - Unicode Test
2021-07-25 17:41:39,154 - DEBUG :     - Open log file
2021-07-25 17:41:39,154 - DEBUG :     - Attach To VS Code
2021-07-25 17:41:39,154 - DEBUG :     - Custom Task Panes
2021-07-25 17:41:39,154 - DEBUG :       - Qt
2021-07-25 17:41:39,154 - DEBUG :       - Tk
2021-07-25 17:41:39,154 - DEBUG :       - Wx
2021-07-25 17:41:39,154 - DEBUG :     - Example Menu Item 1
2021-07-25 17:41:39,154 - DEBUG :     - Example Tk CTP
2021-07-25 17:41:39,154 - DEBUG :     - Show last error
2021-07-25 17:41:39,154 - DEBUG :     - About PyXLL...
2021-07-25 17:41:39,154 - DEBUG :   - PyXLL example menu
2021-07-25 17:41:39,154 - DEBUG :     - Click me
2021-07-25 17:41:39,162 - DEBUG : Finished binding Python functions
2021-07-25 17:41:39,162 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 17:41:40,029 - DEBUG : pyxll._post_open complete.
2021-07-25 17:41:40,030 - DEBUG : PyXLL initialization complete.
2021-07-25 17:41:40,034 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:41:40,034 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:41:40,040 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:41:40,152 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:41:40,163 - DEBUG : Error checking license server.
2021-07-25 17:41:40,163 - DEBUG : Response code 0.
2021-07-25 17:41:40,163 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:41:41,807 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:41:45,478 - ERROR : Traceback (most recent call last):
2021-07-25 17:41:45,478 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:41:45,479 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:41:45,479 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:41:45,479 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 17:41:45,480 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 543, in parse
2021-07-25 17:41:45,480 - ERROR :     self.error_parsing(self.pos, 'unknown character')
2021-07-25 17:41:45,480 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:41:45,481 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:41:45,481 - ERROR : Exception: parse error [column 0]: unknown character, expression: =Sheet1___C3*Sheet1___E3+Sheet3___C3
2021-07-25 17:41:46,101 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:41:46,101 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:41:46,101 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:41:46,101 - DEBUG : PyXLL Python module closed.
2021-07-25 17:41:50,209 - DEBUG : 
Sun Jul 25 17:41:50 2021
---------- PyXLL Stopped ----------
2021-07-25 17:41:51,355 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:41:51,355 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:41:51,355 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:41:51,356 - DEBUG : -------- PyXLL config --------
2021-07-25 17:41:51,356 - DEBUG : [LOG]
2021-07-25 17:41:51,356 - DEBUG : encoding = utf-8
2021-07-25 17:41:51,356 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:41:51,356 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:41:51,356 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:41:51,356 - DEBUG : verbosity = debug
2021-07-25 17:41:51,356 - DEBUG : 
2021-07-25 17:41:51,356 - DEBUG : [PYTHON]
2021-07-25 17:41:51,356 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:41:51,356 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:41:51,356 - DEBUG : 
2021-07-25 17:41:51,356 - DEBUG : [PYXLL]
2021-07-25 17:41:51,356 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:41:51,356 - DEBUG : developer_mode = 1
2021-07-25 17:41:51,356 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:41:51,356 - DEBUG : modules = 
2021-07-25 17:41:51,356 - DEBUG :     misc
2021-07-25 17:41:51,356 - DEBUG :     worksheetfuncs
2021-07-25 17:41:51,356 - DEBUG :     menus
2021-07-25 17:41:51,356 - DEBUG :     callbacks
2021-07-25 17:41:51,356 - DEBUG :     custom_task_panes
2021-07-25 17:41:51,356 - DEBUG :     test
2021-07-25 17:41:51,356 - DEBUG :     ribbon_functions
2021-07-25 17:41:51,356 - DEBUG :     debugging
2021-07-25 17:41:51,356 - DEBUG :     meta_variables
2021-07-25 17:41:51,356 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:41:51,356 - DEBUG : ------------------------------
2021-07-25 17:41:51,359 - DEBUG : Attempting to load python38.dll
2021-07-25 17:41:51,362 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:41:51,364 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:41:51,364 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:41:51,494 - DEBUG : Calling Py_Initialize...
2021-07-25 17:41:51,615 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:41:51,615 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:41:51,615 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:41:51,615 - DEBUG : Python is initialized.
2021-07-25 17:41:51,616 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:41:51,618 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:41:51,618 - DEBUG : Looking for module 'site'...
2021-07-25 17:41:51,653 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:41:51,653 - DEBUG : Importing pyxll module
2021-07-25 17:41:51,653 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:41:51,653 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:41:51,653 - DEBUG :   Detected Python3
2021-07-25 17:41:51,694 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:41:51,705 - DEBUG : pyxll module imported
2021-07-25 17:41:51,705 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:41:51,705 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:41:51,706 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:41:51,709 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:41:51,709 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:41:51,979 - DEBUG : Importing misc
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:41:51,980 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:41:51,984 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:41:51,984 - DEBUG : Imported misc
2021-07-25 17:41:51,984 - DEBUG : Importing worksheetfuncs
2021-07-25 17:41:51,985 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:41:51,985 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:41:51,986 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:41:51,986 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:41:51,986 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:41:51,987 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:41:51,987 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:41:51,987 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:41:51,987 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:41:51,988 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:41:51,988 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:41:51,988 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:41:51,988 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:41:51,988 - DEBUG : Imported worksheetfuncs
2021-07-25 17:41:51,988 - DEBUG : Importing menus
2021-07-25 17:41:51,995 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:41:51,995 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:41:51,996 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:41:51,996 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:41:51,996 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:41:51,996 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:41:51,996 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:41:51,996 - DEBUG : Imported menus
2021-07-25 17:41:51,996 - DEBUG : Importing callbacks
2021-07-25 17:41:51,997 - DEBUG : Imported callbacks
2021-07-25 17:41:51,997 - DEBUG : Importing custom_task_panes
2021-07-25 17:41:51,998 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:41:51,998 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:41:51,998 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:41:51,998 - DEBUG : Imported custom_task_panes
2021-07-25 17:41:51,998 - DEBUG : Importing test
2021-07-25 17:41:52,000 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:41:52,000 - DEBUG : Imported test
2021-07-25 17:41:52,000 - DEBUG : Importing ribbon_functions
2021-07-25 17:41:53,121 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:41:53,148 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:41:53,156 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:41:53,156 - DEBUG : interactive is False
2021-07-25 17:41:53,156 - DEBUG : platform is win32
2021-07-25 17:41:53,156 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_720000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_720000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:41:53,208 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:41:53,212 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:41:53,411 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:41:53,416 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:41:53,416 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F6CE28F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F6CE2E9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F6CF356E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F6CE2F9250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F6CE28F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F6CE2E9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F6CF356E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F6CE2F9250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:41:53,416 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:41:53,416 - DEBUG : Imported ribbon_functions
2021-07-25 17:41:53,416 - DEBUG : Importing debugging
2021-07-25 17:41:54,429 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:41:54,429 - DEBUG : Imported debugging
2021-07-25 17:41:54,429 - DEBUG : Importing meta_variables
2021-07-25 17:41:54,429 - DEBUG : Imported meta_variables
2021-07-25 17:41:54,489 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:41:54,499 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:41:54,518 - INFO : This product is licensed to 
2021-07-25 17:41:54,518 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:41:54,532 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:41:54,532 - DEBUG : Binding Python functions to Excel
2021-07-25 17:41:54,533 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:41:54,533 - DEBUG :     - pyxll_version
2021-07-25 17:41:54,533 - DEBUG :     - python_version
2021-07-25 17:41:54,533 - DEBUG :     - win32api_is_installed
2021-07-25 17:41:54,533 - DEBUG :     - win32com_is_installed
2021-07-25 17:41:54,533 - DEBUG :     - numpy_is_installed
2021-07-25 17:41:54,533 - DEBUG :     - pyxll_logfile
2021-07-25 17:41:54,533 - DEBUG :     - get_formula
2021-07-25 17:41:54,533 - DEBUG :     - get_array_formula
2021-07-25 17:41:54,533 - DEBUG :     - get_last_error
2021-07-25 17:41:54,533 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:41:54,533 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:41:54,533 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:41:54,533 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:41:54,533 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:41:54,533 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:41:54,533 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:41:54,533 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:41:54,533 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:41:54,533 - DEBUG :     - xl_cell_example
2021-07-25 17:41:54,533 - DEBUG :     - recalc_on_open_test
2021-07-25 17:41:54,533 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:41:54,533 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:41:54,533 - DEBUG :     - hello
2021-07-25 17:41:54,533 - DEBUG :     - one_cell_one_sim
2021-07-25 17:41:54,533 - DEBUG :     - one_row_one_sim
2021-07-25 17:41:54,553 - DEBUG : Adding menus to Excel:
2021-07-25 17:41:54,553 - DEBUG :   - PyXLL
2021-07-25 17:41:54,553 - DEBUG :     - Reload PyXLL
2021-07-25 17:41:54,553 - DEBUG :     - Another example menu item
2021-07-25 17:41:54,553 - DEBUG :     - More Examples
2021-07-25 17:41:54,553 - DEBUG :       - Click me
2021-07-25 17:41:54,553 - DEBUG :       - Unicode Test
2021-07-25 17:41:54,553 - DEBUG :     - Open log file
2021-07-25 17:41:54,553 - DEBUG :     - Attach To VS Code
2021-07-25 17:41:54,553 - DEBUG :     - Custom Task Panes
2021-07-25 17:41:54,553 - DEBUG :       - Qt
2021-07-25 17:41:54,553 - DEBUG :       - Tk
2021-07-25 17:41:54,553 - DEBUG :       - Wx
2021-07-25 17:41:54,553 - DEBUG :     - Example Menu Item 1
2021-07-25 17:41:54,553 - DEBUG :     - Example Tk CTP
2021-07-25 17:41:54,553 - DEBUG :     - Show last error
2021-07-25 17:41:54,553 - DEBUG :     - About PyXLL...
2021-07-25 17:41:54,553 - DEBUG :   - PyXLL example menu
2021-07-25 17:41:54,553 - DEBUG :     - Click me
2021-07-25 17:41:54,610 - DEBUG : Finished binding Python functions
2021-07-25 17:41:54,610 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:41:54,610 - DEBUG : pyxll._post_open complete.
2021-07-25 17:41:54,614 - DEBUG : PyXLL initialization complete.
2021-07-25 17:41:55,011 - DEBUG : Error checking license server.
2021-07-25 17:41:55,011 - DEBUG : Response code 0.
2021-07-25 17:41:55,011 - DEBUG : Error getting returned document
2021-07-25 17:41:55,011 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:42:00,456 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:42:00,456 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:42:00,476 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:42:00,539 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:42:38,571 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-25 17:42:38,571 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,571 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-25 17:42:38,571 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,572 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,573 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-25 17:42:38,574 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 17:42:38,575 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,591 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,607 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,622 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,623 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,639 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,641 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,642 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,649 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,650 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,651 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,652 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,653 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,654 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,655 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,656 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:42:38,658 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:42:38,658 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:42:38,658 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-25 17:44:00,222 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:44:05,305 - ERROR : Traceback (most recent call last):
2021-07-25 17:44:05,306 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:44:05,307 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:44:05,307 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:44:05,307 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 17:44:05,307 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 17:44:05,308 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 17:44:05,308 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:44:05,308 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:44:05,308 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 17:44:55,608 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:45:00,382 - ERROR : Traceback (most recent call last):
2021-07-25 17:45:00,382 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:45:00,383 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:45:00,383 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:45:00,384 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 17:45:00,384 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 17:45:00,385 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 17:45:00,385 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:45:00,386 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:45:00,386 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 17:45:12,238 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:45:13,683 - ERROR : Traceback (most recent call last):
2021-07-25 17:45:13,684 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:45:13,684 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:45:13,684 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-25 17:45:13,685 - ERROR :     variable_dict[sheet_cell_address] = advanced_simulation_cell(control=control,
2021-07-25 17:45:13,685 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:45:13,685 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 17:45:13,685 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 17:45:13,686 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 17:45:13,686 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:45:13,686 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:45:13,687 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 17:48:37,569 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:49:27,412 - DEBUG : Reading config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg'
2021-07-25 17:49:27,414 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:49:27,414 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:49:27,414 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:49:27,414 - DEBUG : -------- PyXLL config --------
2021-07-25 17:49:27,414 - DEBUG : [LOG]
2021-07-25 17:49:27,414 - DEBUG : encoding = utf-8
2021-07-25 17:49:27,414 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:49:27,414 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:49:27,414 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:49:27,414 - DEBUG : verbosity = debug
2021-07-25 17:49:27,414 - DEBUG : 
2021-07-25 17:49:27,414 - DEBUG : [PYTHON]
2021-07-25 17:49:27,414 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:49:27,414 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:49:27,414 - DEBUG : 
2021-07-25 17:49:27,414 - DEBUG : [PYXLL]
2021-07-25 17:49:27,414 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:49:27,414 - DEBUG : developer_mode = 1
2021-07-25 17:49:27,414 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:49:27,414 - DEBUG : modules = 
2021-07-25 17:49:27,414 - DEBUG :     misc
2021-07-25 17:49:27,414 - DEBUG :     worksheetfuncs
2021-07-25 17:49:27,414 - DEBUG :     menus
2021-07-25 17:49:27,414 - DEBUG :     callbacks
2021-07-25 17:49:27,414 - DEBUG :     custom_task_panes
2021-07-25 17:49:27,414 - DEBUG :     test
2021-07-25 17:49:27,414 - DEBUG :     ribbon_functions
2021-07-25 17:49:27,414 - DEBUG :     debugging
2021-07-25 17:49:27,414 - DEBUG :     meta_variables
2021-07-25 17:49:27,414 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:49:27,414 - DEBUG : ------------------------------
2021-07-25 17:49:27,414 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:49:27,418 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:49:27,418 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:49:27,419 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:49:27,419 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:49:27,428 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:49:27,428 - DEBUG : Finding import dependencies for misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,ribbon_functions,debugging,meta_variables
2021-07-25 17:49:27,518 - DEBUG : Found dependencies: misc,worksheetfuncs,menus,callbacks,custom_task_panes,test,meta_variables,error_functions,tkinter_frames,examples.tkinter_frames,examples,ribbon_functions,debugging
2021-07-25 17:49:27,518 - DEBUG : Reloading misc
2021-07-25 17:49:27,534 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:49:27,534 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:49:27,534 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:49:27,534 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:49:27,534 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:49:27,534 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:49:27,542 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:49:27,542 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:49:27,543 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:49:27,543 - DEBUG : Reloaded misc
2021-07-25 17:49:27,543 - DEBUG : Reloading worksheetfuncs
2021-07-25 17:49:27,543 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:49:27,543 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:49:27,547 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:49:27,548 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:49:27,548 - DEBUG : Reloaded worksheetfuncs
2021-07-25 17:49:27,548 - DEBUG : Reloading menus
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:49:27,557 - DEBUG : Reloaded menus
2021-07-25 17:49:27,557 - DEBUG : Reloading callbacks
2021-07-25 17:49:27,557 - DEBUG : Reloaded callbacks
2021-07-25 17:49:27,557 - DEBUG : Reloading custom_task_panes
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:49:27,557 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:49:27,557 - DEBUG : Reloaded custom_task_panes
2021-07-25 17:49:27,557 - DEBUG : Reloading test
2021-07-25 17:49:27,557 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:49:27,557 - DEBUG : Reloaded test
2021-07-25 17:49:27,557 - DEBUG : Reloading meta_variables
2021-07-25 17:49:27,557 - DEBUG : Reloaded meta_variables
2021-07-25 17:49:27,557 - DEBUG : Reloading dependency error_functions
2021-07-25 17:49:27,557 - DEBUG : Reloaded dependency error_functions
2021-07-25 17:49:27,557 - DEBUG : Reloading dependency tkinter_frames
2021-07-25 17:49:27,572 - DEBUG : Reloaded dependency tkinter_frames
2021-07-25 17:49:27,572 - DEBUG : Reloading dependency examples.tkinter_frames
2021-07-25 17:49:27,572 - DEBUG : Reloaded dependency examples.tkinter_frames
2021-07-25 17:49:27,572 - DEBUG : Reloading dependency examples
2021-07-25 17:49:27,572 - DEBUG : Reloaded dependency examples
2021-07-25 17:49:27,572 - DEBUG : Reloading ribbon_functions
2021-07-25 17:49:27,572 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:49:27,572 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F6CE28F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F6CE2E9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F6CF356E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F6CE2F9250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001F6CE28F400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001F6CE2E9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001F6CF356E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001F6CE2F9250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:49:27,572 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:49:27,572 - DEBUG : Reloaded ribbon_functions
2021-07-25 17:49:27,572 - DEBUG : Reloading debugging
2021-07-25 17:49:27,572 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:49:27,572 - DEBUG : Reloaded debugging
2021-07-25 17:49:27,652 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:49:27,669 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:49:27,681 - INFO : This product is licensed to 
2021-07-25 17:49:27,681 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:49:27,689 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:49:27,689 - DEBUG : Binding Python functions to Excel
2021-07-25 17:49:27,689 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:49:27,689 - DEBUG :     - pyxll_version
2021-07-25 17:49:27,689 - DEBUG :     - python_version
2021-07-25 17:49:27,689 - DEBUG :     - win32api_is_installed
2021-07-25 17:49:27,689 - DEBUG :     - win32com_is_installed
2021-07-25 17:49:27,689 - DEBUG :     - numpy_is_installed
2021-07-25 17:49:27,689 - DEBUG :     - pyxll_logfile
2021-07-25 17:49:27,689 - DEBUG :     - get_formula
2021-07-25 17:49:27,689 - DEBUG :     - get_array_formula
2021-07-25 17:49:27,689 - DEBUG :     - get_last_error
2021-07-25 17:49:27,689 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:49:27,689 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:49:27,689 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:49:27,689 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:49:27,689 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:49:27,689 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:49:27,689 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:49:27,689 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:49:27,689 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:49:27,689 - DEBUG :     - xl_cell_example
2021-07-25 17:49:27,689 - DEBUG :     - recalc_on_open_test
2021-07-25 17:49:27,689 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:49:27,689 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:49:27,689 - DEBUG :     - hello
2021-07-25 17:49:27,689 - DEBUG :     - one_cell_one_sim
2021-07-25 17:49:27,689 - DEBUG :     - one_row_one_sim
2021-07-25 17:49:27,722 - DEBUG : Adding menus to Excel:
2021-07-25 17:49:27,722 - DEBUG :   - PyXLL
2021-07-25 17:49:27,722 - DEBUG :     - Reload PyXLL
2021-07-25 17:49:27,722 - DEBUG :     - Another example menu item
2021-07-25 17:49:27,722 - DEBUG :     - More Examples
2021-07-25 17:49:27,722 - DEBUG :       - Click me
2021-07-25 17:49:27,722 - DEBUG :       - Unicode Test
2021-07-25 17:49:27,722 - DEBUG :     - Open log file
2021-07-25 17:49:27,722 - DEBUG :     - Attach To VS Code
2021-07-25 17:49:27,722 - DEBUG :     - Custom Task Panes
2021-07-25 17:49:27,722 - DEBUG :       - Qt
2021-07-25 17:49:27,722 - DEBUG :       - Tk
2021-07-25 17:49:27,722 - DEBUG :       - Wx
2021-07-25 17:49:27,722 - DEBUG :     - Example Menu Item 1
2021-07-25 17:49:27,722 - DEBUG :     - Example Tk CTP
2021-07-25 17:49:27,722 - DEBUG :     - Show last error
2021-07-25 17:49:27,722 - DEBUG :     - About PyXLL...
2021-07-25 17:49:27,722 - DEBUG :   - PyXLL example menu
2021-07-25 17:49:27,722 - DEBUG :     - Click me
2021-07-25 17:49:27,736 - DEBUG : Finished binding Python functions
2021-07-25 17:49:27,736 - DEBUG : Calling on reload callback 'callbacks.on_reload'
2021-07-25 17:49:28,591 - DEBUG : pyxll._post_open complete.
2021-07-25 17:49:28,591 - DEBUG : PyXLL initialization complete.
2021-07-25 17:49:32,310 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:49:33,603 - ERROR : Traceback (most recent call last):
2021-07-25 17:49:33,611 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:49:33,613 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:49:33,614 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:49:33,614 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 17:49:33,615 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 17:49:33,617 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 17:49:33,617 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:49:33,618 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:49:33,619 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 17:49:38,666 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:49:38,667 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:49:38,667 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:49:38,667 - DEBUG : PyXLL Python module closed.
2021-07-25 17:49:43,740 - DEBUG : 
Sun Jul 25 17:49:43 2021
---------- PyXLL Stopped ----------
2021-07-25 17:49:45,938 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:49:45,938 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:49:45,938 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:49:45,938 - DEBUG : -------- PyXLL config --------
2021-07-25 17:49:45,938 - DEBUG : [LOG]
2021-07-25 17:49:45,938 - DEBUG : encoding = utf-8
2021-07-25 17:49:45,938 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:49:45,938 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:49:45,938 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:49:45,938 - DEBUG : verbosity = debug
2021-07-25 17:49:45,938 - DEBUG : 
2021-07-25 17:49:45,938 - DEBUG : [PYTHON]
2021-07-25 17:49:45,938 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:49:45,938 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:49:45,938 - DEBUG : 
2021-07-25 17:49:45,938 - DEBUG : [PYXLL]
2021-07-25 17:49:45,938 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:49:45,938 - DEBUG : developer_mode = 1
2021-07-25 17:49:45,939 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:49:45,939 - DEBUG : modules = 
2021-07-25 17:49:45,939 - DEBUG :     misc
2021-07-25 17:49:45,939 - DEBUG :     worksheetfuncs
2021-07-25 17:49:45,939 - DEBUG :     menus
2021-07-25 17:49:45,939 - DEBUG :     callbacks
2021-07-25 17:49:45,939 - DEBUG :     custom_task_panes
2021-07-25 17:49:45,939 - DEBUG :     test
2021-07-25 17:49:45,939 - DEBUG :     ribbon_functions
2021-07-25 17:49:45,939 - DEBUG :     debugging
2021-07-25 17:49:45,939 - DEBUG :     meta_variables
2021-07-25 17:49:45,939 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:49:45,939 - DEBUG : ------------------------------
2021-07-25 17:49:45,941 - DEBUG : Attempting to load python38.dll
2021-07-25 17:49:45,944 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:49:45,945 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:49:45,945 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:49:46,067 - DEBUG : Calling Py_Initialize...
2021-07-25 17:49:46,188 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:49:46,189 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:49:46,189 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:49:46,189 - DEBUG : Python is initialized.
2021-07-25 17:49:46,190 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:49:46,192 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:49:46,192 - DEBUG : Looking for module 'site'...
2021-07-25 17:49:46,225 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:49:46,225 - DEBUG : Importing pyxll module
2021-07-25 17:49:46,225 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:49:46,225 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:49:46,225 - DEBUG :   Detected Python3
2021-07-25 17:49:46,267 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:49:46,275 - DEBUG : pyxll module imported
2021-07-25 17:49:46,275 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:49:46,275 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:49:46,275 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:49:46,282 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:49:46,282 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:49:46,527 - DEBUG : Importing misc
2021-07-25 17:49:46,528 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:49:46,528 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:49:46,528 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:49:46,528 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:49:46,528 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:49:46,528 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:49:46,530 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:49:46,530 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:49:46,530 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:49:46,530 - DEBUG : Imported misc
2021-07-25 17:49:46,530 - DEBUG : Importing worksheetfuncs
2021-07-25 17:49:46,530 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:49:46,532 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:49:46,532 - DEBUG : Imported worksheetfuncs
2021-07-25 17:49:46,532 - DEBUG : Importing menus
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:49:46,540 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:49:46,541 - DEBUG : Imported menus
2021-07-25 17:49:46,541 - DEBUG : Importing callbacks
2021-07-25 17:49:46,542 - DEBUG : Imported callbacks
2021-07-25 17:49:46,542 - DEBUG : Importing custom_task_panes
2021-07-25 17:49:46,542 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:49:46,543 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:49:46,543 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:49:46,544 - DEBUG : Imported custom_task_panes
2021-07-25 17:49:46,544 - DEBUG : Importing test
2021-07-25 17:49:46,544 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:49:46,545 - DEBUG : Imported test
2021-07-25 17:49:46,545 - DEBUG : Importing ribbon_functions
2021-07-25 17:49:47,707 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:49:47,725 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:49:47,725 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:49:47,725 - DEBUG : interactive is False
2021-07-25 17:49:47,725 - DEBUG : platform is win32
2021-07-25 17:49:47,725 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_930000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_930000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:49:47,788 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:49:47,791 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:49:47,991 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:49:47,995 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:49:47,997 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002A1D347D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002A1D34D9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002A1D3576E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002A1D34E5250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000002A1D347D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000002A1D34D9DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000002A1D3576E80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000002A1D34E5250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:49:47,997 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:49:47,997 - DEBUG : Imported ribbon_functions
2021-07-25 17:49:47,997 - DEBUG : Importing debugging
2021-07-25 17:49:48,964 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:49:48,964 - DEBUG : Imported debugging
2021-07-25 17:49:48,964 - DEBUG : Importing meta_variables
2021-07-25 17:49:48,964 - DEBUG : Imported meta_variables
2021-07-25 17:49:49,023 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:49:49,025 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:49:49,048 - INFO : This product is licensed to 
2021-07-25 17:49:49,048 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:49:49,059 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:49:49,059 - DEBUG : Binding Python functions to Excel
2021-07-25 17:49:49,059 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:49:49,059 - DEBUG :     - pyxll_version
2021-07-25 17:49:49,059 - DEBUG :     - python_version
2021-07-25 17:49:49,059 - DEBUG :     - win32api_is_installed
2021-07-25 17:49:49,059 - DEBUG :     - win32com_is_installed
2021-07-25 17:49:49,059 - DEBUG :     - numpy_is_installed
2021-07-25 17:49:49,059 - DEBUG :     - pyxll_logfile
2021-07-25 17:49:49,059 - DEBUG :     - get_formula
2021-07-25 17:49:49,059 - DEBUG :     - get_array_formula
2021-07-25 17:49:49,059 - DEBUG :     - get_last_error
2021-07-25 17:49:49,059 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:49:49,059 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:49:49,059 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:49:49,059 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:49:49,059 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:49:49,059 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:49:49,059 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:49:49,059 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:49:49,059 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:49:49,059 - DEBUG :     - xl_cell_example
2021-07-25 17:49:49,059 - DEBUG :     - recalc_on_open_test
2021-07-25 17:49:49,059 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:49:49,059 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:49:49,059 - DEBUG :     - hello
2021-07-25 17:49:49,059 - DEBUG :     - one_cell_one_sim
2021-07-25 17:49:49,059 - DEBUG :     - one_row_one_sim
2021-07-25 17:49:49,076 - DEBUG : Adding menus to Excel:
2021-07-25 17:49:49,076 - DEBUG :   - PyXLL
2021-07-25 17:49:49,076 - DEBUG :     - Reload PyXLL
2021-07-25 17:49:49,076 - DEBUG :     - Another example menu item
2021-07-25 17:49:49,076 - DEBUG :     - More Examples
2021-07-25 17:49:49,076 - DEBUG :       - Click me
2021-07-25 17:49:49,076 - DEBUG :       - Unicode Test
2021-07-25 17:49:49,076 - DEBUG :     - Open log file
2021-07-25 17:49:49,076 - DEBUG :     - Attach To VS Code
2021-07-25 17:49:49,076 - DEBUG :     - Custom Task Panes
2021-07-25 17:49:49,076 - DEBUG :       - Qt
2021-07-25 17:49:49,076 - DEBUG :       - Tk
2021-07-25 17:49:49,076 - DEBUG :       - Wx
2021-07-25 17:49:49,076 - DEBUG :     - Example Menu Item 1
2021-07-25 17:49:49,076 - DEBUG :     - Example Tk CTP
2021-07-25 17:49:49,076 - DEBUG :     - Show last error
2021-07-25 17:49:49,076 - DEBUG :     - About PyXLL...
2021-07-25 17:49:49,076 - DEBUG :   - PyXLL example menu
2021-07-25 17:49:49,076 - DEBUG :     - Click me
2021-07-25 17:49:49,165 - DEBUG : Finished binding Python functions
2021-07-25 17:49:49,165 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:49:49,166 - DEBUG : pyxll._post_open complete.
2021-07-25 17:49:49,183 - DEBUG : PyXLL initialization complete.
2021-07-25 17:49:49,536 - DEBUG : Error checking license server.
2021-07-25 17:49:49,536 - DEBUG : Response code 0.
2021-07-25 17:49:49,536 - DEBUG : Error getting returned document
2021-07-25 17:49:49,536 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:49:54,023 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:49:54,023 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:49:54,046 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:49:54,105 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:50:16,157 - ERROR : Error calling ribbon function 'ribbon_functions.inputNormal'
2021-07-25 17:50:18,401 - ERROR : Traceback (most recent call last):
2021-07-25 17:50:18,401 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 109, in inputNormal
2021-07-25 17:50:18,402 - ERROR :     initSheetDistributionDict(control=control)
2021-07-25 17:50:18,402 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\ribbon_functions.py", line 65, in initSheetDistributionDict
2021-07-25 17:50:18,403 - ERROR :     xl.Sheets.Add()
2021-07-25 17:50:18,403 - ERROR :   File "C:\Users\ethan\AppData\Local\Temp\gen_py\3.8\00020813-0000-0000-C000-000000000046x0x1x9\Sheets.py", line 33, in Add
2021-07-25 17:50:18,403 - ERROR :     ret = self._oleobj_.InvokeTypes(181, LCID, 1, (9, 0), ((12, 17), (12, 17), (12, 17), (12, 17)),Before
2021-07-25 17:50:18,404 - ERROR : pywintypes.com_error: (-2147352567, 'Exception occurred.', (0, 'Microsoft Excel', 'Add method of Sheets class failed', 'xlmain11.chm', 0, -2146827284), None)
2021-07-25 17:51:24,851 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:51:28,366 - ERROR : Traceback (most recent call last):
2021-07-25 17:51:28,366 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 135, in advanced_simulation_cell_wrapper
2021-07-25 17:51:28,367 - ERROR :     hist_data = advanced_simulation_cell(control)
2021-07-25 17:51:28,367 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-25 17:51:28,367 - ERROR :     variable_dict[sheet_cell_address] = advanced_simulation_cell(control=control,
2021-07-25 17:51:28,367 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 95, in advanced_simulation_cell
2021-07-25 17:51:28,367 - ERROR :     variable_dict[sheet_cell_address] = advanced_simulation_cell(control=control,
2021-07-25 17:51:28,367 - ERROR :   File "C:\Users\ethan\Documents\simExcel\examples\advanced_simulation.py", line 129, in advanced_simulation_cell
2021-07-25 17:51:28,367 - ERROR :     result = parser.parse(formula[1:]).evaluate(variable_dict)
2021-07-25 17:51:28,367 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 552, in parse
2021-07-25 17:51:28,367 - ERROR :     self.error_parsing(self.pos, 'parity')
2021-07-25 17:51:28,367 - ERROR :   File "C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\py_expression_eval\__init__.py", line 562, in error_parsing
2021-07-25 17:51:28,370 - ERROR :     raise Exception(self.errormsg)
2021-07-25 17:51:28,370 - ERROR : Exception: parse error [column 0]: parity, expression: 
2021-07-25 17:52:23,325 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:56:28,024 - ERROR : Error calling ribbon function 'advanced_simulation.advanced_simulation_cell_wrapper'
2021-07-25 17:57:50,909 - DEBUG : Closing PyXLL Python module.
2021-07-25 17:57:50,912 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 17:57:50,916 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 17:57:50,916 - DEBUG : PyXLL Python module closed.
2021-07-25 17:57:55,461 - DEBUG : 
Sun Jul 25 17:57:55 2021
---------- PyXLL Stopped ----------
2021-07-25 17:57:56,716 - INFO : 
------------------------------------------------------------------------------
  PyXLL 

  Version          5.1.1
  Buildtime        2021-04-28 17:21
  Python version   3.8
  Excel version    16.0 (64 bit)

  www.pyxll.com
------------------------------------------------------------------------------
2021-07-25 17:57:56,716 - DEBUG : Config file 'C:\Users\ethan\Documents\simExcel\pyxll.cfg' read.
2021-07-25 17:57:56,716 - WARNING : Python executable 'C:\Program Files\Python38\python.exe' does not exist.
2021-07-25 17:57:56,716 - DEBUG : -------- PyXLL config --------
2021-07-25 17:57:56,716 - DEBUG : [LOG]
2021-07-25 17:57:56,716 - DEBUG : encoding = utf-8
2021-07-25 17:57:56,716 - DEBUG : file = pyxll.20210725.log
2021-07-25 17:57:56,717 - DEBUG : format = %(asctime)s - %(levelname)s : %(message)s
2021-07-25 17:57:56,717 - DEBUG : path = C:\Users\ethan\Documents\simExcel\logs
2021-07-25 17:57:56,717 - DEBUG : verbosity = debug
2021-07-25 17:57:56,717 - DEBUG : 
2021-07-25 17:57:56,717 - DEBUG : [PYTHON]
2021-07-25 17:57:56,717 - DEBUG : executable = C:\Program Files\Python38\python.exe
2021-07-25 17:57:56,717 - DEBUG : pythonpath = C:\Users\ethan\Documents\simExcel\examples
2021-07-25 17:57:56,717 - DEBUG : 
2021-07-25 17:57:56,717 - DEBUG : [PYXLL]
2021-07-25 17:57:56,717 - DEBUG : clear_object_cache_on_reload = 1
2021-07-25 17:57:56,717 - DEBUG : developer_mode = 1
2021-07-25 17:57:56,717 - DEBUG : error_handler = pyxll.error_handler
2021-07-25 17:57:56,717 - DEBUG : modules = 
2021-07-25 17:57:56,717 - DEBUG :     misc
2021-07-25 17:57:56,717 - DEBUG :     worksheetfuncs
2021-07-25 17:57:56,717 - DEBUG :     menus
2021-07-25 17:57:56,717 - DEBUG :     callbacks
2021-07-25 17:57:56,717 - DEBUG :     custom_task_panes
2021-07-25 17:57:56,717 - DEBUG :     test
2021-07-25 17:57:56,717 - DEBUG :     ribbon_functions
2021-07-25 17:57:56,717 - DEBUG :     debugging
2021-07-25 17:57:56,717 - DEBUG :     meta_variables
2021-07-25 17:57:56,717 - DEBUG : ribbon = C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml
2021-07-25 17:57:56,717 - DEBUG : ------------------------------
2021-07-25 17:57:56,719 - DEBUG : Attempting to load python38.dll
2021-07-25 17:57:56,723 - DEBUG : Loaded python dll C:\Users\ethan\AppData\Local\Programs\Python\Python38\python38.dll
2021-07-25 17:57:56,724 - DEBUG : Checking Py_IsInitialized...
2021-07-25 17:57:56,724 - DEBUG : Setting Python program name to C:\Program Files\Python38\python.exe
2021-07-25 17:57:56,850 - DEBUG : Calling Py_Initialize...
2021-07-25 17:57:56,965 - DEBUG : Setting sys.executable to C:\Program Files\Python38\python.exe
2021-07-25 17:57:56,966 - DEBUG : Setting sys._base_executable to C:\Program Files\Python38\python.exe
2021-07-25 17:57:56,966 - DEBUG : Prepending 'C:\Users\ethan\Documents\simExcel\examples' to the pythonpath.
2021-07-25 17:57:56,966 - DEBUG : Python is initialized.
2021-07-25 17:57:56,967 - DEBUG : Looking for module 'pyxll-startup'...
2021-07-25 17:57:56,969 - DEBUG : ImportError: No module named 'pyxll-startup'
2021-07-25 17:57:56,969 - DEBUG : Looking for module 'site'...
2021-07-25 17:57:57,003 - DEBUG : Imported site (C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\site.py)
2021-07-25 17:57:57,003 - DEBUG : Importing pyxll module
2021-07-25 17:57:57,003 - DEBUG :   Python version is 3.8.0.final.0
2021-07-25 17:57:57,003 - DEBUG :   os imported: C:\Users\ethan\AppData\Local\Programs\Python\Python38\Lib\os.py
2021-07-25 17:57:57,003 - DEBUG :   Detected Python3
2021-07-25 17:57:57,047 - DEBUG :   Setting coinit_flags=COINIT_APARTMENTTHREADED
2021-07-25 17:57:57,047 - DEBUG : pyxll module imported
2021-07-25 17:57:57,047 - DEBUG : Initializing PyXLL Python module.
2021-07-25 17:57:57,047 - DEBUG : pyxll.__file__ = C:\Users\ethan\Documents\simExcel\pyxll.xll
2021-07-25 17:57:57,047 - DEBUG : PyXLL Python module initialized.
2021-07-25 17:57:57,061 - DEBUG : Functions will not be cancellable by default.
2021-07-25 17:57:57,062 - DEBUG : Error handler set to pyxll.error_handler
2021-07-25 17:57:57,303 - DEBUG : Importing misc
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'pyxll_version() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'python_version() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'win32api_is_installed() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'win32com_is_installed() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'numpy_is_installed() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'pyxll_logfile() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'get_formula(cell: xl_cell) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'get_array_formula(cell: xl_cell) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'get_last_error(cell: xl_cell) -> str'
2021-07-25 17:57:57,304 - DEBUG : Imported misc
2021-07-25 17:57:57,304 - DEBUG : Importing worksheetfuncs
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'basic_pyxll_function_1(x: var, y: var, z: var) -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'basic_pyxll_function_2(x: int, y: float, z: bool) -> float'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'basic_pyxll_function_3(x: var) -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'var_pyxll_function_1(x: var) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'var_pyxll_function_2(x: bool) -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'datetime_pyxll_function_1(x: date) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'datetime_pyxll_function_2(x: time) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'datetime_pyxll_function_3(x: datetime) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'datetime_pyxll_function_4(x: datetime[][]) -> datetime'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'xl_cell_example(cell: xl_cell) -> str'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'recalc_on_open_test() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function() -> var'
2021-07-25 17:57:57,304 - DEBUG : Found worksheet function 'formatted_datetime_pyxll_function_2() -> var'
2021-07-25 17:57:57,311 - DEBUG : Imported worksheetfuncs
2021-07-25 17:57:57,311 - DEBUG : Importing menus
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Example Menu Item 1' in 'None' mapped to 'on_example_menu_item_1'
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Another example menu item' in 'None' mapped to 'on_example_menu_item_2'
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Click me' in 'PyXLL example menu' mapped to 'on_example_menu_item_3'
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Click me' in 'None/More Examples' mapped to 'on_example_submenu_item_1'
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Unicode Test' in 'None/More Examples' mapped to 'on_unicode_test'
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Open log file' in 'None' mapped to 'on_open_logfile'
2021-07-25 17:57:57,316 - DEBUG : Found menu item 'Show last error' in 'None' mapped to 'show_last_error'
2021-07-25 17:57:57,316 - DEBUG : Imported menus
2021-07-25 17:57:57,316 - DEBUG : Importing callbacks
2021-07-25 17:57:57,316 - DEBUG : Imported callbacks
2021-07-25 17:57:57,316 - DEBUG : Importing custom_task_panes
2021-07-25 17:57:57,319 - DEBUG : Found menu item 'Tk' in 'None/Custom Task Panes' mapped to 'tk_ctp_menu'
2021-07-25 17:57:57,319 - DEBUG : Found menu item 'Qt' in 'None/Custom Task Panes' mapped to 'qt_ctp_menu'
2021-07-25 17:57:57,319 - DEBUG : Found menu item 'Wx' in 'None/Custom Task Panes' mapped to 'wx_ctp_menu'
2021-07-25 17:57:57,319 - DEBUG : Imported custom_task_panes
2021-07-25 17:57:57,319 - DEBUG : Importing test
2021-07-25 17:57:57,320 - DEBUG : Found worksheet function 'hello(name: var) -> var'
2021-07-25 17:57:57,320 - DEBUG : Imported test
2021-07-25 17:57:57,320 - DEBUG : Importing ribbon_functions
2021-07-25 17:57:58,427 - DEBUG : matplotlib data path: C:\Users\ethan\AppData\Local\Programs\Python\Python38\lib\site-packages\matplotlib\mpl-data
2021-07-25 17:57:58,442 - DEBUG : CONFIGDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:57:58,442 - DEBUG : matplotlib version 3.4.2
2021-07-25 17:57:58,458 - DEBUG : interactive is False
2021-07-25 17:57:58,458 - DEBUG : platform is win32
2021-07-25 17:57:58,458 - DEBUG : loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_pyxll_fb0000', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_system32', 'pywin32_bootstrap', 'site', '_pyxll', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'token', 'tokenize', 'imp', 'linecache', 'traceback', '_weakrefset', 'weakref', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'configparser', 'math', '_datetime', 'datetime', 'posixpath', 'fnmatch', 'glob', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'copy', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', '_bisect', 'bisect', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_pyxll_fb0000.pyxll', 'pyxll', '__future__', 'binascii', 'errno', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_struct', 'struct', 'zipfile', 'pkgutil', 'platform', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'email', 'email.errors', 'email.quoprimime', 'base64', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', '_sha512', '_random', 'random', '_socket', 'select', 'selectors', 'socket', 'urllib', 'urllib.parse', 'locale', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'tempfile', 'textwrap', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources.extern.six', 'pkg_resources._vendor.six', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.six.moves', 'pkg_resources.py31compat', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.specifiers', 'pprint', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'sysconfig', 'pkg_resources', 'misc', 'worksheetfuncs', 'shlex', 'signal', 'msvcrt', '_winapi', 'subprocess', 'webbrowser', 'menus', 'callbacks', 'custom_task_panes', 'test', 'ribbon_functions', 'examples', '_tkinter', 'tkinter.constants', 'tkinter', 'numpy._globals', 'numpy.__config__', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'numpy._version', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_23', 'numpy.random._common', '_hashlib', '_blake2', '_sha3', 'hashlib', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy._lib.messagestream', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy._lib.decorator', 'scipy.spatial._plotutils', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.spatial._procrustes', 'dataclasses', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage.morphology', 'scipy.ndimage.measurements', 'scipy.ndimage', 'scipy.stats._distr_params', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'difflib', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate.odepack', 'scipy.integrate._quadpack', 'scipy.integrate.quadpack', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate.fitpack', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.interpolate', 'scipy.interpolate.rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._rvs_sampling', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats.biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats.mstats_basic', 'scipy.stats._wilcoxon_data', 'scipy.stats._hypotests', 'scipy.stats.stats', 'scipy.stats.statlib', 'scipy.stats._common', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats.morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats.mvn', 'scipy.stats.kde', 'scipy.stats.mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._bootstrap', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats', 'meta_variables', 'error_functions', 'examples.tkinter_frames', 'matplotlib', 'distutils', 'distutils.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'gzip', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'uuid', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'array', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver', 'dateutil._common', 'dateutil.rrule', 'dateutil.relativedelta', '_decimal', 'decimal', 'dateutil.tz._common', 'dateutil.tz._factories', 'ctypes.wintypes', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'matplotlib.units', 'matplotlib.dates']
2021-07-25 17:57:58,495 - DEBUG : CACHEDIR=C:\Users\ethan\.matplotlib
2021-07-25 17:57:58,512 - DEBUG : Using fontManager instance from C:\Users\ethan\.matplotlib\fontlist-v330.json
2021-07-25 17:57:58,700 - DEBUG : Loaded backend agg version unknown.
2021-07-25 17:57:58,700 - DEBUG : Found menu item 'Example Tk CTP' in 'None' mapped to 'DistrInput'
2021-07-25 17:57:58,700 - DEBUG : Found worksheet function 'one_cell_one_sim(input_string: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001550AB1D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001550AB73DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001550AC0DE80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001550AB87250>, 'params': 'loc, scale', 'Name': 'Exponential'}}, distributions_dictionary: var = {'N': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.norm_gen object at 0x000001550AB1D400>, 'params': 'mean, variance', 'Name': 'Normal Distribution'}, 'C': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.cauchy_gen object at 0x000001550AB73DC0>, 'params': 'mean, scaling', 'Name': 'Cauchy'}, 'T': {'num_params': 3, 'scipy_handle': <scipy.stats._continuous_distns.triang_gen object at 0x000001550AC0DE80>, 'params': 'c, loc, scale', 'Name': 'Triangular'}, 'E': {'num_params': 2, 'scipy_handle': <scipy.stats._continuous_distns.expon_gen object at 0x000001550AB87250>, 'params': 'loc, scale', 'Name': 'Exponential'}}) -> var'
2021-07-25 17:57:58,700 - DEBUG : Found worksheet function 'one_row_one_sim(input_row: var) -> var'
2021-07-25 17:57:58,700 - DEBUG : Imported ribbon_functions
2021-07-25 17:57:58,700 - DEBUG : Importing debugging
2021-07-25 17:57:59,662 - DEBUG : Found menu item 'Attach To VS Code' in 'None' mapped to 'vscode_enable_attach'
2021-07-25 17:57:59,662 - DEBUG : Imported debugging
2021-07-25 17:57:59,662 - DEBUG : Importing meta_variables
2021-07-25 17:57:59,662 - DEBUG : Imported meta_variables
2021-07-25 17:57:59,720 - DEBUG : Reading ribbon XML file 'C:\Users\ethan\Documents\simExcel\examples\ribbon\custom.xml'
2021-07-25 17:57:59,731 - DEBUG : <customUI xmlns="http://schemas.microsoft.com/office/2006/01/customui" loadImage="pyxll.load_image">
	<ribbon>
		<tabs>
			<tab id="CustomTab" label="Custom Tab">
				<group id="ContentGroup" label="Content">
					<button id="addOne" label="Add one" onAction="ribbon_functions.on_text_button"/>
					<button id="plotDistribution" label="Visualize distribution" onAction="ribbon_functions.display_distribution"/>
					<button id="distributionInfo" label="Distribution info" onAction="ribbon_functions.distribution_info"/>
				</group>
				<group id="Tools" label="Tools">
					<button id="Reload" image="C:\Users\ethan\Documents\simExcel\examples\ribbon\icons\reload.png" label="Reload PyXLL" onAction="pyxll.reload" size="large"/>
				</group>
				<group id="DistributionData" label="input distribution">
					<button id="NormalDistribution" label="Normal" onAction="ribbon_functions.inputNormal"/>
					<button id="TriangularDistribution" label="Triangular" onAction="ribbon_functions.inputTriangular"/>
					<button id="ExponentialDistribution" label="Exponential" onAction="ribbon_functions.inputExponential"/>
				</group>
				<group id="block_simulate" label="Simulate">
					<button id="simulate_regular" label="Simulate (regular shape)" onAction="ribbon_functions.regular_simulate"/>
					<button id="simulate_irregular" label="Simulate (irregular shape)" onAction="ribbon_functions.irregular_simulate"/>
				</group>
				<group id="cell_values" label="Cell values">
					<button id="sim_value" label="Sample values" onAction="ribbon_functions.cell_value_simulate"/>
					<button id="default_value" label="Default values" onAction="error_functions.default_values_wrapper"/>
					<button id="explain_error" label="Explain error" onAction="error_functions.explainErrorWrapper"/>
				</group>
				<group id="advanced_Simulate" label="Advanced simulation">
					<button id="advanced_simulation" label="Advanced simulation" onAction="advanced_simulation.advanced_simulation_cell_wrapper"/>
				</group>
			</tab>
		</tabs>
	</ribbon>
</customUI>


2021-07-25 17:57:59,749 - INFO : This product is licensed to 
2021-07-25 17:57:59,749 - INFO : The license will expire on 2021-08-21 (27 days left)
2021-07-25 17:57:59,761 - DEBUG : Calling pyxll._post_open.
2021-07-25 17:57:59,761 - DEBUG : Binding Python functions to Excel
2021-07-25 17:57:59,761 - DEBUG : Adding worksheet functions to Excel:
2021-07-25 17:57:59,761 - DEBUG :     - pyxll_version
2021-07-25 17:57:59,761 - DEBUG :     - python_version
2021-07-25 17:57:59,761 - DEBUG :     - win32api_is_installed
2021-07-25 17:57:59,762 - DEBUG :     - win32com_is_installed
2021-07-25 17:57:59,762 - DEBUG :     - numpy_is_installed
2021-07-25 17:57:59,762 - DEBUG :     - pyxll_logfile
2021-07-25 17:57:59,762 - DEBUG :     - get_formula
2021-07-25 17:57:59,762 - DEBUG :     - get_array_formula
2021-07-25 17:57:59,762 - DEBUG :     - get_last_error
2021-07-25 17:57:59,762 - DEBUG :     - basic_pyxll_function_1
2021-07-25 17:57:59,762 - DEBUG :     - basic_pyxll_function_2
2021-07-25 17:57:59,762 - DEBUG :     - basic_pyxll_function_3
2021-07-25 17:57:59,762 - DEBUG :     - var_pyxll_function_1
2021-07-25 17:57:59,762 - DEBUG :     - var_pyxll_function_2
2021-07-25 17:57:59,762 - DEBUG :     - datetime_pyxll_function_1
2021-07-25 17:57:59,762 - DEBUG :     - datetime_pyxll_function_2
2021-07-25 17:57:59,762 - DEBUG :     - datetime_pyxll_function_3
2021-07-25 17:57:59,762 - DEBUG :     - datetime_pyxll_function_4
2021-07-25 17:57:59,762 - DEBUG :     - xl_cell_example
2021-07-25 17:57:59,762 - DEBUG :     - recalc_on_open_test
2021-07-25 17:57:59,762 - DEBUG :     - formatted_datetime_pyxll_function
2021-07-25 17:57:59,762 - DEBUG :     - formatted_datetime_pyxll_function_2
2021-07-25 17:57:59,762 - DEBUG :     - hello
2021-07-25 17:57:59,762 - DEBUG :     - one_cell_one_sim
2021-07-25 17:57:59,762 - DEBUG :     - one_row_one_sim
2021-07-25 17:57:59,781 - DEBUG : Adding menus to Excel:
2021-07-25 17:57:59,781 - DEBUG :   - PyXLL
2021-07-25 17:57:59,781 - DEBUG :     - Reload PyXLL
2021-07-25 17:57:59,781 - DEBUG :     - Another example menu item
2021-07-25 17:57:59,781 - DEBUG :     - More Examples
2021-07-25 17:57:59,781 - DEBUG :       - Click me
2021-07-25 17:57:59,781 - DEBUG :       - Unicode Test
2021-07-25 17:57:59,781 - DEBUG :     - Open log file
2021-07-25 17:57:59,781 - DEBUG :     - Attach To VS Code
2021-07-25 17:57:59,781 - DEBUG :     - Custom Task Panes
2021-07-25 17:57:59,781 - DEBUG :       - Qt
2021-07-25 17:57:59,781 - DEBUG :       - Tk
2021-07-25 17:57:59,781 - DEBUG :       - Wx
2021-07-25 17:57:59,781 - DEBUG :     - Example Menu Item 1
2021-07-25 17:57:59,781 - DEBUG :     - Example Tk CTP
2021-07-25 17:57:59,781 - DEBUG :     - Show last error
2021-07-25 17:57:59,781 - DEBUG :     - About PyXLL...
2021-07-25 17:57:59,781 - DEBUG :   - PyXLL example menu
2021-07-25 17:57:59,781 - DEBUG :     - Click me
2021-07-25 17:57:59,838 - DEBUG : Finished binding Python functions
2021-07-25 17:57:59,844 - DEBUG : Calling on open callback 'callbacks.on_open'
2021-07-25 17:57:59,844 - DEBUG : pyxll._post_open complete.
2021-07-25 17:57:59,848 - DEBUG : PyXLL initialization complete.
2021-07-25 17:58:00,267 - DEBUG : Error checking license server.
2021-07-25 17:58:00,267 - DEBUG : Response code 0.
2021-07-25 17:58:00,267 - DEBUG : Error getting returned document
2021-07-25 17:58:00,267 - DEBUG : Connection blocked by a firewall?
2021-07-25 17:58:11,451 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 17:58:22,604 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 17:58:33,744 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 17:58:45,333 - WARNING : Delay in processing scheduled callbacks: Error getting Excel Window instance
2021-07-25 17:58:46,884 - DEBUG : Loading PyXLL COM Addin
2021-07-25 17:58:46,884 - DEBUG : Looking for addin PyXLL.PyXLL.
2021-07-25 17:58:46,903 - DEBUG : Loading addin PyXLL.PyXLL.
2021-07-25 17:58:46,958 - DEBUG : Loaded addin PyXLL.PyXLL.
2021-07-25 17:59:50,728 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,728 - DEBUG : findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,729 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,730 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,731 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,732 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,733 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 17:59:50,734 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,735 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,736 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gabriola' (GABRIOLA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,737 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,744 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:59:50,746 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,754 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,755 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Calibri' (CalibriL.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:59:50,757 - DEBUG : findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:59:50,765 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,767 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Segoe UI' (SEGOEUISL.TTF) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,775 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGIB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,777 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,785 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Nirmala UI' (NIRMALAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,787 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJH.TTC) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,796 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (MSJHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Calibri' (CalibriLI.ttf) italic normal 300 normal>) = 11.145
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,798 - DEBUG : findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,806 - DEBUG : findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (MSYHBD.TTC) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Gadugi' (GADUGI.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-07-25 17:59:50,808 - DEBUG : findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-07-25 17:59:50,808 - DEBUG : findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\ethan\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-07-25 18:00:40,227 - DEBUG : Closing PyXLL Python module.
2021-07-25 18:00:40,227 - DEBUG : Calling on close callback 'callbacks.on_close'
2021-07-25 18:00:40,227 - INFO : callbacks.on_close: PyXLL is closing
2021-07-25 18:00:40,228 - DEBUG : PyXLL Python module closed.
2021-07-25 18:00:44,560 - DEBUG : 
Sun Jul 25 18:00:44 2021
---------- PyXLL Stopped ----------
